/*
    *** AUTOGENERATED: DO NOT EDIT ***
    Name:       wrap.cpp
    Purpose:    Wrap wxWindows classes and methods for wxBasic (GTK+)
    Author:     David Cuny
    Copyright:  (c) 2002 David Cuny <dcuny@lanset.com>
    Licence:    LGPL
*/

#ifdef __BORLANDC__
    #pragma warn -8028
    #pragma warn -8006
#endif
#include "wx/calctrl.h"
#include "wx/caret.h"
#include "wx/dnd.h"
#include "wx/imaglist.h"
#include "wx/mdi.h"
#include "wx/socket.h"
#include "wx/tooltip.h"
#include "wx/cmndata.h"
#include "wx/grid.h"
#include "wx/tipdlg.h"
#include "wx/filedlg.h"
#include "wx/colordlg.h"
#include "wx/textdlg.h"
#include "wx/choicdlg.h"
#include "wx/msgdlg.h"
#include "wx/utils.h"
#include "wx/app.h"
#include "wx/window.h"
#include <wx/utils.h>
#include "wx/colour.h"
#include <wx/pen.h>
#include "wx/palette.h"
#include "wx/brush.h"
#include "wx/gdicmn.h"
#include "wx/dc.h"
#include "wx/dcmemory.h"
#include "wx/dcclient.h"
#include "wx/dcscreen.h"
#include "wx/bitmap.h"
#include "wx/image.h"
#include "wx/cursor.h"
#include "wx/minifram.h"
#include "wx/splitter.h"
#include "wx/checklst.h"
#include "wx/listctrl.h"
#include "wx/treectrl.h"
#include "wx/tbarbase.h"
#include "wx/toolbar.h"
#include "wx/notebook.h"
#include "wx/sashwin.h"
#include "wx/laywin.h"
#include "wx/fontdlg.h"
#include "wx/printdlg.h"
#include "wx/menu.h"
#include "wx/menuitem.h"
#include "wx/event.h"
#include "wx/timer.h"
#include "wx/dialup.h"
#include "wx/process.h"
#include "wx/spinbutt.h"
#include "wx/spinctrl.h"
#include "wx/wizard.h"
#include "wx/layout.h"
#include "wx/font.h"
int _wxResourceTable = wAddClass( 0, "wxResourceTable" );
int _wxAcceleratorTable = wAddClass( 0, "wxAcceleratorTable" );
int _wxArrayInt = wAddClass( 0, "wxArrayInt" );
int _wxArrayTreeItemIds = wAddClass( 0, "wxArrayTreeItemIds" );
int _wxCalendarDateAttr = wAddClass( 0, "wxCalendarDateAttr" );
int _wxCaret = wAddClass( 0, "wxCaret" );
int _wxClassInfo = wAddClass( 0, "wxClassInfo" );
int _wxDateTime = wAddClass( 0, "wxDateTime" );
int _wxDropTarget = wAddClass( 0, "wxDropTarget" );
int _wxFontData = wAddClass( 0, "wxFontData" );
int _wxIcon = wAddClass( 0, "wxIcon" );
int _wxImageList = wAddClass( 0, "wxImageList" );
int _wxListItem = wAddClass( 0, "wxListItem" );
int _wxLog = wAddClass( 0, "wxLog" );
int _wxMDIClientWindow = wAddClass( 0, "wxMDIClientWindow" );
int _wxMenuItemList = wAddClass( 0, "wxMenuItemList" );
int _wxObjectRefData = wAddClass( 0, "wxObjectRefData" );
int _wxPrintDialogData = wAddClass( 0, "wxPrintDialogData" );
int _wxRegion = wAddClass( 0, "wxRegion" );
int _wxRect = wAddClass( 0, "wxRect" );
int _wxPageSetupDialogData = wAddClass( 0, "wxPageSetupDialogData" );
int _wxSocketBase = wAddClass( 0, "wxSocketBase" );
int _wxToolTip = wAddClass( 0, "wxToolTip" );
int _wxTreeItemData = wAddClass( 0, "wxTreeItemData" );
int _wxTreeItemId = wAddClass( 0, "wxTreeItemId" );
int _wxValidator = wAddClass( 0, "wxValidator" );
int _wxWindowList = wAddClass( 0, "wxWindowList" );
int _wxList = wAddClass( 0, "wxList" );
int _wxPrintData = wAddClass( 0, "wxPrintData" );
int _wxMask = wAddClass( 0, "wxMask" );
int _wxProcess = wAddClass( 0, "wxProcess" );
int _wxImageHandler = wAddClass( 0, "wxImageHandler" );
int _wxGridTableBase = wAddClass( 0, "wxGridTableBase" );
int _wxPoint = wAddClass( 0, "wxPoint" );
int _wxSize = wAddClass( 0, "wxSize" );
int _wxObject = wAddClass( 0, "wxObject" );
int _wxColourData = wAddClass( _wxObject, "wxColourData" );
int _wxColour = wAddClass( _wxObject, "wxColour" );
int _wxColor = wAddClass( _wxColour, "wxColor" );
int _wxGDIObject = wAddClass( _wxObject, "wxGDIObject" );
int _wxPen = wAddClass( _wxGDIObject, "wxPen" );
int _wxPenFromColour = wAddClass( _wxPen, "wxPenFromColour" );
int _wxPenFromColor = wAddClass( _wxPen, "wxPenFromColor" );
int _wxPenFromColourName = wAddClass( _wxPen, "wxPenFromColourName" );
int _wxPenFromColorName = wAddClass( _wxPen, "wxPenFromColorName" );
int _wxPenCopy = wAddClass( _wxPen, "wxPenCopy" );
int _wxPalette = wAddClass( _wxGDIObject, "wxPalette" );
int _wxBrush = wAddClass( _wxGDIObject, "wxBrush" );
int _wxBrushFromColourName = wAddClass( _wxBrush, "wxBrushFromColourName" );
int _wxBrushFromColorName = wAddClass( _wxBrush, "wxBrushFromColorName" );
int _wxBrushFromBitmap = wAddClass( _wxBrush, "wxBrushFromBitmap" );
int _Copy = wAddClass( _wxBrush, "Copy" );
int _wxBrushList = wAddClass( _wxList, "wxBrushList" );
int _wxDC = wAddClass( _wxObject, "wxDC" );
int _wxMemoryDC = wAddClass( _wxDC, "wxMemoryDC" );
int _wxWindowDC = wAddClass( _wxDC, "wxWindowDC" );
int _wxClientDC = wAddClass( _wxWindowDC, "wxClientDC" );
int _wxPaintDC = wAddClass( _wxWindowDC, "wxPaintDC" );
int _wxScreenDC = wAddClass( _wxDC, "wxScreenDC" );
int _wxBitmap = wAddClass( _wxGDIObject, "wxBitmap" );
int _wxBitmapCopy = wAddClass( _wxBitmap, "wxBitmapCopy" );
int _wxEmptyBitmap = wAddClass( _wxBitmap, "wxEmptyBitmap" );
int _wxImage = wAddClass( _wxObject, "wxImage" );
int _wxNullImage = wAddClass( _wxImage, "wxNullImage" );
int _wxImageFromBitmap = wAddClass( _wxImage, "wxImageFromBitmap" );
int _wxEmptyImage = wAddClass( _wxImage, "wxEmptyImage" );
int _wxImageFromData = wAddClass( _wxImage, "wxImageFromData" );
int _wxImageFromFile = wAddClass( _wxImage, "wxImageFromFile" );
int _wxCursor = wAddClass( _wxBitmap, "wxCursor" );
int _wxEvtHandler = wAddClass( _wxObject, "wxEvtHandler" );
int _wxApp = wAddClass( _wxEvtHandler, "wxApp" );
int _wxWindow = wAddClass( _wxEvtHandler, "wxWindow" );
int _wxPanel = wAddClass( _wxWindow, "wxPanel" );
int _wxDialog = wAddClass( _wxPanel, "wxDialog" );
int _wxFrame = wAddClass( _wxWindow, "wxFrame" );
int _wxMDIParentFrame = wAddClass( _wxFrame, "wxMDIParentFrame" );
int _wxMDIChildFrame = wAddClass( _wxFrame, "wxMDIChildFrame" );
int _wxMiniFrame = wAddClass( _wxFrame, "wxMiniFrame" );
int _wxScrolledWindow = wAddClass( _wxPanel, "wxScrolledWindow" );
int _wxSplitterWindow = wAddClass( _wxWindow, "wxSplitterWindow" );
int _wxStatusBar = wAddClass( _wxWindow, "wxStatusBar" );
int _wxControl = wAddClass( _wxWindow, "wxControl" );
int _wxButton = wAddClass( _wxControl, "wxButton" );
int _wxBitmapButton = wAddClass( _wxButton, "wxBitmapButton" );
int _wxCalendarCtrl = wAddClass( _wxControl, "wxCalendarCtrl" );
int _wxCheckBox = wAddClass( _wxControl, "wxCheckBox" );
int _wxChoice = wAddClass( _wxControl, "wxChoice" );
int _wxComboBox = wAddClass( _wxChoice, "wxComboBox" );
int _wxGauge = wAddClass( _wxControl, "wxGauge" );
int _wxStaticBox = wAddClass( _wxControl, "wxStaticBox" );
int _wxListBox = wAddClass( _wxControl, "wxListBox" );
int _wxCheckListBox = wAddClass( _wxListBox, "wxCheckListBox" );
int _wxListCtrl = wAddClass( _wxControl, "wxListCtrl" );
int _wxTextCtrl = wAddClass( _wxControl, "wxTextCtrl" );
int _wxTreeCtrl = wAddClass( _wxControl, "wxTreeCtrl" );
int _wxScrollBar = wAddClass( _wxControl, "wxScrollBar" );
int _wxSpinButton = wAddClass( _wxControl, "wxSpinButton" );
int _wxSpinCtrl = wAddClass( _wxControl, "wxSpinCtrl" );
int _wxStaticText = wAddClass( _wxControl, "wxStaticText" );
int _wxStaticBitmap = wAddClass( _wxControl, "wxStaticBitmap" );
int _wxRadioBox = wAddClass( _wxControl, "wxRadioBox" );
int _wxRadioButton = wAddClass( _wxControl, "wxRadioButton" );
int _wxSlider = wAddClass( _wxControl, "wxSlider" );
int _wxToolBarBase = wAddClass( _wxControl, "wxToolBarBase" );
int _wxToolBar = wAddClass( _wxToolBarBase, "wxToolBar" );
int _wxNotebook = wAddClass( _wxControl, "wxNotebook" );
int _wxSashWindow = wAddClass( _wxWindow, "wxSashWindow" );
int _wxSashLayoutWindow = wAddClass( _wxSashWindow, "wxSashLayoutWindow" );
int _wxColourDialog = wAddClass( _wxDialog, "wxColourDialog" );
int _wxColorDialog = wAddClass( _wxColourDialog, "wxColorDialog" );
int _wxFileDialog = wAddClass( _wxDialog, "wxFileDialog" );
int _wxDirDialog = wAddClass( _wxDialog, "wxDirDialog" );
int _wxSingleChoiceDialog = wAddClass( _wxDialog, "wxSingleChoiceDialog" );
int _wxTextEntryDialog = wAddClass( _wxDialog, "wxTextEntryDialog" );
int _wxFontDialog = wAddClass( _wxDialog, "wxFontDialog" );
int _wxPageSetupDialog = wAddClass( _wxDialog, "wxPageSetupDialog" );
int _wxPrintDialog = wAddClass( _wxDialog, "wxPrintDialog" );
int _wxMessageDialog = wAddClass( _wxDialog, "wxMessageDialog" );
int _wxMenu = wAddClass( _wxEvtHandler, "wxMenu" );
int _wxMenuBar = wAddClass( _wxEvtHandler, "wxMenuBar" );
int _wxMenuItem = wAddClass( _wxObject, "wxMenuItem" );
int _wxEvent = wAddClass( _wxObject, "wxEvent" );
int _wxTimerEvent = wAddClass( _wxObject, "wxTimerEvent" );
int _wxCommandEvent = wAddClass( _wxEvent, "wxCommandEvent" );
int _wxNotifyEvent = wAddClass( _wxCommandEvent, "wxNotifyEvent" );
int _wxActivateEvent = wAddClass( _wxEvent, "wxActivateEvent" );
int _wxCalendarEvent = wAddClass( _wxEvent, "wxCalendarEvent" );
int _wxCalculateLayoutEvent = wAddClass( _wxEvent, "wxCalculateLayoutEvent" );
int _wxCloseEvent = wAddClass( _wxEvent, "wxCloseEvent" );
int _wxDialUpEvent = wAddClass( _wxCommandEvent, "wxDialUpEvent" );
int _wxDropFilesEvent = wAddClass( _wxEvent, "wxDropFilesEvent" );
int _wxEraseEvent = wAddClass( _wxEvent, "wxEraseEvent" );
int _wxFocusEvent = wAddClass( _wxEvent, "wxFocusEvent" );
int _wxKeyEvent = wAddClass( _wxEvent, "wxKeyEvent" );
int _wxIdleEvent = wAddClass( _wxEvent, "wxIdleEvent" );
int _wxInitDialogEvent = wAddClass( _wxEvent, "wxInitDialogEvent" );
int _wxJoystickEvent = wAddClass( _wxEvent, "wxJoystickEvent" );
int _wxListEvent = wAddClass( _wxNotifyEvent, "wxListEvent" );
int _wxMenuEvent = wAddClass( _wxEvent, "wxMenuEvent" );
int _wxMouseEvent = wAddClass( _wxEvent, "wxMouseEvent" );
int _wxMoveEvent = wAddClass( _wxEvent, "wxMoveEvent" );
int _wxNotebookEvent = wAddClass( _wxNotifyEvent, "wxNotebookEvent" );
int _wxPaintEvent = wAddClass( _wxEvent, "wxPaintEvent" );
int _wxProcessEvent = wAddClass( _wxEvent, "wxProcessEvent" );
int _wxQueryLayoutInfoEvent = wAddClass( _wxEvent, "wxQueryLayoutInfoEvent" );
int _wxScrollEvent = wAddClass( _wxCommandEvent, "wxScrollEvent" );
int _wxScrollWinEvent = wAddClass( _wxEvent, "wxScrollWinEvent" );
int _wxSizeEvent = wAddClass( _wxEvent, "wxSizeEvent" );
int _wxSocketEvent = wAddClass( _wxEvent, "wxSocketEvent" );
int _wxSpinEvent = wAddClass( _wxNotifyEvent, "wxSpinEvent" );
int _wxSysColourChangedEvent = wAddClass( _wxEvent, "wxSysColourChangedEvent" );
int _wxTreeEvent = wAddClass( _wxNotifyEvent, "wxTreeEvent" );
int _wxUpdateUIEvent = wAddClass( _wxEvent, "wxUpdateUIEvent" );
int _wxWizardEvent = wAddClass( _wxNotifyEvent, "wxWizardEvent" );
int _wxSizer = wAddClass( _wxObject, "wxSizer" );
int _wxGridSizer = wAddClass( _wxSizer, "wxGridSizer" );
int _wxFlexGridSizer = wAddClass( _wxGridSizer, "wxFlexGridSizer" );
int _wxBoxSizer = wAddClass( _wxSizer, "wxBoxSizer" );
int _wxStaticBoxSizer = wAddClass( _wxBoxSizer, "wxStaticBoxSizer" );
int _wxNotebookSizer = wAddClass( _wxSizer, "wxNotebookSizer" );
int _wxIndividualLayoutConstraint = wAddClass( _wxObject, "wxIndividualLayoutConstraint" );
int _wxLayoutConstraints = wAddClass( _wxObject, "wxLayoutConstraints" );
int _wxFont = wAddClass( _wxGDIObject, "wxFont" );
int _wxTimer = wAddClass( _wxObject, "wxTimer" );


//'wx' prefix causes scanner to think it's a pointer
// typedef'ing it fixes that
typedef wxCoord coord;

// For cases where it's really a unsigned char*, so the scanner
// doesn't think it's a string
typedef unsigned char uchar;

void wxAcceleratorTable_del()
{
    delete (wxAcceleratorTable *)wMe;
}


void wxArrayInt_del()
{
    delete (wxArrayInt *)wMe;
}


void wxArrayTreeItemIds_del()
{
    delete (wxArrayTreeItemIds *)wMe;
}


void wxCalendarDateAttr_del()
{
    delete (wxCalendarDateAttr *)wMe;
}


void wxCaret_del()
{
    delete (wxCaret *)wMe;
}


void wxClassInfo_del()
{
    delete (wxClassInfo *)wMe;
}


void wxDateTime_del()
{
    delete (wxDateTime *)wMe;
}


void wxDropTarget_del()
{
    delete (wxDropTarget *)wMe;
}


void wxFontData_del()
{
    delete (wxFontData *)wMe;
}


void wxIcon_del()
{
    delete (wxIcon *)wMe;
}


void wxImageList_del()
{
    delete (wxImageList *)wMe;
}


void wxListItem_del()
{
    delete (wxListItem *)wMe;
}


void wxLog_del()
{
    delete (wxLog *)wMe;
}


void wxMDIClientWindow_del()
{
    delete (wxMDIClientWindow *)wMe;
}


void wxMenuItemList_del()
{
    delete (wxMenuItemList *)wMe;
}


void wxObjectRefData_del()
{
    delete (wxObjectRefData *)wMe;
}


void wxPrintDialogData_del()
{
    delete (wxPrintDialogData *)wMe;
}


void wxRegion_del()
{
    delete (wxRegion *)wMe;
}


void wxRect_del()
{
    delete (wxRect *)wMe;
}


void wxPageSetupDialogData_del()
{
    delete (wxPageSetupDialogData *)wMe;
}


void wxSocketBase_del()
{
    delete (wxSocketBase *)wMe;
}


void wxToolTip_del()
{
    delete (wxToolTip *)wMe;
}


void wxTreeItemData_del()
{
    delete (wxTreeItemData *)wMe;
}


void wxTreeItemId_del()
{
    delete (wxTreeItemId *)wMe;
}


void wxValidator_del()
{
    delete (wxValidator *)wMe;
}


void wxWindowList_del()
{
    delete (wxWindowList *)wMe;
}


void wxList_del()
{
    delete (wxList *)wMe;
}


void wxPrintData_del()
{
    delete (wxPrintData *)wMe;
}


void wxMask_del()
{
    delete (wxMask *)wMe;
}


void wxProcess_del()
{
    delete (wxProcess *)wMe;
}


void wxImageHandler_del()
{
    delete (wxImageHandler *)wMe;
}


void wxGridTableBase_del()
{
    delete (wxGridTableBase *)wMe;
}

// %builtin int wxMessageBox(const wxString& message, const wxString& caption = "Message", int style = wxOK | wxCENTRE, wxWindow *parent = NULL, int x = -1, int y = -1)
void builtin_wxMessageBox()
{
    int returns;
    // int y = -1
    int y = (wArgCount > 5 ? (int)wPopNumber() : -1);
    // int x = -1
    int x = (wArgCount > 4 ? (int)wPopNumber() : -1);
    // wxWindow *parent = NULL
    wxWindow *parent = (wArgCount > 3 ? (wxWindow *)wPopPointer( _wxWindow) : NULL);
    // int style = wxOK | wxCENTRE
    int style = (wArgCount > 2 ? (int)wPopNumber() : wxOK | wxCENTRE);
    // const wxString& caption = "Message"
    wxString caption = (wArgCount > 1 ? wPopString() : "Message");
    // const wxString& message
    wxString message = wPopString();
    
    // call wxMessageBox
    returns = wxMessageBox(message, caption, style, parent, x, y);

    wPushNumber( (wNumber)returns);
}

// %builtin long wxNewId()
void builtin_wxNewId()
{
    long returns;
    
    // call wxNewId
    returns = wxNewId();

    wPushNumber( (wNumber)returns);
}

// %builtin void wxRegisterId(long id)
void builtin_wxRegisterId()
{
    // long id
    long id = (long)wPopNumber();
    
    // call wxRegisterId
    wxRegisterId(id);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin void wxBeginBusyCursor(wxCursor *cursor = wxHOURGLASS_CURSOR)
void builtin_wxBeginBusyCursor()
{
    // wxCursor *cursor = wxHOURGLASS_CURSOR
    wxCursor *cursor = (wArgCount > 0 ? (wxCursor *)wPopPointer( _wxCursor) : wxHOURGLASS_CURSOR);
    
    // call wxBeginBusyCursor
    wxBeginBusyCursor(cursor);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin void wxBell()
void builtin_wxBell()
{
    
    // call wxBell
    wxBell();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin wxObject * wxCreateDynamicObject(const wxString& className)
void builtin_wxCreateDynamicObject()
{
    wxObject *returns;
    // const wxString& className
    wxString className = wPopString();
    
    // call wxCreateDynamicObject
    returns = wxCreateDynamicObject(className);

    wPushNumber( wAddObject( _wxObject, (int)returns ) );
}

// %builtin void wxDisplaySize(int *width, int *height)
void builtin_wxDisplaySize()
{
    // int *height
    int *height = (int *)wPopPointer( 0 );
    // int *width
    int *width = (int *)wPopPointer( 0 );
    
    // call wxDisplaySize
    wxDisplaySize(width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin void wxEnableTopLevelWindows(bool enable = TRUE)
void builtin_wxEnableTopLevelWindows()
{
    // bool enable = TRUE
    bool enable = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call wxEnableTopLevelWindows
    wxEnableTopLevelWindows(enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin void wxEndBusyCursor()
void builtin_wxEndBusyCursor()
{
    
    // call wxEndBusyCursor
    wxEndBusyCursor();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin void wxError(const wxString& msg, const wxString& title = "wxWindows Internal Error")
void builtin_wxError()
{
    // const wxString& title = "wxWindows Internal Error"
    wxString title = (wArgCount > 1 ? wPopString() : "wxWindows Internal Error");
    // const wxString& msg
    wxString msg = wPopString();
    
    // call wxError
    wxError(msg, title);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin long wxExecute(const wxString& command, bool sync = FALSE, wxProcess *callback = NULL)
void builtin_wxExecute()
{
    long returns;
    // wxProcess *callback = NULL
    wxProcess *callback = (wArgCount > 2 ? (wxProcess *)wPopPointer( _wxProcess) : NULL);
    // bool sync = FALSE
    bool sync = (wArgCount > 1 ? (bool)wPopNumber() : FALSE);
    // const wxString& command
    wxString command = wPopString();
    
    // call wxExecute
    returns = wxExecute(command, sync, callback);

    wPushNumber( (wNumber)returns);
}

// %builtin void wxExit()
void builtin_wxExit()
{
    
    // call wxExit
    wxExit();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin void wxFatalError(const wxString& msg, const wxString& title = "wxWindows Fatal Error")
void builtin_wxFatalError()
{
    // const wxString& title = "wxWindows Fatal Error"
    wxString title = (wArgCount > 1 ? wPopString() : "wxWindows Fatal Error");
    // const wxString& msg
    wxString msg = wPopString();
    
    // call wxFatalError
    wxFatalError(msg, title);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin int wxFindMenuItemId(wxFrame *frame, const wxString& menuString, const wxString& itemString)
void builtin_wxFindMenuItemId()
{
    int returns;
    // const wxString& itemString
    wxString itemString = wPopString();
    // const wxString& menuString
    wxString menuString = wPopString();
    // wxFrame *frame
    wxFrame *frame = (wxFrame *)wPopPointer( _wxFrame);
    
    // call wxFindMenuItemId
    returns = wxFindMenuItemId(frame, menuString, itemString);

    wPushNumber( (wNumber)returns);
}

// %builtin wxWindow * wxFindWindowByLabel(const wxString& label, wxWindow *parent=NULL)
void builtin_wxFindWindowByLabel()
{
    wxWindow *returns;
    // wxWindow *parent=NULL
    wxWindow *parent = (wArgCount > 1 ? (wxWindow *)wPopPointer( _wxWindow) : NULL);
    // const wxString& label
    wxString label = wPopString();
    
    // call wxFindWindowByLabel
    returns = wxFindWindowByLabel(label, parent);

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// %builtin wxWindow * wxFindWindowByName(const wxString& name, wxWindow *parent=NULL)
void builtin_wxFindWindowByName()
{
    wxWindow *returns;
    // wxWindow *parent=NULL
    wxWindow *parent = (wArgCount > 1 ? (wxWindow *)wPopPointer( _wxWindow) : NULL);
    // const wxString& name
    wxString name = wPopString();
    
    // call wxFindWindowByName
    returns = wxFindWindowByName(name, parent);

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// %builtin wxWindow * wxFindWindowAtPoint(const wxPoint& pt)
void builtin_wxFindWindowAtPoint()
{
    wxWindow *returns;
    // const wxPoint& pt
    wxPoint *pt = (wxPoint *)wPopPointer( _wxPoint);
    
    // call wxFindWindowAtPoint
    returns = wxFindWindowAtPoint(*pt);

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// %builtin wxWindow * wxFindWindowAtPointer(wxPoint& pt)
void builtin_wxFindWindowAtPointer()
{
    wxWindow *returns;
    // wxPoint& pt
    wxPoint *pt = (wxPoint *)wPopPointer( _wxPoint);
    
    // call wxFindWindowAtPointer
    returns = wxFindWindowAtPointer(*pt);

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// %builtin wxString wxGetHomeDir()
void builtin_wxGetHomeDir()
{
    wxString returns;
    
    // call wxGetHomeDir
    returns = wxGetHomeDir();

    wPushString( (char *)(returns.c_str()) );
}

// %builtin wxPoint wxGetMousePosition()
void builtin_wxGetMousePosition()
{
    wxPoint *returns;
    
    // call wxGetMousePosition
    returns = &wxGetMousePosition();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

// %builtin wxString wxGetOsDescription()
void builtin_wxGetOsDescription()
{
    wxString returns;
    
    // call wxGetOsDescription
    returns = wxGetOsDescription();

    wPushString( (char *)(returns.c_str()) );
}

// %builtin int wxGetOsVersion(int *major = NULL, int *minor = NULL)
void builtin_wxGetOsVersion()
{
    int returns;
    // int *minor = NULL
    int *minor = (wArgCount > 1 ? (int *)wPopPointer( 0 ) : NULL);
    // int *major = NULL
    int *major = (wArgCount > 0 ? (int *)wPopPointer( 0 ) : NULL);
    
    // call wxGetOsVersion
    returns = wxGetOsVersion(major, minor);

    wPushNumber( (wNumber)returns);
}

// %builtin bool wxHandleFatalExceptions(bool doIt = TRUE)
void builtin_wxHandleFatalExceptions()
{
    bool returns;
    // bool doIt = TRUE
    bool doIt = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call wxHandleFatalExceptions
    returns = wxHandleFatalExceptions(doIt);

    wPushNumber( (wNumber)returns);
}

// %builtin bool wxIsBusy()
void builtin_wxIsBusy()
{
    bool returns;
    
    // call wxIsBusy
    returns = wxIsBusy();

    wPushNumber( (wNumber)returns);
}

// %builtin wxString wxNow()
void builtin_wxNow()
{
    wxString returns;
    
    // call wxNow
    returns = wxNow();

    wPushString( (char *)(returns.c_str()) );
}

// %builtin void wxPostEvent(wxEvtHandler *dest, wxEvent& event)
void builtin_wxPostEvent()
{
    // wxEvent& event
    wxEvent *event = (wxEvent *)wPopPointer( _wxEvent);
    // wxEvtHandler *dest
    wxEvtHandler *dest = (wxEvtHandler *)wPopPointer( _wxEvtHandler);
    
    // call wxPostEvent
    wxPostEvent(dest, *event);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin bool wxSafeYield(wxWindow* win = NULL)
void builtin_wxSafeYield()
{
    bool returns;
    // wxWindow* win = NULL
    wxWindow *win = (wArgCount > 0 ? (wxWindow *)wPopPointer( _wxWindow) : NULL);
    
    // call wxSafeYield
    returns = wxSafeYield(win);

    wPushNumber( (wNumber)returns);
}

// %builtin bool wxShell(const wxString& command = NULL)
void builtin_wxShell()
{
    bool returns;
    // const wxString& command = NULL
    wxString command = (wArgCount > 0 ? wPopString() : NULL);
    
    // call wxShell
    returns = wxShell(command);

    wPushNumber( (wNumber)returns);
}

// %builtin void wxSleep(int secs)
void builtin_wxSleep()
{
    // int secs
    int secs = (int)wPopNumber();
    
    // call wxSleep
    wxSleep(secs);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin void wxTrap()
void builtin_wxTrap()
{
    
    // call wxTrap
    wxTrap();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin void wxUsleep(unsigned long milliseconds)
void builtin_wxUsleep()
{
    // unsigned long milliseconds
    unsigned long milliseconds = (unsigned long)wPopNumber();
    
    // call wxUsleep
    wxUsleep(milliseconds);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %builtin bool wxYield()
void builtin_wxYield()
{
    bool returns;
    
    // call wxYield
    returns = wxYield();

    wPushNumber( (wNumber)returns);
}

// %builtin void wxWakeUpIdle()
void builtin_wxWakeUpIdle()
{
    
    // call wxWakeUpIdle
    wxWakeUpIdle();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

    wxString builtin_getEnvValue( const wxString& var )
    {
        wxString value;
        wxGetEnv(var, &value);
        return value;
    }
// %builtin %alias wxGetEnvValue wxString builtin_getEnvValue( const wxString& var )
void builtin_builtin_getEnvValue()
{
    wxString returns;
    // const wxString& var
    wxString var = wPopString();
    
    // call builtin_getEnvValue
    returns = builtin_getEnvValue(var);

    wPushString( (char *)(returns.c_str()) );
}

// %builtin bool wxSetEnv(const wxString& var, const wxString *value);
void builtin_wxSetEnv()
{
    bool returns;
    // const wxString *value
    wxString value = wPopString();
    // const wxString& var
    wxString var = wPopString();
    
    // call wxSetEnv
    returns = wxSetEnv(var, value);

    wPushNumber( (wNumber)returns);
}

// %builtin bool wxUnsetEnv(const wxString& var)
void builtin_wxUnsetEnv()
{
    bool returns;
    // const wxString& var
    wxString var = wPopString();
    
    // call wxUnsetEnv
    returns = wxUnsetEnv(var);

    wPushNumber( (wNumber)returns);
}


void wxPoint_del()
{
    delete (wxPoint *)wMe;
}

// wxPoint(int x, int y)
void wxPoint_new()
{
    wxPoint *returns;
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call wxPoint
    returns = new wxPoint(x, y);

    wPushNumber( wAddObject( _wxPoint, (int)returns ) );
}

// ~wxPoint()
void wxPoint_dtor()
{
    
    // call ~wxPoint
    ((wxPoint *)wMe)->~wxPoint();

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxSize_del()
{
    delete (wxSize *)wMe;
}

// wxSize(int width, int height)
void wxSize_new()
{
    wxSize *returns;
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call wxSize
    returns = new wxSize(width, height);

    wPushNumber( wAddObject( _wxSize, (int)returns ) );
}

// ~wxSize()
void wxSize_dtor()
{
    
    // call ~wxSize
    ((wxSize *)wMe)->~wxSize();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int GetWidth() const
void wxSize_GetWidth()
{
    int returns;
    
    // call GetWidth
    returns = ((wxSize *)wMe)->GetWidth();

    wPushNumber( (wNumber)returns);
}

// int GetHeight() const
void wxSize_GetHeight()
{
    int returns;
    
    // call GetHeight
    returns = ((wxSize *)wMe)->GetHeight();

    wPushNumber( (wNumber)returns);
}

// void Set(int width, int height)
void wxSize_Set()
{
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call Set
    ((wxSize *)wMe)->Set(width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetHeight(int height)
void wxSize_SetHeight()
{
    // int height
    int height = (int)wPopNumber();
    
    // call SetHeight
    ((wxSize *)wMe)->SetHeight(height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetWidth(int width)
void wxSize_SetWidth()
{
    // int width
    int width = (int)wPopNumber();
    
    // call SetWidth
    ((wxSize *)wMe)->SetWidth(width);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxObject_del()
{
    delete (wxObject *)wMe;
}

// wxObject()
void wxObject_new()
{
    wxObject *returns;
    
    // call wxObject
    returns = new wxObject();

    wPushNumber( wAddObject( _wxObject, (int)returns ) );
}

// ~wxObject()
void wxObject_dtor()
{
    
    // call ~wxObject
    ((wxObject *)wMe)->~wxObject();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxClassInfo * GetClassInfo()
void wxObject_GetClassInfo()
{
    wxClassInfo *returns;
    
    // call GetClassInfo
    returns = ((wxObject *)wMe)->GetClassInfo();

    wPushNumber( wAddObject( _wxClassInfo, (int)returns ) );
}

// wxObjectRefData* GetRefData() const
void wxObject_GetRefData()
{
    wxObjectRefData *returns;
    
    // call GetRefData
    returns = ((wxObject *)wMe)->GetRefData();

    wPushNumber( wAddObject( _wxObjectRefData, (int)returns ) );
}

// bool IsKindOf(wxClassInfo *info)
void wxObject_IsKindOf()
{
    bool returns;
    // wxClassInfo *info
    wxClassInfo *info = (wxClassInfo *)wPopPointer( _wxClassInfo);
    
    // call IsKindOf
    returns = ((wxObject *)wMe)->IsKindOf(info);

    wPushNumber( (wNumber)returns);
}

// void Ref(const wxObject& clone)
void wxObject_Ref()
{
    // const wxObject& clone
    wxObject *clone = (wxObject *)wPopPointer( _wxObject);
    
    // call Ref
    ((wxObject *)wMe)->Ref(*clone);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetRefData(wxObjectRefData* data)
void wxObject_SetRefData()
{
    // wxObjectRefData* data
    wxObjectRefData *data = (wxObjectRefData *)wPopPointer( _wxObjectRefData);
    
    // call SetRefData
    ((wxObject *)wMe)->SetRefData(data);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void UnRef()
void wxObject_UnRef()
{
    
    // call UnRef
    ((wxObject *)wMe)->UnRef();

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxColourData_del()
{
    delete (wxColourData *)wMe;
}

// %alias wxColorData wxColourData()
void wxColourData_new()
{
    wxColourData *returns;
    
    // call wxColourData
    returns = new wxColourData();

    wPushNumber( wAddObject( _wxColourData, (int)returns ) );
}

// ~wxColourData()
void wxColourData_dtor()
{
    
    // call ~wxColourData
    ((wxColourData *)wMe)->~wxColourData();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool GetChooseFull() const
void wxColourData_GetChooseFull()
{
    bool returns;
    
    // call GetChooseFull
    returns = ((wxColourData *)wMe)->GetChooseFull();

    wPushNumber( (wNumber)returns);
}

// %alias GetColor wxColour& GetColour() const
void wxColourData_GetColour()
{
    wxColour *returns;
    
    // call GetColour
    returns = &((wxColourData *)wMe)->GetColour();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// %alias GetCustomColor wxColour& GetCustomColour(int i) const
void wxColourData_GetCustomColour()
{
    wxColour *returns;
    // int i
    int i = (int)wPopNumber();
    
    // call GetCustomColour
    returns = &((wxColourData *)wMe)->GetCustomColour(i);

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// void SetChooseFull(const bool flag)
void wxColourData_SetChooseFull()
{
    // const bool flag
    bool flag = (bool)wPopNumber();
    
    // call SetChooseFull
    ((wxColourData *)wMe)->SetChooseFull(flag);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias SetColor void SetColour(const wxColour& colour)
void wxColourData_SetColour()
{
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call SetColour
    ((wxColourData *)wMe)->SetColour(*colour);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias SetCustomColor void SetCustomColour(int i, const wxColour& colour)
void wxColourData_SetCustomColour()
{
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    // int i
    int i = (int)wPopNumber();
    
    // call SetCustomColour
    ((wxColourData *)wMe)->SetCustomColour(i, *colour);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxColour_del()
{
    delete (wxColour *)wMe;
}

// wxColour(const unsigned char red, const unsigned char green, const unsigned char blue)
void wxColour_new()
{
    wxColour *returns;
    // const unsigned char blue
    unsigned char blue = (unsigned char)wPopNumber();
    // const unsigned char green
    unsigned char green = (unsigned char)wPopNumber();
    // const unsigned char red
    unsigned char red = (unsigned char)wPopNumber();
    
    // call wxColour
    returns = new wxColour(red, green, blue);

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// unsigned char Blue() const
void wxColour_Blue()
{
    unsigned char returns;
    
    // call Blue
    returns = ((wxColour *)wMe)->Blue();

    wPushNumber( (wNumber)returns);
}

// long GetPixel() const
void wxColour_GetPixel()
{
    long returns;
    
    // call GetPixel
    returns = ((wxColour *)wMe)->GetPixel();

    wPushNumber( (wNumber)returns);
}

// unsigned char Green() const
void wxColour_Green()
{
    unsigned char returns;
    
    // call Green
    returns = ((wxColour *)wMe)->Green();

    wPushNumber( (wNumber)returns);
}

// bool Ok() const
void wxColour_Ok()
{
    bool returns;
    
    // call Ok
    returns = ((wxColour *)wMe)->Ok();

    wPushNumber( (wNumber)returns);
}

// unsigned char Red() const
void wxColour_Red()
{
    unsigned char returns;
    
    // call Red
    returns = ((wxColour *)wMe)->Red();

    wPushNumber( (wNumber)returns);
}

// void Set(const unsigned char red, const unsigned char green, const unsigned char blue)
void wxColour_Set()
{
    // const unsigned char blue
    unsigned char blue = (unsigned char)wPopNumber();
    // const unsigned char green
    unsigned char green = (unsigned char)wPopNumber();
    // const unsigned char red
    unsigned char red = (unsigned char)wPopNumber();
    
    // call Set
    ((wxColour *)wMe)->Set(red, green, blue);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxGDIObject_del()
{
    delete (wxGDIObject *)wMe;
}

// wxGDIObject()
void wxGDIObject_new()
{
    wxGDIObject *returns;
    
    // call wxGDIObject
    returns = new wxGDIObject();

    wPushNumber( wAddObject( _wxGDIObject, (int)returns ) );
}


void wxPen_del()
{
    delete (wxPen *)wMe;
}

// wxPen()
void wxPen_new()
{
    wxPen *returns;
    
    // call wxPen
    returns = new wxPen();

    wPushNumber( wAddObject( _wxPen, (int)returns ) );
}

// ~wxPen()
void wxPen_dtor()
{
    
    // call ~wxPen
    ((wxPen *)wMe)->~wxPen();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int GetCap() const
void wxPen_GetCap()
{
    int returns;
    
    // call GetCap
    returns = ((wxPen *)wMe)->GetCap();

    wPushNumber( (wNumber)returns);
}

// wxColour& GetColour() const
void wxPen_GetColour()
{
    wxColour *returns;
    
    // call GetColour
    returns = &((wxPen *)wMe)->GetColour();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// int GetJoin() const
void wxPen_GetJoin()
{
    int returns;
    
    // call GetJoin
    returns = ((wxPen *)wMe)->GetJoin();

    wPushNumber( (wNumber)returns);
}

// int GetStyle() const
void wxPen_GetStyle()
{
    int returns;
    
    // call GetStyle
    returns = ((wxPen *)wMe)->GetStyle();

    wPushNumber( (wNumber)returns);
}

// int GetWidth() const
void wxPen_GetWidth()
{
    int returns;
    
    // call GetWidth
    returns = ((wxPen *)wMe)->GetWidth();

    wPushNumber( (wNumber)returns);
}

// bool Ok() const
void wxPen_Ok()
{
    bool returns;
    
    // call Ok
    returns = ((wxPen *)wMe)->Ok();

    wPushNumber( (wNumber)returns);
}

// void SetCap(int capStyle)
void wxPen_SetCap()
{
    // int capStyle
    int capStyle = (int)wPopNumber();
    
    // call SetCap
    ((wxPen *)wMe)->SetCap(capStyle);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias SetColor void SetColour(wxColour& colour)
void wxPen_SetColour()
{
    // wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call SetColour
    ((wxPen *)wMe)->SetColour(*colour);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetColourString %alias SetColorString void SetColour(const wxString& colourName)
void wxPen_SetColourString()
{
    // const wxString& colourName
    wxString colourName = wPopString();
    
    // call SetColour
    ((wxPen *)wMe)->SetColour(colourName);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetColourRGB %alias SetColorRGB void SetColour(int red, int green, int blue)
void wxPen_SetColourRGB()
{
    // int blue
    int blue = (int)wPopNumber();
    // int green
    int green = (int)wPopNumber();
    // int red
    int red = (int)wPopNumber();
    
    // call SetColour
    ((wxPen *)wMe)->SetColour(red, green, blue);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetJoin(int join_style)
void wxPen_SetJoin()
{
    // int join_style
    int join_style = (int)wPopNumber();
    
    // call SetJoin
    ((wxPen *)wMe)->SetJoin(join_style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStyle(int style)
void wxPen_SetStyle()
{
    // int style
    int style = (int)wPopNumber();
    
    // call SetStyle
    ((wxPen *)wMe)->SetStyle(style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetWidth(int width)
void wxPen_SetWidth()
{
    // int width
    int width = (int)wPopNumber();
    
    // call SetWidth
    ((wxPen *)wMe)->SetWidth(width);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %ctor wxPenFromColour(const wxColour& colour, int width, int style)
void wxPenFromColour_new()
{
    wxPen *returns;
    // int style
    int style = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call wxPenFromColour
    returns = new wxPen(*colour, width, style);

    wPushNumber( wAddObject( _wxPenFromColour, (int)returns ) );
}

// %ctor wxPenFromColor(const wxColour& colour, int width, int style)
void wxPenFromColor_new()
{
    wxPen *returns;
    // int style
    int style = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call wxPenFromColor
    returns = new wxPen(*colour, width, style);

    wPushNumber( wAddObject( _wxPenFromColor, (int)returns ) );
}

// %ctor wxPenFromColourName(const wxString& colourName, int width, int style)
void wxPenFromColourName_new()
{
    wxPen *returns;
    // int style
    int style = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    // const wxString& colourName
    wxString colourName = wPopString();
    
    // call wxPenFromColourName
    returns = new wxPen(colourName, width, style);

    wPushNumber( wAddObject( _wxPenFromColourName, (int)returns ) );
}

// %ctor wxPenFromColorName(const wxString& colourName, int width, int style)
void wxPenFromColorName_new()
{
    wxPen *returns;
    // int style
    int style = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    // const wxString& colourName
    wxString colourName = wPopString();
    
    // call wxPenFromColorName
    returns = new wxPen(colourName, width, style);

    wPushNumber( wAddObject( _wxPenFromColorName, (int)returns ) );
}

// %ctor wxPenCopy(const wxPen& pen)
void wxPenCopy_new()
{
    wxPen *returns;
    // const wxPen& pen
    wxPen *pen = (wxPen *)wPopPointer( _wxPen);
    
    // call wxPenCopy
    returns = new wxPen(*pen);

    wPushNumber( wAddObject( _wxPenCopy, (int)returns ) );
}


void wxPalette_del()
{
    delete (wxPalette *)wMe;
}

// wxPalette(int n, const uchar* red, const uchar* green, const uchar* blue)
void wxPalette_new()
{
    wxPalette *returns;
    // const uchar* blue
    uchar *blue = (uchar *)wPopPointer( 0 );
    // const uchar* green
    uchar *green = (uchar *)wPopPointer( 0 );
    // const uchar* red
    uchar *red = (uchar *)wPopPointer( 0 );
    // int n
    int n = (int)wPopNumber();
    
    // call wxPalette
    returns = new wxPalette(n, red, green, blue);

    wPushNumber( wAddObject( _wxPalette, (int)returns ) );
}

// ~wxPalette()
void wxPalette_dtor()
{
    
    // call ~wxPalette
    ((wxPalette *)wMe)->~wxPalette();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(int n, const uchar* red, const uchar* green, const uchar* blue)
void wxPalette_Create()
{
    bool returns;
    // const uchar* blue
    uchar *blue = (uchar *)wPopPointer( 0 );
    // const uchar* green
    uchar *green = (uchar *)wPopPointer( 0 );
    // const uchar* red
    uchar *red = (uchar *)wPopPointer( 0 );
    // int n
    int n = (int)wPopNumber();
    
    // call Create
    returns = ((wxPalette *)wMe)->Create(n, red, green, blue);

    wPushNumber( (wNumber)returns);
}

// int GetPixel(const unsigned char red, const unsigned char green, const unsigned char blue) const
void wxPalette_GetPixel()
{
    int returns;
    // const unsigned char blue
    unsigned char blue = (unsigned char)wPopNumber();
    // const unsigned char green
    unsigned char green = (unsigned char)wPopNumber();
    // const unsigned char red
    unsigned char red = (unsigned char)wPopNumber();
    
    // call GetPixel
    returns = ((wxPalette *)wMe)->GetPixel(red, green, blue);

    wPushNumber( (wNumber)returns);
}

// bool Ok() const
void wxPalette_Ok()
{
    bool returns;
    
    // call Ok
    returns = ((wxPalette *)wMe)->Ok();

    wPushNumber( (wNumber)returns);
}


void wxBrush_del()
{
    delete (wxBrush *)wMe;
}

// wxBrush(const wxColour& colour, int style)
void wxBrush_new()
{
    wxBrush *returns;
    // int style
    int style = (int)wPopNumber();
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call wxBrush
    returns = new wxBrush(*colour, style);

    wPushNumber( wAddObject( _wxBrush, (int)returns ) );
}

// %ctor wxBrushFromColourName(const wxString& colourName, int style)
void wxBrushFromColourName_new()
{
    wxBrush *returns;
    // int style
    int style = (int)wPopNumber();
    // const wxString& colourName
    wxString colourName = wPopString();
    
    // call wxBrushFromColourName
    returns = new wxBrush(colourName, style);

    wPushNumber( wAddObject( _wxBrushFromColourName, (int)returns ) );
}

// %ctor wxBrushFromColorName(const wxString& colourName, int style)
void wxBrushFromColorName_new()
{
    wxBrush *returns;
    // int style
    int style = (int)wPopNumber();
    // const wxString& colourName
    wxString colourName = wPopString();
    
    // call wxBrushFromColorName
    returns = new wxBrush(colourName, style);

    wPushNumber( wAddObject( _wxBrushFromColorName, (int)returns ) );
}

// %ctor wxBrushFromBitmap(const wxBitmap& stippleBitmap)
void wxBrushFromBitmap_new()
{
    wxBrush *returns;
    // const wxBitmap& stippleBitmap
    wxBitmap *stippleBitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call wxBrushFromBitmap
    returns = new wxBrush(*stippleBitmap);

    wPushNumber( wAddObject( _wxBrushFromBitmap, (int)returns ) );
}

// %ctor Copy(const wxBrush& brush)
void Copy_new()
{
    wxBrush *returns;
    // const wxBrush& brush
    wxBrush *brush = (wxBrush *)wPopPointer( _wxBrush);
    
    // call Copy
    returns = new wxBrush(*brush);

    wPushNumber( wAddObject( _Copy, (int)returns ) );
}

// ~wxBrush()
void wxBrush_dtor()
{
    
    // call ~wxBrush
    ((wxBrush *)wMe)->~wxBrush();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias GetColor wxColour& GetColour() const
void wxBrush_GetColour()
{
    wxColour *returns;
    
    // call GetColour
    returns = &((wxBrush *)wMe)->GetColour();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// wxBitmap * GetStipple() const
void wxBrush_GetStipple()
{
    wxBitmap *returns;
    
    // call GetStipple
    returns = ((wxBrush *)wMe)->GetStipple();

    wPushNumber( wAddObject( _wxBitmap, (int)returns ) );
}

// int GetStyle() const
void wxBrush_GetStyle()
{
    int returns;
    
    // call GetStyle
    returns = ((wxBrush *)wMe)->GetStyle();

    wPushNumber( (wNumber)returns);
}

// bool Ok() const
void wxBrush_Ok()
{
    bool returns;
    
    // call Ok
    returns = ((wxBrush *)wMe)->Ok();

    wPushNumber( (wNumber)returns);
}

// %alias SetColor void SetColour(wxColour& colour)
void wxBrush_SetColour()
{
    // wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call SetColour
    ((wxBrush *)wMe)->SetColour(*colour);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetColourString %alias SetColorString void SetColour(const wxString& colourName)
void wxBrush_SetColourString()
{
    // const wxString& colourName
    wxString colourName = wPopString();
    
    // call SetColour
    ((wxBrush *)wMe)->SetColour(colourName);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetColourRGB %alias SetColorRGB void SetColour(const unsigned char red, const unsigned char green, const unsigned char blue)
void wxBrush_SetColourRGB()
{
    // const unsigned char blue
    unsigned char blue = (unsigned char)wPopNumber();
    // const unsigned char green
    unsigned char green = (unsigned char)wPopNumber();
    // const unsigned char red
    unsigned char red = (unsigned char)wPopNumber();
    
    // call SetColour
    ((wxBrush *)wMe)->SetColour(red, green, blue);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStipple(const wxBitmap& bitmap)
void wxBrush_SetStipple()
{
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call SetStipple
    ((wxBrush *)wMe)->SetStipple(*bitmap);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStyle(int style)
void wxBrush_SetStyle()
{
    // int style
    int style = (int)wPopNumber();
    
    // call SetStyle
    ((wxBrush *)wMe)->SetStyle(style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxBrushList_del()
{
    delete (wxBrushList *)wMe;
}

// wxBrushList()
void wxBrushList_new()
{
    wxBrushList *returns;
    
    // call wxBrushList
    returns = new wxBrushList();

    wPushNumber( wAddObject( _wxBrushList, (int)returns ) );
}

// wxBrush * FindOrCreateBrush(const wxColour& colour, int style)
void wxBrushList_FindOrCreateBrush()
{
    wxBrush *returns;
    // int style
    int style = (int)wPopNumber();
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call FindOrCreateBrush
    returns = ((wxBrushList *)wMe)->FindOrCreateBrush(*colour, style);

    wPushNumber( wAddObject( _wxBrush, (int)returns ) );
}


void wxDC_del()
{
    delete (wxDC *)wMe;
}

// ~wxDC()
void wxDC_dtor()
{
    
    // call ~wxDC
    ((wxDC *)wMe)->~wxDC();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void BeginDrawing()
void wxDC_BeginDrawing()
{
    
    // call BeginDrawing
    ((wxDC *)wMe)->BeginDrawing();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height, wxDC* source, wxCoord xsrc, wxCoord ysrc, int logicalFunc = wxCOPY, bool useMask = FALSE)
void wxDC_Blit()
{
    bool returns;
    // bool useMask = FALSE
    bool useMask = (wArgCount > 8 ? (bool)wPopNumber() : FALSE);
    // int logicalFunc = wxCOPY
    int logicalFunc = (wArgCount > 7 ? (int)wPopNumber() : wxCOPY);
    // wxCoord ysrc
    coord ysrc = (coord)wPopNumber();
    // wxCoord xsrc
    coord xsrc = (coord)wPopNumber();
    // wxDC* source
    wxDC *source = (wxDC *)wPopPointer( _wxDC);
    // wxCoord height
    coord height = (coord)wPopNumber();
    // wxCoord width
    coord width = (coord)wPopNumber();
    // wxCoord ydest
    coord ydest = (coord)wPopNumber();
    // wxCoord xdest
    coord xdest = (coord)wPopNumber();
    
    // call Blit
    returns = ((wxDC *)wMe)->Blit(xdest, ydest, width, height, source, xsrc, ysrc, logicalFunc, useMask);

    wPushNumber( (wNumber)returns);
}

// void CalcBoundingBox(wxCoord x, wxCoord y)
void wxDC_CalcBoundingBox()
{
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call CalcBoundingBox
    ((wxDC *)wMe)->CalcBoundingBox(x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Clear()
void wxDC_Clear()
{
    
    // call Clear
    ((wxDC *)wMe)->Clear();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void CrossHair(wxCoord x, wxCoord y)
void wxDC_CrossHair()
{
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call CrossHair
    ((wxDC *)wMe)->CrossHair(x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DestroyClippingRegion()
void wxDC_DestroyClippingRegion()
{
    
    // call DestroyClippingRegion
    ((wxDC *)wMe)->DestroyClippingRegion();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxCoord DeviceToLogicalX(wxCoord x)
void wxDC_DeviceToLogicalX()
{
    coord returns;
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call DeviceToLogicalX
    returns = ((wxDC *)wMe)->DeviceToLogicalX(x);

    wPushNumber( (wNumber)returns);
}

// wxCoord DeviceToLogicalXRel(wxCoord x)
void wxDC_DeviceToLogicalXRel()
{
    coord returns;
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call DeviceToLogicalXRel
    returns = ((wxDC *)wMe)->DeviceToLogicalXRel(x);

    wPushNumber( (wNumber)returns);
}

// wxCoord DeviceToLogicalY(wxCoord y)
void wxDC_DeviceToLogicalY()
{
    coord returns;
    // wxCoord y
    coord y = (coord)wPopNumber();
    
    // call DeviceToLogicalY
    returns = ((wxDC *)wMe)->DeviceToLogicalY(y);

    wPushNumber( (wNumber)returns);
}

// wxCoord DeviceToLogicalYRel(wxCoord y)
void wxDC_DeviceToLogicalYRel()
{
    coord returns;
    // wxCoord y
    coord y = (coord)wPopNumber();
    
    // call DeviceToLogicalYRel
    returns = ((wxDC *)wMe)->DeviceToLogicalYRel(y);

    wPushNumber( (wNumber)returns);
}

// void DrawArc(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2, wxCoord xc, wxCoord yc)
void wxDC_DrawArc()
{
    // wxCoord yc
    coord yc = (coord)wPopNumber();
    // wxCoord xc
    coord xc = (coord)wPopNumber();
    // wxCoord y2
    coord y2 = (coord)wPopNumber();
    // wxCoord x2
    coord x2 = (coord)wPopNumber();
    // wxCoord y1
    coord y1 = (coord)wPopNumber();
    // wxCoord x1
    coord x1 = (coord)wPopNumber();
    
    // call DrawArc
    ((wxDC *)wMe)->DrawArc(x1, y1, x2, y2, xc, yc);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawBitmap(const wxBitmap& bitmap, wxCoord x, wxCoord y, bool transparent)
void wxDC_DrawBitmap()
{
    // bool transparent
    bool transparent = (bool)wPopNumber();
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call DrawBitmap
    ((wxDC *)wMe)->DrawBitmap(*bitmap, x, y, transparent);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawCheckMark(wxCoord x, wxCoord y, wxCoord width, wxCoord height)
void wxDC_DrawCheckMark()
{
    // wxCoord height
    coord height = (coord)wPopNumber();
    // wxCoord width
    coord width = (coord)wPopNumber();
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call DrawCheckMark
    ((wxDC *)wMe)->DrawCheckMark(x, y, width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename DrawCheckMarkRect void DrawCheckMark(const wxRect &rect)
void wxDC_DrawCheckMarkRect()
{
    // const wxRect &rect
    wxRect *rect = (wxRect *)wPopPointer( _wxRect);
    
    // call DrawCheckMark
    ((wxDC *)wMe)->DrawCheckMark(*rect);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawEllipse(wxCoord x, wxCoord y, wxCoord width, wxCoord height)
void wxDC_DrawEllipse()
{
    // wxCoord height
    coord height = (coord)wPopNumber();
    // wxCoord width
    coord width = (coord)wPopNumber();
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call DrawEllipse
    ((wxDC *)wMe)->DrawEllipse(x, y, width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawEllipticArc(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double start, double end)
void wxDC_DrawEllipticArc()
{
    // double end
    double end = (double)wPopNumber();
    // double start
    double start = (double)wPopNumber();
    // wxCoord height
    coord height = (coord)wPopNumber();
    // wxCoord width
    coord width = (coord)wPopNumber();
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call DrawEllipticArc
    ((wxDC *)wMe)->DrawEllipticArc(x, y, width, height, start, end);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawIcon(const wxIcon& icon, wxCoord x, wxCoord y)
void wxDC_DrawIcon()
{
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    // const wxIcon& icon
    wxIcon *icon = (wxIcon *)wPopPointer( _wxIcon);
    
    // call DrawIcon
    ((wxDC *)wMe)->DrawIcon(*icon, x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawLine(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2)
void wxDC_DrawLine()
{
    // wxCoord y2
    coord y2 = (coord)wPopNumber();
    // wxCoord x2
    coord x2 = (coord)wPopNumber();
    // wxCoord y1
    coord y1 = (coord)wPopNumber();
    // wxCoord x1
    coord x1 = (coord)wPopNumber();
    
    // call DrawLine
    ((wxDC *)wMe)->DrawLine(x1, y1, x2, y2);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawLines(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0)
void wxDC_DrawLines()
{
    // wxCoord yoffset = 0
    coord yoffset = (wArgCount > 3 ? (coord)wPopNumber() : 0);
    // wxCoord xoffset = 0
    coord xoffset = (wArgCount > 2 ? (coord)wPopNumber() : 0);
    // wxPoint points[]
    if (wArgCount > 0) wPopNumber();
    wxPoint points[1];
    // int n
    int n = (int)wPopNumber();
    
    // call DrawLines
    ((wxDC *)wMe)->DrawLines(n, points, xoffset, yoffset);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename DrawLinesList void DrawLines(wxList *points, wxCoord xoffset = 0, wxCoord yoffset = 0)
void wxDC_DrawLinesList()
{
    // wxCoord yoffset = 0
    coord yoffset = (wArgCount > 2 ? (coord)wPopNumber() : 0);
    // wxCoord xoffset = 0
    coord xoffset = (wArgCount > 1 ? (coord)wPopNumber() : 0);
    // wxList *points
    wxList *points = (wxList *)wPopPointer( _wxList);
    
    // call DrawLines
    ((wxDC *)wMe)->DrawLines(points, xoffset, yoffset);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, int fill_style = wxODDEVEN_RULE)
void wxDC_DrawPolygon()
{
    // int fill_style = wxODDEVEN_RULE
    int fill_style = (wArgCount > 4 ? (int)wPopNumber() : wxODDEVEN_RULE);
    // wxCoord yoffset = 0
    coord yoffset = (wArgCount > 3 ? (coord)wPopNumber() : 0);
    // wxCoord xoffset = 0
    coord xoffset = (wArgCount > 2 ? (coord)wPopNumber() : 0);
    // wxPoint points[]
    if (wArgCount > 0) wPopNumber();
    wxPoint points[1];
    // int n
    int n = (int)wPopNumber();
    
    // call DrawPolygon
    ((wxDC *)wMe)->DrawPolygon(n, points, xoffset, yoffset, fill_style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename DrawPolygonList void DrawPolygon(wxList *points, wxCoord xoffset = 0, wxCoord yoffset = 0, int fill_style = wxODDEVEN_RULE)
void wxDC_DrawPolygonList()
{
    // int fill_style = wxODDEVEN_RULE
    int fill_style = (wArgCount > 3 ? (int)wPopNumber() : wxODDEVEN_RULE);
    // wxCoord yoffset = 0
    coord yoffset = (wArgCount > 2 ? (coord)wPopNumber() : 0);
    // wxCoord xoffset = 0
    coord xoffset = (wArgCount > 1 ? (coord)wPopNumber() : 0);
    // wxList *points
    wxList *points = (wxList *)wPopPointer( _wxList);
    
    // call DrawPolygon
    ((wxDC *)wMe)->DrawPolygon(points, xoffset, yoffset, fill_style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawPoint(wxCoord x, wxCoord y)
void wxDC_DrawPoint()
{
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call DrawPoint
    ((wxDC *)wMe)->DrawPoint(x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height)
void wxDC_DrawRectangle()
{
    // wxCoord height
    coord height = (coord)wPopNumber();
    // wxCoord width
    coord width = (coord)wPopNumber();
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call DrawRectangle
    ((wxDC *)wMe)->DrawRectangle(x, y, width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawRotatedText(const wxString& text, wxCoord x, wxCoord y, double angle)
void wxDC_DrawRotatedText()
{
    // double angle
    double angle = (double)wPopNumber();
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    // const wxString& text
    wxString text = wPopString();
    
    // call DrawRotatedText
    ((wxDC *)wMe)->DrawRotatedText(text, x, y, angle);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawRoundedRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double radius = 20)
void wxDC_DrawRoundedRectangle()
{
    // double radius = 20
    double radius = (wArgCount > 4 ? (double)wPopNumber() : 20);
    // wxCoord height
    coord height = (coord)wPopNumber();
    // wxCoord width
    coord width = (coord)wPopNumber();
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call DrawRoundedRectangle
    ((wxDC *)wMe)->DrawRoundedRectangle(x, y, width, height, radius);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DrawText(const wxString& text, wxCoord x, wxCoord y)
void wxDC_DrawText()
{
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    // const wxString& text
    wxString text = wPopString();
    
    // call DrawText
    ((wxDC *)wMe)->DrawText(text, x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void EndDoc()
void wxDC_EndDoc()
{
    
    // call EndDoc
    ((wxDC *)wMe)->EndDoc();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void EndDrawing()
void wxDC_EndDrawing()
{
    
    // call EndDrawing
    ((wxDC *)wMe)->EndDrawing();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void EndPage()
void wxDC_EndPage()
{
    
    // call EndPage
    ((wxDC *)wMe)->EndPage();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void FloodFill(wxCoord x, wxCoord y, const wxColour& colour, int style=wxFLOOD_SURFACE)
void wxDC_FloodFill()
{
    // int style=wxFLOOD_SURFACE
    int style = (wArgCount > 3 ? (int)wPopNumber() : wxFLOOD_SURFACE);
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call FloodFill
    ((wxDC *)wMe)->FloodFill(x, y, *colour, style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxBrush& GetBackground()
void wxDC_GetBackground()
{
    wxBrush *returns;
    
    // call GetBackground
    returns = &((wxDC *)wMe)->GetBackground();

    wPushNumber( wAddObject( _wxBrush, (int)returns ) );
}

// int GetBackgroundMode() const
void wxDC_GetBackgroundMode()
{
    int returns;
    
    // call GetBackgroundMode
    returns = ((wxDC *)wMe)->GetBackgroundMode();

    wPushNumber( (wNumber)returns);
}

// wxBrush& GetBrush()
void wxDC_GetBrush()
{
    wxBrush *returns;
    
    // call GetBrush
    returns = &((wxDC *)wMe)->GetBrush();

    wPushNumber( wAddObject( _wxBrush, (int)returns ) );
}

// wxCoord GetCharHeight()
void wxDC_GetCharHeight()
{
    coord returns;
    
    // call GetCharHeight
    returns = ((wxDC *)wMe)->GetCharHeight();

    wPushNumber( (wNumber)returns);
}

// wxCoord GetCharWidth()
void wxDC_GetCharWidth()
{
    coord returns;
    
    // call GetCharWidth
    returns = ((wxDC *)wMe)->GetCharWidth();

    wPushNumber( (wNumber)returns);
}

    void wxDC_GetClippingBoxX()
    {
        wxCoord x, y, width, height;
        ((wxDC *)wMe)->GetClippingBox(&x, &y, &width, &height);
        wPushNumber( (wNumber)x );
    }

    void wxDC_GetClippingBoxY()
    {
        wxCoord x, y, width, height;
        ((wxDC *)wMe)->GetClippingBox(&x, &y, &width, &height);
        wPushNumber( (wNumber)y );
    }

    void wxDC_GetClippingBoxWidth()
    {
        wxCoord x, y, width, height;
        ((wxDC *)wMe)->GetClippingBox(&x, &y, &width, &height);
        wPushNumber( (wNumber)width );
    }

    void wxDC_GetClippingBoxHeight()
    {
        wxCoord x, y, width, height;
        ((wxDC *)wMe)->GetClippingBox(&x, &y, &width, &height);
        wPushNumber( (wNumber)height );
    }

// wxFont& GetFont()
void wxDC_GetFont()
{
    wxFont *returns;
    
    // call GetFont
    returns = &((wxDC *)wMe)->GetFont();

    wPushNumber( wAddObject( _wxFont, (int)returns ) );
}

// int GetLogicalFunction()
void wxDC_GetLogicalFunction()
{
    int returns;
    
    // call GetLogicalFunction
    returns = ((wxDC *)wMe)->GetLogicalFunction();

    wPushNumber( (wNumber)returns);
}

// int GetMapMode()
void wxDC_GetMapMode()
{
    int returns;
    
    // call GetMapMode
    returns = ((wxDC *)wMe)->GetMapMode();

    wPushNumber( (wNumber)returns);
}

// bool GetOptimization()
void wxDC_GetOptimization()
{
    bool returns;
    
    // call GetOptimization
    returns = ((wxDC *)wMe)->GetOptimization();

    wPushNumber( (wNumber)returns);
}

// wxPen& GetPen()
void wxDC_GetPen()
{
    wxPen *returns;
    
    // call GetPen
    returns = &((wxDC *)wMe)->GetPen();

    wPushNumber( wAddObject( _wxPen, (int)returns ) );
}

// bool GetPixel(wxCoord x, wxCoord y, wxColour *colour)
void wxDC_GetPixel()
{
    bool returns;
    // wxColour *colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call GetPixel
    returns = ((wxDC *)wMe)->GetPixel(x, y, colour);

    wPushNumber( (wNumber)returns);
}

    void wxDC_GetSizeX()
    {
        int x, y;
        // call GetSize
        ((wxDC *)wMe)->GetSize(&x, &y);
        wPushNumber( (wNumber)x );
    }

    void wxDC_GetSizeY()
    {
        int x, y;
        // call GetSize
        ((wxDC *)wMe)->GetSize(&x, &y);
        wPushNumber( (wNumber)y );
    }
// const wxColour& GetTextBackground() const
void wxDC_GetTextBackground()
{
    const wxColour *returns;
    
    // call GetTextBackground
    returns = &((wxDC *)wMe)->GetTextBackground();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// void GetTextExtent(const wxString& string, wxCoord *w, wxCoord *h, wxCoord *descent = NULL, wxCoord *externalLeading = NULL, wxFont *font = NULL)
void wxDC_GetTextExtent()
{
    // wxFont *font = NULL
    wxFont *font = (wArgCount > 5 ? (wxFont *)wPopPointer( _wxFont) : NULL);
    // wxCoord *externalLeading = NULL
    coord *externalLeading = (wArgCount > 4 ? (coord *)wPopPointer( 0 ) : NULL);
    // wxCoord *descent = NULL
    coord *descent = (wArgCount > 3 ? (coord *)wPopPointer( 0 ) : NULL);
    // wxCoord *h
    coord *h = (coord *)wPopPointer( 0 );
    // wxCoord *w
    coord *w = (coord *)wPopPointer( 0 );
    // const wxString& string
    wxString string = wPopString();
    
    // call GetTextExtent
    ((wxDC *)wMe)->GetTextExtent(string, w, h, descent, externalLeading, font);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxColour& GetTextForeground()
void wxDC_GetTextForeground()
{
    wxColour *returns;
    
    // call GetTextForeground
    returns = &((wxDC *)wMe)->GetTextForeground();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

    void wxDC_GetUserScaleX()
    {
        double x, y;
        ((wxDC *)wMe)->GetUserScale(&x, &y);
        wPushNumber( (wNumber)x );
    }

    void wxDC_GetUserScaleY()
    {
        double x, y;
        ((wxDC *)wMe)->GetUserScale(&x, &y);
        wPushNumber( (wNumber)y );
    }
// wxCoord LogicalToDeviceX(wxCoord x)
void wxDC_LogicalToDeviceX()
{
    coord returns;
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call LogicalToDeviceX
    returns = ((wxDC *)wMe)->LogicalToDeviceX(x);

    wPushNumber( (wNumber)returns);
}

// wxCoord LogicalToDeviceXRel(wxCoord x)
void wxDC_LogicalToDeviceXRel()
{
    coord returns;
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call LogicalToDeviceXRel
    returns = ((wxDC *)wMe)->LogicalToDeviceXRel(x);

    wPushNumber( (wNumber)returns);
}

// wxCoord LogicalToDeviceY(wxCoord y)
void wxDC_LogicalToDeviceY()
{
    coord returns;
    // wxCoord y
    coord y = (coord)wPopNumber();
    
    // call LogicalToDeviceY
    returns = ((wxDC *)wMe)->LogicalToDeviceY(y);

    wPushNumber( (wNumber)returns);
}

// wxCoord LogicalToDeviceYRel(wxCoord y)
void wxDC_LogicalToDeviceYRel()
{
    coord returns;
    // wxCoord y
    coord y = (coord)wPopNumber();
    
    // call LogicalToDeviceYRel
    returns = ((wxDC *)wMe)->LogicalToDeviceYRel(y);

    wPushNumber( (wNumber)returns);
}

// wxCoord MaxX()
void wxDC_MaxX()
{
    coord returns;
    
    // call MaxX
    returns = ((wxDC *)wMe)->MaxX();

    wPushNumber( (wNumber)returns);
}

// wxCoord MaxY()
void wxDC_MaxY()
{
    coord returns;
    
    // call MaxY
    returns = ((wxDC *)wMe)->MaxY();

    wPushNumber( (wNumber)returns);
}

// wxCoord MinX()
void wxDC_MinX()
{
    coord returns;
    
    // call MinX
    returns = ((wxDC *)wMe)->MinX();

    wPushNumber( (wNumber)returns);
}

// wxCoord MinY()
void wxDC_MinY()
{
    coord returns;
    
    // call MinY
    returns = ((wxDC *)wMe)->MinY();

    wPushNumber( (wNumber)returns);
}

// bool Ok()
void wxDC_Ok()
{
    bool returns;
    
    // call Ok
    returns = ((wxDC *)wMe)->Ok();

    wPushNumber( (wNumber)returns);
}

// void ResetBoundingBox()
void wxDC_ResetBoundingBox()
{
    
    // call ResetBoundingBox
    ((wxDC *)wMe)->ResetBoundingBox();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetDeviceOrigin(wxCoord x, wxCoord y)
void wxDC_SetDeviceOrigin()
{
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call SetDeviceOrigin
    ((wxDC *)wMe)->SetDeviceOrigin(x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetBackground(const wxBrush& brush)
void wxDC_SetBackground()
{
    // const wxBrush& brush
    wxBrush *brush = (wxBrush *)wPopPointer( _wxBrush);
    
    // call SetBackground
    ((wxDC *)wMe)->SetBackground(*brush);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetBackgroundMode(int mode)
void wxDC_SetBackgroundMode()
{
    // int mode
    int mode = (int)wPopNumber();
    
    // call SetBackgroundMode
    ((wxDC *)wMe)->SetBackgroundMode(mode);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetClippingRegionXY void SetClippingRegion(wxCoord x, wxCoord y, wxCoord width, wxCoord height)
void wxDC_SetClippingRegionXY()
{
    // wxCoord height
    coord height = (coord)wPopNumber();
    // wxCoord width
    coord width = (coord)wPopNumber();
    // wxCoord y
    coord y = (coord)wPopNumber();
    // wxCoord x
    coord x = (coord)wPopNumber();
    
    // call SetClippingRegion
    ((wxDC *)wMe)->SetClippingRegion(x, y, width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetClippingRegion(const wxRegion& region)
void wxDC_SetClippingRegion()
{
    // const wxRegion& region
    wxRegion *region = (wxRegion *)wPopPointer( _wxRegion);
    
    // call SetClippingRegion
    ((wxDC *)wMe)->SetClippingRegion(*region);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetPalette(const wxPalette& palette)
void wxDC_SetPalette()
{
    // const wxPalette& palette
    wxPalette *palette = (wxPalette *)wPopPointer( _wxPalette);
    
    // call SetPalette
    ((wxDC *)wMe)->SetPalette(*palette);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetBrush(const wxBrush& brush)
void wxDC_SetBrush()
{
    // const wxBrush& brush
    wxBrush *brush = (wxBrush *)wPopPointer( _wxBrush);
    
    // call SetBrush
    ((wxDC *)wMe)->SetBrush(*brush);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetFont(const wxFont& font)
void wxDC_SetFont()
{
    // const wxFont& font
    wxFont *font = (wxFont *)wPopPointer( _wxFont);
    
    // call SetFont
    ((wxDC *)wMe)->SetFont(*font);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetOptimization(bool optimize)
void wxDC_SetOptimization()
{
    // bool optimize
    bool optimize = (bool)wPopNumber();
    
    // call SetOptimization
    ((wxDC *)wMe)->SetOptimization(optimize);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetPen(const wxPen& pen)
void wxDC_SetPen()
{
    // const wxPen& pen
    wxPen *pen = (wxPen *)wPopPointer( _wxPen);
    
    // call SetPen
    ((wxDC *)wMe)->SetPen(*pen);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetTextBackground(const wxColour& colour)
void wxDC_SetTextBackground()
{
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call SetTextBackground
    ((wxDC *)wMe)->SetTextBackground(*colour);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetTextForeground(const wxColour& colour)
void wxDC_SetTextForeground()
{
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call SetTextForeground
    ((wxDC *)wMe)->SetTextForeground(*colour);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetUserScale(double xScale, double yScale)
void wxDC_SetUserScale()
{
    // double yScale
    double yScale = (double)wPopNumber();
    // double xScale
    double xScale = (double)wPopNumber();
    
    // call SetUserScale
    ((wxDC *)wMe)->SetUserScale(xScale, yScale);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool StartDoc(const wxString& message)
void wxDC_StartDoc()
{
    bool returns;
    // const wxString& message
    wxString message = wPopString();
    
    // call StartDoc
    returns = ((wxDC *)wMe)->StartDoc(message);

    wPushNumber( (wNumber)returns);
}

// void StartPage()
void wxDC_StartPage()
{
    
    // call StartPage
    ((wxDC *)wMe)->StartPage();

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxMemoryDC_del()
{
    delete (wxMemoryDC *)wMe;
}

// wxMemoryDC()
void wxMemoryDC_new()
{
    wxMemoryDC *returns;
    
    // call wxMemoryDC
    returns = new wxMemoryDC();

    wPushNumber( wAddObject( _wxMemoryDC, (int)returns ) );
}

// void SelectObject(const wxBitmap& bitmap)
void wxMemoryDC_SelectObject()
{
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call SelectObject
    ((wxMemoryDC *)wMe)->SelectObject(*bitmap);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxWindowDC_del()
{
    delete (wxWindowDC *)wMe;
}

// wxWindowDC(wxWindow* window)
void wxWindowDC_new()
{
    wxWindowDC *returns;
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxWindowDC
    returns = new wxWindowDC(window);

    wPushNumber( wAddObject( _wxWindowDC, (int)returns ) );
}


void wxClientDC_del()
{
    delete (wxClientDC *)wMe;
}

// wxClientDC(wxWindow* window)
void wxClientDC_new()
{
    wxClientDC *returns;
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxClientDC
    returns = new wxClientDC(window);

    wPushNumber( wAddObject( _wxClientDC, (int)returns ) );
}


void wxPaintDC_del()
{
    delete (wxPaintDC *)wMe;
}

// wxPaintDC(wxWindow* window)
void wxPaintDC_new()
{
    wxPaintDC *returns;
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxPaintDC
    returns = new wxPaintDC(window);

    wPushNumber( wAddObject( _wxPaintDC, (int)returns ) );
}


void wxScreenDC_del()
{
    delete (wxScreenDC *)wMe;
}

// wxScreenDC()
void wxScreenDC_new()
{
    wxScreenDC *returns;
    
    // call wxScreenDC
    returns = new wxScreenDC();

    wPushNumber( wAddObject( _wxScreenDC, (int)returns ) );
}

// bool StartDrawingOnTop(wxWindow* window)
void wxScreenDC_StartDrawingOnTop()
{
    bool returns;
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call StartDrawingOnTop
    returns = ((wxScreenDC *)wMe)->StartDrawingOnTop(window);

    wPushNumber( (wNumber)returns);
}

// %rename StartDrawingOnTopRect bool StartDrawingOnTop(wxRect* rect = NULL)
void wxScreenDC_StartDrawingOnTopRect()
{
    bool returns;
    // wxRect* rect = NULL
    wxRect *rect = (wArgCount > 0 ? (wxRect *)wPopPointer( _wxRect) : NULL);
    
    // call StartDrawingOnTop
    returns = ((wxScreenDC *)wMe)->StartDrawingOnTop(rect);

    wPushNumber( (wNumber)returns);
}

// bool EndDrawingOnTop()
void wxScreenDC_EndDrawingOnTop()
{
    bool returns;
    
    // call EndDrawingOnTop
    returns = ((wxScreenDC *)wMe)->EndDrawingOnTop();

    wPushNumber( (wNumber)returns);
}


void wxBitmap_del()
{
    delete (wxBitmap *)wMe;
}

// %ctor wxBitmapCopy(const wxBitmap& bitmap)
void wxBitmapCopy_new()
{
    wxBitmap *returns;
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call wxBitmapCopy
    returns = new wxBitmap(*bitmap);

    wPushNumber( wAddObject( _wxBitmapCopy, (int)returns ) );
}

// %ctor wxEmptyBitmap( int width, int height, int depth = -1)
void wxEmptyBitmap_new()
{
    wxBitmap *returns;
    // int depth = -1
    int depth = (wArgCount > 2 ? (int)wPopNumber() : -1);
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call wxEmptyBitmap
    returns = new wxBitmap(width, height, depth);

    wPushNumber( wAddObject( _wxEmptyBitmap, (int)returns ) );
}

// ~wxBitmap()
void wxBitmap_dtor()
{
    
    // call ~wxBitmap
    ((wxBitmap *)wMe)->~wxBitmap();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual bool Create(int width, int height, int depth = -1)
void wxBitmap_Create()
{
    bool returns;
    // int depth = -1
    int depth = (wArgCount > 2 ? (int)wPopNumber() : -1);
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call Create
    returns = ((wxBitmap *)wMe)->Create(width, height, depth);

    wPushNumber( (wNumber)returns);
}

// int GetDepth() const
void wxBitmap_GetDepth()
{
    int returns;
    
    // call GetDepth
    returns = ((wxBitmap *)wMe)->GetDepth();

    wPushNumber( (wNumber)returns);
}

// int GetHeight() const
void wxBitmap_GetHeight()
{
    int returns;
    
    // call GetHeight
    returns = ((wxBitmap *)wMe)->GetHeight();

    wPushNumber( (wNumber)returns);
}

// wxPalette* GetPalette() const
void wxBitmap_GetPalette()
{
    wxPalette *returns;
    
    // call GetPalette
    returns = ((wxBitmap *)wMe)->GetPalette();

    wPushNumber( wAddObject( _wxPalette, (int)returns ) );
}

// wxMask* GetMask() const
void wxBitmap_GetMask()
{
    wxMask *returns;
    
    // call GetMask
    returns = ((wxBitmap *)wMe)->GetMask();

    wPushNumber( wAddObject( _wxMask, (int)returns ) );
}

// int GetWidth() const
void wxBitmap_GetWidth()
{
    int returns;
    
    // call GetWidth
    returns = ((wxBitmap *)wMe)->GetWidth();

    wPushNumber( (wNumber)returns);
}

// wxBitmap GetSubBitmap(const wxRect &rect) const
void wxBitmap_GetSubBitmap()
{
    wxBitmap *returns;
    // const wxRect &rect
    wxRect *rect = (wxRect *)wPopPointer( _wxRect);
    
    // call GetSubBitmap
    returns = &((wxBitmap *)wMe)->GetSubBitmap(*rect);

    wPushNumber( wAddObject( _wxBitmap, (int)(&returns) ) );
}

// bool LoadFile(const wxString& name, long type)
void wxBitmap_LoadFile()
{
    bool returns;
    // long type
    long type = (long)wPopNumber();
    // const wxString& name
    wxString name = wPopString();
    
    // call LoadFile
    returns = ((wxBitmap *)wMe)->LoadFile(name, type);

    wPushNumber( (wNumber)returns);
}

// bool Ok() const
void wxBitmap_Ok()
{
    bool returns;
    
    // call Ok
    returns = ((wxBitmap *)wMe)->Ok();

    wPushNumber( (wNumber)returns);
}

// bool SaveFile(const wxString& name, int type, wxPalette* palette = NULL)
void wxBitmap_SaveFile()
{
    bool returns;
    // wxPalette* palette = NULL
    wxPalette *palette = (wArgCount > 2 ? (wxPalette *)wPopPointer( _wxPalette) : NULL);
    // int type
    int type = (int)wPopNumber();
    // const wxString& name
    wxString name = wPopString();
    
    // call SaveFile
    returns = ((wxBitmap *)wMe)->SaveFile(name, type, palette);

    wPushNumber( (wNumber)returns);
}

// void SetDepth(int depth)
void wxBitmap_SetDepth()
{
    // int depth
    int depth = (int)wPopNumber();
    
    // call SetDepth
    ((wxBitmap *)wMe)->SetDepth(depth);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetHeight(int height)
void wxBitmap_SetHeight()
{
    // int height
    int height = (int)wPopNumber();
    
    // call SetHeight
    ((wxBitmap *)wMe)->SetHeight(height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMask(wxMask* mask)
void wxBitmap_SetMask()
{
    // wxMask* mask
    wxMask *mask = (wxMask *)wPopPointer( _wxMask);
    
    // call SetMask
    ((wxBitmap *)wMe)->SetMask(mask);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetWidth(int width)
void wxBitmap_SetWidth()
{
    // int width
    int width = (int)wPopNumber();
    
    // call SetWidth
    ((wxBitmap *)wMe)->SetWidth(width);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxImage_del()
{
    delete (wxImage *)wMe;
}

// wxImage(const wxImage& image)
void wxImage_new()
{
    wxImage *returns;
    // const wxImage& image
    wxImage *image = (wxImage *)wPopPointer( _wxImage);
    
    // call wxImage
    returns = new wxImage(*image);

    wPushNumber( wAddObject( _wxImage, (int)returns ) );
}

// %ctor wxNullImage()
void wxNullImage_new()
{
    wxImage *returns;
    
    // call wxNullImage
    returns = new wxImage();

    wPushNumber( wAddObject( _wxNullImage, (int)returns ) );
}

// %ctor wxImageFromBitmap(const wxBitmap& bitmap)
void wxImageFromBitmap_new()
{
    wxImage *returns;
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call wxImageFromBitmap
    returns = new wxImage(*bitmap);

    wPushNumber( wAddObject( _wxImageFromBitmap, (int)returns ) );
}

// %ctor wxEmptyImage(int width, int height)
void wxEmptyImage_new()
{
    wxImage *returns;
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call wxEmptyImage
    returns = new wxImage(width, height);

    wPushNumber( wAddObject( _wxEmptyImage, (int)returns ) );
}

// %ctor wxImageFromData(int width, int height, uchar* data, bool static_data=FALSE)
void wxImageFromData_new()
{
    wxImage *returns;
    // bool static_data=FALSE
    bool static_data = (wArgCount > 3 ? (bool)wPopNumber() : FALSE);
    // uchar* data
    uchar *data = (uchar *)wPopPointer( 0 );
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call wxImageFromData
    returns = new wxImage(width, height, data, static_data);

    wPushNumber( wAddObject( _wxImageFromData, (int)returns ) );
}

// %ctor wxImageFromFile(const wxString& name, long type = wxBITMAP_TYPE_ANY)
void wxImageFromFile_new()
{
    wxImage *returns;
    // long type = wxBITMAP_TYPE_ANY
    long type = (wArgCount > 1 ? (long)wPopNumber() : wxBITMAP_TYPE_ANY);
    // const wxString& name
    wxString name = wPopString();
    
    // call wxImageFromFile
    returns = new wxImage(name, type);

    wPushNumber( wAddObject( _wxImageFromFile, (int)returns ) );
}

// ~wxImage()
void wxImage_dtor()
{
    
    // call ~wxImage
    ((wxImage *)wMe)->~wxImage();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// static void AddHandler(wxImageHandler* handler)
void wxImage_AddHandler()
{
    // wxImageHandler* handler
    wxImageHandler *handler = (wxImageHandler *)wPopPointer( _wxImageHandler);
    
    // call AddHandler
    ((wxImage *)wMe)->AddHandler(handler);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// static void CleanUpHandlers()
void wxImage_CleanUpHandlers()
{
    
    // call CleanUpHandlers
    ((wxImage *)wMe)->CleanUpHandlers();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxBitmap ConvertToBitmap() const
void wxImage_ConvertToBitmap()
{
    wxBitmap *returns;
    
    // call ConvertToBitmap
    returns = &((wxImage *)wMe)->ConvertToBitmap();

    wPushNumber( wAddObject( _wxBitmap, (int)(&returns) ) );
}

// wxImage Copy() const
void wxImage_Copy()
{
    wxImage *returns;
    
    // call Copy
    returns = &((wxImage *)wMe)->Copy();

    wPushNumber( wAddObject( _wxImage, (int)(&returns) ) );
}

// unsigned char GetBlue(int x, int y) const
void wxImage_GetBlue()
{
    unsigned char returns;
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call GetBlue
    returns = ((wxImage *)wMe)->GetBlue(x, y);

    wPushNumber( (wNumber)returns);
}

// uchar* GetData() const
void wxImage_GetData()
{
    uchar *returns;
    
    // call GetData
    returns = ((wxImage *)wMe)->GetData();

    wPushNumber( (wNumber)(int)returns);
}

// unsigned char GetGreen(int x, int y) const
void wxImage_GetGreen()
{
    unsigned char returns;
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call GetGreen
    returns = ((wxImage *)wMe)->GetGreen(x, y);

    wPushNumber( (wNumber)returns);
}

// unsigned char GetRed(int x, int y) const
void wxImage_GetRed()
{
    unsigned char returns;
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call GetRed
    returns = ((wxImage *)wMe)->GetRed(x, y);

    wPushNumber( (wNumber)returns);
}

// static wxList& GetHandlers()
void wxImage_GetHandlers()
{
    wxList *returns;
    
    // call GetHandlers
    returns = &((wxImage *)wMe)->GetHandlers();

    wPushNumber( wAddObject( _wxList, (int)returns ) );
}

// int GetHeight() const
void wxImage_GetHeight()
{
    int returns;
    
    // call GetHeight
    returns = ((wxImage *)wMe)->GetHeight();

    wPushNumber( (wNumber)returns);
}

// unsigned char GetMaskBlue() const
void wxImage_GetMaskBlue()
{
    unsigned char returns;
    
    // call GetMaskBlue
    returns = ((wxImage *)wMe)->GetMaskBlue();

    wPushNumber( (wNumber)returns);
}

// unsigned char GetMaskGreen() const
void wxImage_GetMaskGreen()
{
    unsigned char returns;
    
    // call GetMaskGreen
    returns = ((wxImage *)wMe)->GetMaskGreen();

    wPushNumber( (wNumber)returns);
}

// unsigned char GetMaskRed() const
void wxImage_GetMaskRed()
{
    unsigned char returns;
    
    // call GetMaskRed
    returns = ((wxImage *)wMe)->GetMaskRed();

    wPushNumber( (wNumber)returns);
}

// const wxPalette& GetPalette() const
void wxImage_GetPalette()
{
    const wxPalette *returns;
    
    // call GetPalette
    returns = &((wxImage *)wMe)->GetPalette();

    wPushNumber( wAddObject( _wxPalette, (int)returns ) );
}

// wxImage GetSubImage(const wxRect& rect) const
void wxImage_GetSubImage()
{
    wxImage *returns;
    // const wxRect& rect
    wxRect *rect = (wxRect *)wPopPointer( _wxRect);
    
    // call GetSubImage
    returns = &((wxImage *)wMe)->GetSubImage(*rect);

    wPushNumber( wAddObject( _wxImage, (int)(&returns) ) );
}

// int GetWidth() const
void wxImage_GetWidth()
{
    int returns;
    
    // call GetWidth
    returns = ((wxImage *)wMe)->GetWidth();

    wPushNumber( (wNumber)returns);
}

// bool HasMask() const
void wxImage_HasMask()
{
    bool returns;
    
    // call HasMask
    returns = ((wxImage *)wMe)->HasMask();

    wPushNumber( (wNumber)returns);
}

// static void InitStandardHandlers()
void wxImage_InitStandardHandlers()
{
    
    // call InitStandardHandlers
    ((wxImage *)wMe)->InitStandardHandlers();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// static void InsertHandler(wxImageHandler* handler)
void wxImage_InsertHandler()
{
    // wxImageHandler* handler
    wxImageHandler *handler = (wxImageHandler *)wPopPointer( _wxImageHandler);
    
    // call InsertHandler
    ((wxImage *)wMe)->InsertHandler(handler);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool LoadFile(const wxString& name, long type = wxBITMAP_TYPE_ANY)
void wxImage_LoadFile()
{
    bool returns;
    // long type = wxBITMAP_TYPE_ANY
    long type = (wArgCount > 1 ? (long)wPopNumber() : wxBITMAP_TYPE_ANY);
    // const wxString& name
    wxString name = wPopString();
    
    // call LoadFile
    returns = ((wxImage *)wMe)->LoadFile(name, type);

    wPushNumber( (wNumber)returns);
}

// %rename LoadMimeFile bool LoadFile(const wxString& name, const wxString& mimetype)
void wxImage_LoadMimeFile()
{
    bool returns;
    // const wxString& mimetype
    wxString mimetype = wPopString();
    // const wxString& name
    wxString name = wPopString();
    
    // call LoadFile
    returns = ((wxImage *)wMe)->LoadFile(name, mimetype);

    wPushNumber( (wNumber)returns);
}

// bool Ok() const
void wxImage_Ok()
{
    bool returns;
    
    // call Ok
    returns = ((wxImage *)wMe)->Ok();

    wPushNumber( (wNumber)returns);
}

// static bool RemoveHandler(const wxString& name)
void wxImage_RemoveHandler()
{
    bool returns;
    // const wxString& name
    wxString name = wPopString();
    
    // call RemoveHandler
    returns = ((wxImage *)wMe)->RemoveHandler(name);

    wPushNumber( (wNumber)returns);
}

// bool SaveFile(const wxString& name, int type)
void wxImage_SaveFile()
{
    bool returns;
    // int type
    int type = (int)wPopNumber();
    // const wxString& name
    wxString name = wPopString();
    
    // call SaveFile
    returns = ((wxImage *)wMe)->SaveFile(name, type);

    wPushNumber( (wNumber)returns);
}

// %rename SaveMimeFile bool SaveFile(const wxString& name, const wxString& mimetype)
void wxImage_SaveMimeFile()
{
    bool returns;
    // const wxString& mimetype
    wxString mimetype = wPopString();
    // const wxString& name
    wxString name = wPopString();
    
    // call SaveFile
    returns = ((wxImage *)wMe)->SaveFile(name, mimetype);

    wPushNumber( (wNumber)returns);
}

// wxImage Mirror(bool horizontally = TRUE) const
void wxImage_Mirror()
{
    wxImage *returns;
    // bool horizontally = TRUE
    bool horizontally = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call Mirror
    returns = &((wxImage *)wMe)->Mirror(horizontally);

    wPushNumber( wAddObject( _wxImage, (int)(&returns) ) );
}

// void Replace(unsigned char r1, unsigned char g1, unsigned char b1, unsigned char r2, unsigned char g2, unsigned char b2)
void wxImage_Replace()
{
    // unsigned char b2
    unsigned char b2 = (unsigned char)wPopNumber();
    // unsigned char g2
    unsigned char g2 = (unsigned char)wPopNumber();
    // unsigned char r2
    unsigned char r2 = (unsigned char)wPopNumber();
    // unsigned char b1
    unsigned char b1 = (unsigned char)wPopNumber();
    // unsigned char g1
    unsigned char g1 = (unsigned char)wPopNumber();
    // unsigned char r1
    unsigned char r1 = (unsigned char)wPopNumber();
    
    // call Replace
    ((wxImage *)wMe)->Replace(r1, g1, b1, r2, g2, b2);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxImage Rotate(double angle, const wxPoint& rotationCentre, bool interpolating = TRUE, wxPoint* offsetAfterRotation = NULL)
void wxImage_Rotate()
{
    wxImage *returns;
    // wxPoint* offsetAfterRotation = NULL
    wxPoint *offsetAfterRotation = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : NULL);
    // bool interpolating = TRUE
    bool interpolating = (wArgCount > 2 ? (bool)wPopNumber() : TRUE);
    // const wxPoint& rotationCentre
    wxPoint *rotationCentre = (wxPoint *)wPopPointer( _wxPoint);
    // double angle
    double angle = (double)wPopNumber();
    
    // call Rotate
    returns = &((wxImage *)wMe)->Rotate(angle, *rotationCentre, interpolating, offsetAfterRotation);

    wPushNumber( wAddObject( _wxImage, (int)(&returns) ) );
}

// wxImage Rotate90(bool clockwise = TRUE) const
void wxImage_Rotate90()
{
    wxImage *returns;
    // bool clockwise = TRUE
    bool clockwise = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call Rotate90
    returns = &((wxImage *)wMe)->Rotate90(clockwise);

    wPushNumber( wAddObject( _wxImage, (int)(&returns) ) );
}

// wxImage Scale(int width, int height) const
void wxImage_Scale()
{
    wxImage *returns;
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call Scale
    returns = &((wxImage *)wMe)->Scale(width, height);

    wPushNumber( wAddObject( _wxImage, (int)(&returns) ) );
}

// void SetData(uchar* data)
void wxImage_SetData()
{
    // uchar* data
    uchar *data = (uchar *)wPopPointer( 0 );
    
    // call SetData
    ((wxImage *)wMe)->SetData(data);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMask(bool hasMask = TRUE)
void wxImage_SetMask()
{
    // bool hasMask = TRUE
    bool hasMask = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call SetMask
    ((wxImage *)wMe)->SetMask(hasMask);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMaskColour(unsigned char red, unsigned char blue, unsigned char green)
void wxImage_SetMaskColour()
{
    // unsigned char green
    unsigned char green = (unsigned char)wPopNumber();
    // unsigned char blue
    unsigned char blue = (unsigned char)wPopNumber();
    // unsigned char red
    unsigned char red = (unsigned char)wPopNumber();
    
    // call SetMaskColour
    ((wxImage *)wMe)->SetMaskColour(red, blue, green);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetPalette(const wxPalette& palette)
void wxImage_SetPalette()
{
    // const wxPalette& palette
    wxPalette *palette = (wxPalette *)wPopPointer( _wxPalette);
    
    // call SetPalette
    ((wxImage *)wMe)->SetPalette(*palette);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetRGB(int x, int y, unsigned char red, unsigned char green, unsigned char blue)
void wxImage_SetRGB()
{
    // unsigned char blue
    unsigned char blue = (unsigned char)wPopNumber();
    // unsigned char green
    unsigned char green = (unsigned char)wPopNumber();
    // unsigned char red
    unsigned char red = (unsigned char)wPopNumber();
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call SetRGB
    ((wxImage *)wMe)->SetRGB(x, y, red, green, blue);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxCursor_del()
{
    delete (wxCursor *)wMe;
}


void wxEvtHandler_del()
{
    delete (wxEvtHandler *)wMe;
}

// wxEvtHandler()
void wxEvtHandler_new()
{
    wxEvtHandler *returns;
    
    // call wxEvtHandler
    returns = new wxEvtHandler();

    wPushNumber( wAddObject( _wxEvtHandler, (int)returns ) );
}

// ~wxEvtHandler()
void wxEvtHandler_dtor()
{
    
    // call ~wxEvtHandler
    ((wxEvtHandler *)wMe)->~wxEvtHandler();

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxApp_del()
{
    delete (wxApp *)wMe;
}

// virtual wxLog* CreateLogTarget()
void wxApp_CreateLogTarget()
{
    wxLog *returns;
    
    // call CreateLogTarget
    returns = ((wxApp *)wMe)->CreateLogTarget();

    wPushNumber( wAddObject( _wxLog, (int)returns ) );
}

// void Dispatch()
void wxApp_Dispatch()
{
    
    // call Dispatch
    ((wxApp *)wMe)->Dispatch();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxString GetAppName() const
void wxApp_GetAppName()
{
    wxString returns;
    
    // call GetAppName
    returns = ((wxApp *)wMe)->GetAppName();

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetClassName() const
void wxApp_GetClassName()
{
    wxString returns;
    
    // call GetClassName
    returns = ((wxApp *)wMe)->GetClassName();

    wPushString( (char *)(returns.c_str()) );
}

// wxWindow * GetTopWindow() const
void wxApp_GetTopWindow()
{
    wxWindow *returns;
    
    // call GetTopWindow
    returns = ((wxApp *)wMe)->GetTopWindow();

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// bool GetUseBestVisual() const
void wxApp_GetUseBestVisual()
{
    bool returns;
    
    // call GetUseBestVisual
    returns = ((wxApp *)wMe)->GetUseBestVisual();

    wPushNumber( (wNumber)returns);
}

// wxString GetVendorName() const
void wxApp_GetVendorName()
{
    wxString returns;
    
    // call GetVendorName
    returns = ((wxApp *)wMe)->GetVendorName();

    wPushString( (char *)(returns.c_str()) );
}

// void ExitMainLoop()
void wxApp_ExitMainLoop()
{
    
    // call ExitMainLoop
    ((wxApp *)wMe)->ExitMainLoop();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Initialized()
void wxApp_Initialized()
{
    bool returns;
    
    // call Initialized
    returns = ((wxApp *)wMe)->Initialized();

    wPushNumber( (wNumber)returns);
}

// int MainLoop()
void wxApp_MainLoop()
{
    int returns;
    
    // call MainLoop
    returns = ((wxApp *)wMe)->MainLoop();

    wPushNumber( (wNumber)returns);
}

// bool Pending()
void wxApp_Pending()
{
    bool returns;
    
    // call Pending
    returns = ((wxApp *)wMe)->Pending();

    wPushNumber( (wNumber)returns);
}

// bool SendIdleEvents()
void wxApp_SendIdleEvents()
{
    bool returns;
    
    // call SendIdleEvents
    returns = ((wxApp *)wMe)->SendIdleEvents();

    wPushNumber( (wNumber)returns);
}

// void SetAppName(const wxString& name)
void wxApp_SetAppName()
{
    // const wxString& name
    wxString name = wPopString();
    
    // call SetAppName
    ((wxApp *)wMe)->SetAppName(name);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetClassName(const wxString& name)
void wxApp_SetClassName()
{
    // const wxString& name
    wxString name = wPopString();
    
    // call SetClassName
    ((wxApp *)wMe)->SetClassName(name);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetExitOnFrameDelete(bool flag)
void wxApp_SetExitOnFrameDelete()
{
    // bool flag
    bool flag = (bool)wPopNumber();
    
    // call SetExitOnFrameDelete
    ((wxApp *)wMe)->SetExitOnFrameDelete(flag);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetTopWindow(wxWindow* window)
void wxApp_SetTopWindow()
{
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call SetTopWindow
    ((wxApp *)wMe)->SetTopWindow(window);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetVendorName(const wxString& name)
void wxApp_SetVendorName()
{
    // const wxString& name
    wxString name = wPopString();
    
    // call SetVendorName
    ((wxApp *)wMe)->SetVendorName(name);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual wxIcon GetStdIcon(int which) const
void wxApp_GetStdIcon()
{
    wxIcon *returns;
    // int which
    int which = (int)wPopNumber();
    
    // call GetStdIcon
    returns = &((wxApp *)wMe)->GetStdIcon(which);

    wPushNumber( wAddObject( _wxIcon, (int)(&returns) ) );
}

// void SetUseBestVisual(bool flag)
void wxApp_SetUseBestVisual()
{
    // bool flag
    bool flag = (bool)wPopNumber();
    
    // call SetUseBestVisual
    ((wxApp *)wMe)->SetUseBestVisual(flag);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxWindow_del()
{
    delete (wxWindow *)wMe;
}

// wxWindow(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = wxPanelNameStr)
void wxWindow_new()
{
    wxWindow *returns;
    // const wxString& name = wxPanelNameStr
    wxString name = (wArgCount > 5 ? wPopString() : wxPanelNameStr);
    // long style = 0
    long style = (wArgCount > 4 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxWindow
    returns = new wxWindow(parent, id, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// ~wxWindow()
void wxWindow_dtor()
{
    
    // call ~wxWindow
    ((wxWindow *)wMe)->~wxWindow();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void AddChild(wxWindow* child)
void wxWindow_AddChild()
{
    // wxWindow* child
    wxWindow *child = (wxWindow *)wPopPointer( _wxWindow);
    
    // call AddChild
    ((wxWindow *)wMe)->AddChild(child);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void CaptureMouse()
void wxWindow_CaptureMouse()
{
    
    // call CaptureMouse
    ((wxWindow *)wMe)->CaptureMouse();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Center(int direction = wxBOTH)
void wxWindow_Center()
{
    // int direction = wxBOTH
    int direction = (wArgCount > 0 ? (int)wPopNumber() : wxBOTH);
    
    // call Center
    ((wxWindow *)wMe)->Center(direction);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void CenterOnParent(int direction = wxBOTH)
void wxWindow_CenterOnParent()
{
    // int direction = wxBOTH
    int direction = (wArgCount > 0 ? (int)wPopNumber() : wxBOTH);
    
    // call CenterOnParent
    ((wxWindow *)wMe)->CenterOnParent(direction);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void CenterOnScreen(int direction = wxBOTH)
void wxWindow_CenterOnScreen()
{
    // int direction = wxBOTH
    int direction = (wArgCount > 0 ? (int)wPopNumber() : wxBOTH);
    
    // call CenterOnScreen
    ((wxWindow *)wMe)->CenterOnScreen(direction);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Centre(int direction = wxBOTH)
void wxWindow_Centre()
{
    // int direction = wxBOTH
    int direction = (wArgCount > 0 ? (int)wPopNumber() : wxBOTH);
    
    // call Centre
    ((wxWindow *)wMe)->Centre(direction);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void CentreOnParent(int direction = wxBOTH)
void wxWindow_CentreOnParent()
{
    // int direction = wxBOTH
    int direction = (wArgCount > 0 ? (int)wPopNumber() : wxBOTH);
    
    // call CentreOnParent
    ((wxWindow *)wMe)->CentreOnParent(direction);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void CentreOnScreen(int direction = wxBOTH)
void wxWindow_CentreOnScreen()
{
    // int direction = wxBOTH
    int direction = (wArgCount > 0 ? (int)wPopNumber() : wxBOTH);
    
    // call CentreOnScreen
    ((wxWindow *)wMe)->CentreOnScreen(direction);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Clear()
void wxWindow_Clear()
{
    
    // call Clear
    ((wxWindow *)wMe)->Clear();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void ClientToScreen(int* x, int* y) const
void wxWindow_ClientToScreen()
{
    // int* y
    int *y = (int *)wPopPointer( 0 );
    // int* x
    int *x = (int *)wPopPointer( 0 );
    
    // call ClientToScreen
    ((wxWindow *)wMe)->ClientToScreen(x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual bool Close(bool force = FALSE)
void wxWindow_Close()
{
    bool returns;
    // bool force = FALSE
    bool force = (wArgCount > 0 ? (bool)wPopNumber() : FALSE);
    
    // call Close
    returns = ((wxWindow *)wMe)->Close(force);

    wPushNumber( (wNumber)returns);
}

// %rename ConvertDialogPointToPixels wxPoint ConvertPixelsToDialog(const wxPoint& pt)
void wxWindow_ConvertDialogPointToPixels()
{
    wxPoint *returns;
    // const wxPoint& pt
    wxPoint *pt = (wxPoint *)wPopPointer( _wxPoint);
    
    // call ConvertPixelsToDialog
    returns = &((wxWindow *)wMe)->ConvertPixelsToDialog(*pt);

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

// %rename ConvertDialogSizeToPixels wxSize ConvertPixelsToDialog(const wxSize& sz)
void wxWindow_ConvertDialogSizeToPixels()
{
    wxSize *returns;
    // const wxSize& sz
    wxSize *sz = (wxSize *)wPopPointer( _wxSize);
    
    // call ConvertPixelsToDialog
    returns = &((wxWindow *)wMe)->ConvertPixelsToDialog(*sz);

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// virtual bool Destroy()
void wxWindow_Destroy()
{
    bool returns;
    
    // call Destroy
    returns = ((wxWindow *)wMe)->Destroy();

    wPushNumber( (wNumber)returns);
}

// virtual void DestroyChildren()
void wxWindow_DestroyChildren()
{
    
    // call DestroyChildren
    ((wxWindow *)wMe)->DestroyChildren();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void Enable(bool enable)
void wxWindow_Enable()
{
    // bool enable
    bool enable = (bool)wPopNumber();
    
    // call Enable
    ((wxWindow *)wMe)->Enable(enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// static wxWindow* FindFocus()
void wxWindow_FindFocus()
{
    wxWindow *returns;
    
    // call FindFocus
    returns = ((wxWindow *)wMe)->FindFocus();

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// wxWindow* FindWindow(long id)
void wxWindow_FindWindow()
{
    wxWindow *returns;
    // long id
    long id = (long)wPopNumber();
    
    // call FindWindow
    returns = ((wxWindow *)wMe)->FindWindow(id);

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// virtual void Fit()
void wxWindow_Fit()
{
    
    // call Fit
    ((wxWindow *)wMe)->Fit();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias GetBackgroundColor virtual wxColour GetBackgroundColour() const
void wxWindow_GetBackgroundColour()
{
    wxColour *returns;
    
    // call GetBackgroundColour
    returns = &((wxWindow *)wMe)->GetBackgroundColour();

    wPushNumber( wAddObject( _wxColour, (int)(&returns) ) );
}

// virtual wxSize GetBestSize() const
void wxWindow_GetBestSize()
{
    wxSize *returns;
    
    // call GetBestSize
    returns = &((wxWindow *)wMe)->GetBestSize();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// wxCaret * GetCaret() const
void wxWindow_GetCaret()
{
    wxCaret *returns;
    
    // call GetCaret
    returns = ((wxWindow *)wMe)->GetCaret();

    wPushNumber( wAddObject( _wxCaret, (int)returns ) );
}

// virtual int GetCharHeight() const
void wxWindow_GetCharHeight()
{
    int returns;
    
    // call GetCharHeight
    returns = ((wxWindow *)wMe)->GetCharHeight();

    wPushNumber( (wNumber)returns);
}

// virtual int GetCharWidth() const
void wxWindow_GetCharWidth()
{
    int returns;
    
    // call GetCharWidth
    returns = ((wxWindow *)wMe)->GetCharWidth();

    wPushNumber( (wNumber)returns);
}

// wxWindowList& GetChildren()
void wxWindow_GetChildren()
{
    wxWindowList *returns;
    
    // call GetChildren
    returns = &((wxWindow *)wMe)->GetChildren();

    wPushNumber( wAddObject( _wxWindowList, (int)returns ) );
}

    void wxWindow_GetClientSizeWidth()
    {
        int width, height;
        ((wxWindow *)wMe)->GetClientSize(&width, &height);
        wPushNumber( (wNumber)width );
    }

    void wxWindow_GetClientSizeHeight()
    {
        int width, height;
        ((wxWindow *)wMe)->GetClientSize(&width, &height);
        wPushNumber( (wNumber)height );
    }


// virtual wxSize GetClientSize() const
void wxWindow_GetClientSize()
{
    wxSize *returns;
    
    // call GetClientSize
    returns = &((wxWindow *)wMe)->GetClientSize();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// wxLayoutConstraints* GetConstraints() const
void wxWindow_GetConstraints()
{
    wxLayoutConstraints *returns;
    
    // call GetConstraints
    returns = ((wxWindow *)wMe)->GetConstraints();

    wPushNumber( wAddObject( _wxLayoutConstraints, (int)returns ) );
}

// wxDropTarget* GetDropTarget() const
void wxWindow_GetDropTarget()
{
    wxDropTarget *returns;
    
    // call GetDropTarget
    returns = ((wxWindow *)wMe)->GetDropTarget();

    wPushNumber( wAddObject( _wxDropTarget, (int)returns ) );
}

// wxEvtHandler* GetEventHandler() const
void wxWindow_GetEventHandler()
{
    wxEvtHandler *returns;
    
    // call GetEventHandler
    returns = ((wxWindow *)wMe)->GetEventHandler();

    wPushNumber( wAddObject( _wxEvtHandler, (int)returns ) );
}

// long GetExtraStyle() const
void wxWindow_GetExtraStyle()
{
    long returns;
    
    // call GetExtraStyle
    returns = ((wxWindow *)wMe)->GetExtraStyle();

    wPushNumber( (wNumber)returns);
}

// wxFont& GetFont() const
void wxWindow_GetFont()
{
    wxFont *returns;
    
    // call GetFont
    returns = &((wxWindow *)wMe)->GetFont();

    wPushNumber( wAddObject( _wxFont, (int)returns ) );
}

// %alias GetForegroundColor virtual wxColour GetForegroundColour()
void wxWindow_GetForegroundColour()
{
    wxColour *returns;
    
    // call GetForegroundColour
    returns = &((wxWindow *)wMe)->GetForegroundColour();

    wPushNumber( wAddObject( _wxColour, (int)(&returns) ) );
}

// wxWindow* GetGrandParent() const
void wxWindow_GetGrandParent()
{
    wxWindow *returns;
    
    // call GetGrandParent
    returns = ((wxWindow *)wMe)->GetGrandParent();

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// int GetId() const
void wxWindow_GetId()
{
    int returns;
    
    // call GetId
    returns = ((wxWindow *)wMe)->GetId();

    wPushNumber( (wNumber)returns);
}

// virtual wxString GetLabel() const
void wxWindow_GetLabel()
{
    wxString returns;
    
    // call GetLabel
    returns = ((wxWindow *)wMe)->GetLabel();

    wPushString( (char *)(returns.c_str()) );
}

// virtual wxString GetName() const
void wxWindow_GetName()
{
    wxString returns;
    
    // call GetName
    returns = ((wxWindow *)wMe)->GetName();

    wPushString( (char *)(returns.c_str()) );
}

// virtual wxWindow* GetParent() const
void wxWindow_GetParent()
{
    wxWindow *returns;
    
    // call GetParent
    returns = ((wxWindow *)wMe)->GetParent();

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

    void wxWindow_GetPositionX()
    {
        int x, y;
        ((wxWindow *)wMe)->GetPosition(&x, &y);
        wPushNumber( (wNumber)x );
    }

    void wxWindow_GetPositionY()
    {
        int x, y;
        ((wxWindow *)wMe)->GetPosition(&x, &y);
        wPushNumber( (wNumber)y );
    }


// virtual wxRect GetRect() const
void wxWindow_GetRect()
{
    wxRect *returns;
    
    // call GetRect
    returns = &((wxWindow *)wMe)->GetRect();

    wPushNumber( wAddObject( _wxRect, (int)(&returns) ) );
}

// virtual int GetScrollThumb(int orientation)
void wxWindow_GetScrollThumb()
{
    int returns;
    // int orientation
    int orientation = (int)wPopNumber();
    
    // call GetScrollThumb
    returns = ((wxWindow *)wMe)->GetScrollThumb(orientation);

    wPushNumber( (wNumber)returns);
}

// virtual int GetScrollPos(int orientation)
void wxWindow_GetScrollPos()
{
    int returns;
    // int orientation
    int orientation = (int)wPopNumber();
    
    // call GetScrollPos
    returns = ((wxWindow *)wMe)->GetScrollPos(orientation);

    wPushNumber( (wNumber)returns);
}

// virtual int GetScrollRange(int orientation)
void wxWindow_GetScrollRange()
{
    int returns;
    // int orientation
    int orientation = (int)wPopNumber();
    
    // call GetScrollRange
    returns = ((wxWindow *)wMe)->GetScrollRange(orientation);

    wPushNumber( (wNumber)returns);
}

    void wxWindow_GetSizeWidth()
    {
        int width, height;
        ((wxWindow *)wMe)->GetSize(&width, &height);
        wPushNumber( (wNumber)width );
    }

    void wxWindow_GetSizeHeight()
    {
        int width, height;
        ((wxWindow *)wMe)->GetSize(&width, &height);
        wPushNumber( (wNumber)height );
    }


    void wxWindow_GetTextExtentX()
    {
        // arg
        wxString string = wPopString();

        int x, y, descent, externalLeading;
        ((wxWindow *)wMe)->GetTextExtent(string, &x, &y, &descent, &externalLeading);
        wPushNumber( (wNumber)x );
    }

    void wxWindow_GetTextExtentY()
    {
        // arg
        wxString string = wPopString();
        int x, y, descent, externalLeading;
        ((wxWindow *)wMe)->GetTextExtent(string, &x, &y, &descent, &externalLeading);
        wPushNumber( (wNumber)y );
    }


    void wxWindow_GetTextExtentDescent()
    {
        // arg
        wxString string = wPopString();
        int x, y, descent, externalLeading;
        ((wxWindow *)wMe)->GetTextExtent(string, &x, &y, &descent, &externalLeading);
        wPushNumber( (wNumber)descent );
    }

    void wxWindow_GetTextExtentExternalLeading()
    {
        // arg
        wxString string = wPopString();
        int x, y, descent, externalLeading;
        ((wxWindow *)wMe)->GetTextExtent(string, &x, &y, &descent, &externalLeading);
        wPushNumber( (wNumber)externalLeading );
    }


// virtual wxString GetTitle()
void wxWindow_GetTitle()
{
    wxString returns;
    
    // call GetTitle
    returns = ((wxWindow *)wMe)->GetTitle();

    wPushString( (char *)(returns.c_str()) );
}

// virtual wxRegion GetUpdateRegion() const
void wxWindow_GetUpdateRegion()
{
    wxRegion *returns;
    
    // call GetUpdateRegion
    returns = &((wxWindow *)wMe)->GetUpdateRegion();

    wPushNumber( wAddObject( _wxRegion, (int)(&returns) ) );
}

// wxValidator* GetValidator() const
void wxWindow_GetValidator()
{
    wxValidator *returns;
    
    // call GetValidator
    returns = ((wxWindow *)wMe)->GetValidator();

    wPushNumber( wAddObject( _wxValidator, (int)returns ) );
}

// long GetWindowStyleFlag() const
void wxWindow_GetWindowStyleFlag()
{
    long returns;
    
    // call GetWindowStyleFlag
    returns = ((wxWindow *)wMe)->GetWindowStyleFlag();

    wPushNumber( (wNumber)returns);
}

// void InitDialog()
void wxWindow_InitDialog()
{
    
    // call InitDialog
    ((wxWindow *)wMe)->InitDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual bool IsEnabled() const
void wxWindow_IsEnabled()
{
    bool returns;
    
    // call IsEnabled
    returns = ((wxWindow *)wMe)->IsEnabled();

    wPushNumber( (wNumber)returns);
}

// bool IsExposed(int x, int y) const
void wxWindow_IsExposed()
{
    bool returns;
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call IsExposed
    returns = ((wxWindow *)wMe)->IsExposed(x, y);

    wPushNumber( (wNumber)returns);
}

// %rename IsExposedPoint bool IsExposed(wxPoint &pt) const
void wxWindow_IsExposedPoint()
{
    bool returns;
    // wxPoint &pt
    wxPoint *pt = (wxPoint *)wPopPointer( _wxPoint);
    
    // call IsExposed
    returns = ((wxWindow *)wMe)->IsExposed(*pt);

    wPushNumber( (wNumber)returns);
}

// %rename IsExposedRect bool IsExposed(wxRect &rect) const
void wxWindow_IsExposedRect()
{
    bool returns;
    // wxRect &rect
    wxRect *rect = (wxRect *)wPopPointer( _wxRect);
    
    // call IsExposed
    returns = ((wxWindow *)wMe)->IsExposed(*rect);

    wPushNumber( (wNumber)returns);
}

// virtual bool IsRetained() const
void wxWindow_IsRetained()
{
    bool returns;
    
    // call IsRetained
    returns = ((wxWindow *)wMe)->IsRetained();

    wPushNumber( (wNumber)returns);
}

// virtual bool IsShown() const
void wxWindow_IsShown()
{
    bool returns;
    
    // call IsShown
    returns = ((wxWindow *)wMe)->IsShown();

    wPushNumber( (wNumber)returns);
}

// bool IsTopLevel() const
void wxWindow_IsTopLevel()
{
    bool returns;
    
    // call IsTopLevel
    returns = ((wxWindow *)wMe)->IsTopLevel();

    wPushNumber( (wNumber)returns);
}

// void Layout()
void wxWindow_Layout()
{
    
    // call Layout
    ((wxWindow *)wMe)->Layout();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual bool LoadFromResource(wxWindow* parent, const wxString& resourceName, const wxResourceTable* resourceTable = NULL)
void wxWindow_LoadFromResource()
{
    bool returns;
    // const wxResourceTable* resourceTable = NULL
    const wxResourceTable *resourceTable = (wArgCount > 2 ? (wxResourceTable *)wPopPointer( _wxResourceTable) : NULL);
    // const wxString& resourceName
    wxString resourceName = wPopString();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call LoadFromResource
    returns = ((wxWindow *)wMe)->LoadFromResource(parent, resourceName, resourceTable);

    wPushNumber( (wNumber)returns);
}

// void Lower()
void wxWindow_Lower()
{
    
    // call Lower
    ((wxWindow *)wMe)->Lower();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void MakeModal(bool flag)
void wxWindow_MakeModal()
{
    // bool flag
    bool flag = (bool)wPopNumber();
    
    // call MakeModal
    ((wxWindow *)wMe)->MakeModal(flag);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Move(int x, int y)
void wxWindow_Move()
{
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call Move
    ((wxWindow *)wMe)->Move(x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename MoveXY void Move(const wxPoint& pt)
void wxWindow_MoveXY()
{
    // const wxPoint& pt
    wxPoint *pt = (wxPoint *)wPopPointer( _wxPoint);
    
    // call Move
    ((wxWindow *)wMe)->Move(*pt);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxEvtHandler* PopEventHandler(bool deleteHandler = FALSE) const
void wxWindow_PopEventHandler()
{
    wxEvtHandler *returns;
    // bool deleteHandler = FALSE
    bool deleteHandler = (wArgCount > 0 ? (bool)wPopNumber() : FALSE);
    
    // call PopEventHandler
    returns = ((wxWindow *)wMe)->PopEventHandler(deleteHandler);

    wPushNumber( wAddObject( _wxEvtHandler, (int)returns ) );
}

// bool PopupMenu(wxMenu* menu, const wxPoint& pos)
void wxWindow_PopupMenu()
{
    bool returns;
    // const wxPoint& pos
    wxPoint *pos = (wxPoint *)wPopPointer( _wxPoint);
    // wxMenu* menu
    wxMenu *menu = (wxMenu *)wPopPointer( _wxMenu);
    
    // call PopupMenu
    returns = ((wxWindow *)wMe)->PopupMenu(menu, *pos);

    wPushNumber( (wNumber)returns);
}

// %rename PopupMenuXY bool PopupMenu(wxMenu* menu, int x, int y)
void wxWindow_PopupMenuXY()
{
    bool returns;
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    // wxMenu* menu
    wxMenu *menu = (wxMenu *)wPopPointer( _wxMenu);
    
    // call PopupMenu
    returns = ((wxWindow *)wMe)->PopupMenu(menu, x, y);

    wPushNumber( (wNumber)returns);
}

// void PushEventHandler(wxEvtHandler* handler)
void wxWindow_PushEventHandler()
{
    // wxEvtHandler* handler
    wxEvtHandler *handler = (wxEvtHandler *)wPopPointer( _wxEvtHandler);
    
    // call PushEventHandler
    ((wxWindow *)wMe)->PushEventHandler(handler);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Raise()
void wxWindow_Raise()
{
    
    // call Raise
    ((wxWindow *)wMe)->Raise();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void Refresh(bool eraseBackground = TRUE, const wxRect* rect = NULL)
void wxWindow_Refresh()
{
    // const wxRect* rect = NULL
    const wxRect *rect = (wArgCount > 1 ? (wxRect *)wPopPointer( _wxRect) : NULL);
    // bool eraseBackground = TRUE
    bool eraseBackground = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call Refresh
    ((wxWindow *)wMe)->Refresh(eraseBackground, rect);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void ReleaseMouse()
void wxWindow_ReleaseMouse()
{
    
    // call ReleaseMouse
    ((wxWindow *)wMe)->ReleaseMouse();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void RemoveChild(wxWindow* child)
void wxWindow_RemoveChild()
{
    // wxWindow* child
    wxWindow *child = (wxWindow *)wPopPointer( _wxWindow);
    
    // call RemoveChild
    ((wxWindow *)wMe)->RemoveChild(child);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual bool Reparent(wxWindow* newParent)
void wxWindow_Reparent()
{
    bool returns;
    // wxWindow* newParent
    wxWindow *newParent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Reparent
    returns = ((wxWindow *)wMe)->Reparent(newParent);

    wPushNumber( (wNumber)returns);
}

// virtual wxPoint ScreenToClient(const wxPoint& pt) const
void wxWindow_ScreenToClient()
{
    wxPoint *returns;
    // const wxPoint& pt
    wxPoint *pt = (wxPoint *)wPopPointer( _wxPoint);
    
    // call ScreenToClient
    returns = &((wxWindow *)wMe)->ScreenToClient(*pt);

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

// %rename ScreenToClientXY virtual void ScreenToClient(int* x, int* y) const
void wxWindow_ScreenToClientXY()
{
    // int* y
    int *y = (int *)wPopPointer( 0 );
    // int* x
    int *x = (int *)wPopPointer( 0 );
    
    // call ScreenToClient
    ((wxWindow *)wMe)->ScreenToClient(x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void ScrollWindow(int dx, int dy, const wxRect* rect = NULL)
void wxWindow_ScrollWindow()
{
    // const wxRect* rect = NULL
    const wxRect *rect = (wArgCount > 2 ? (wxRect *)wPopPointer( _wxRect) : NULL);
    // int dy
    int dy = (int)wPopNumber();
    // int dx
    int dx = (int)wPopNumber();
    
    // call ScrollWindow
    ((wxWindow *)wMe)->ScrollWindow(dx, dy, rect);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetAcceleratorTable(const wxAcceleratorTable& accel)
void wxWindow_SetAcceleratorTable()
{
    // const wxAcceleratorTable& accel
    wxAcceleratorTable *accel = (wxAcceleratorTable *)wPopPointer( _wxAcceleratorTable);
    
    // call SetAcceleratorTable
    ((wxWindow *)wMe)->SetAcceleratorTable(*accel);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetAutoLayout(bool autoLayout)
void wxWindow_SetAutoLayout()
{
    // bool autoLayout
    bool autoLayout = (bool)wPopNumber();
    
    // call SetAutoLayout
    ((wxWindow *)wMe)->SetAutoLayout(autoLayout);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias SetBackgroundColor virtual void SetBackgroundColour(const wxColour& colour)
void wxWindow_SetBackgroundColour()
{
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call SetBackgroundColour
    ((wxWindow *)wMe)->SetBackgroundColour(*colour);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetCaret(wxCaret *caret) const
void wxWindow_SetCaret()
{
    // wxCaret *caret
    wxCaret *caret = (wxCaret *)wPopPointer( _wxCaret);
    
    // call SetCaret
    ((wxWindow *)wMe)->SetCaret(caret);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetClientSize(const wxSize& size)
void wxWindow_SetClientSize()
{
    // const wxSize& size
    wxSize *size = (wxSize *)wPopPointer( _wxSize);
    
    // call SetClientSize
    ((wxWindow *)wMe)->SetClientSize(*size);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetClientSizeWH virtual void SetClientSize(int width, int height)
void wxWindow_SetClientSizeWH()
{
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call SetClientSize
    ((wxWindow *)wMe)->SetClientSize(width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetCursor(const wxCursor&cursor)
void wxWindow_SetCursor()
{
    // const wxCursor&cursor
    wxCursor *cursor = (wxCursor *)wPopPointer( _wxCursor);
    
    // call SetCursor
    ((wxWindow *)wMe)->SetCursor(*cursor);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetConstraints(wxLayoutConstraints* constraints)
void wxWindow_SetConstraints()
{
    // wxLayoutConstraints* constraints
    wxLayoutConstraints *constraints = (wxLayoutConstraints *)wPopPointer( _wxLayoutConstraints);
    
    // call SetConstraints
    ((wxWindow *)wMe)->SetConstraints(constraints);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetDropTarget(wxDropTarget* target)
void wxWindow_SetDropTarget()
{
    // wxDropTarget* target
    wxDropTarget *target = (wxDropTarget *)wPopPointer( _wxDropTarget);
    
    // call SetDropTarget
    ((wxWindow *)wMe)->SetDropTarget(target);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetEventHandler(wxEvtHandler* handler)
void wxWindow_SetEventHandler()
{
    // wxEvtHandler* handler
    wxEvtHandler *handler = (wxEvtHandler *)wPopPointer( _wxEvtHandler);
    
    // call SetEventHandler
    ((wxWindow *)wMe)->SetEventHandler(handler);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetExtraStyle(long exStyle)
void wxWindow_SetExtraStyle()
{
    // long exStyle
    long exStyle = (long)wPopNumber();
    
    // call SetExtraStyle
    ((wxWindow *)wMe)->SetExtraStyle(exStyle);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetFocus()
void wxWindow_SetFocus()
{
    
    // call SetFocus
    ((wxWindow *)wMe)->SetFocus();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetFont(const wxFont& font)
void wxWindow_SetFont()
{
    // const wxFont& font
    wxFont *font = (wxFont *)wPopPointer( _wxFont);
    
    // call SetFont
    ((wxWindow *)wMe)->SetFont(*font);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias SetForegroundColor virtual void SetForegroundColour(const wxColour& colour)
void wxWindow_SetForegroundColour()
{
    // const wxColour& colour
    wxColour *colour = (wxColour *)wPopPointer( _wxColour);
    
    // call SetForegroundColour
    ((wxWindow *)wMe)->SetForegroundColour(*colour);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetId(int id)
void wxWindow_SetId()
{
    // int id
    int id = (int)wPopNumber();
    
    // call SetId
    ((wxWindow *)wMe)->SetId(id);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetName(const wxString& name)
void wxWindow_SetName()
{
    // const wxString& name
    wxString name = wPopString();
    
    // call SetName
    ((wxWindow *)wMe)->SetName(name);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetScrollbar(int orientation, int position, int thumbSize, int range, bool refresh = TRUE)
void wxWindow_SetScrollbar()
{
    // bool refresh = TRUE
    bool refresh = (wArgCount > 4 ? (bool)wPopNumber() : TRUE);
    // int range
    int range = (int)wPopNumber();
    // int thumbSize
    int thumbSize = (int)wPopNumber();
    // int position
    int position = (int)wPopNumber();
    // int orientation
    int orientation = (int)wPopNumber();
    
    // call SetScrollbar
    ((wxWindow *)wMe)->SetScrollbar(orientation, position, thumbSize, range, refresh);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetScrollPos(int orientation, int pos, bool refresh = TRUE)
void wxWindow_SetScrollPos()
{
    // bool refresh = TRUE
    bool refresh = (wArgCount > 2 ? (bool)wPopNumber() : TRUE);
    // int pos
    int pos = (int)wPopNumber();
    // int orientation
    int orientation = (int)wPopNumber();
    
    // call SetScrollPos
    ((wxWindow *)wMe)->SetScrollPos(orientation, pos, refresh);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetDimensions virtual void SetSize(int x, int y, int width, int height, int sizeFlags = wxSIZE_AUTO)
void wxWindow_SetDimensions()
{
    // int sizeFlags = wxSIZE_AUTO
    int sizeFlags = (wArgCount > 4 ? (int)wPopNumber() : wxSIZE_AUTO);
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call SetSize
    ((wxWindow *)wMe)->SetSize(x, y, width, height, sizeFlags);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetSize(int width, int height)
void wxWindow_SetSize()
{
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call SetSize
    ((wxWindow *)wMe)->SetSize(width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetPosition virtual void SetSize(const wxSize& size)
void wxWindow_SetPosition()
{
    // const wxSize& size
    wxSize *size = (wxSize *)wPopPointer( _wxSize);
    
    // call SetSize
    ((wxWindow *)wMe)->SetSize(*size);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetSizeHints(int minW=-1, int minH=-1, int maxW=-1, int maxH=-1, int incW=-1, int incH=-1)
void wxWindow_SetSizeHints()
{
    // int incH=-1
    int incH = (wArgCount > 5 ? (int)wPopNumber() : -1);
    // int incW=-1
    int incW = (wArgCount > 4 ? (int)wPopNumber() : -1);
    // int maxH=-1
    int maxH = (wArgCount > 3 ? (int)wPopNumber() : -1);
    // int maxW=-1
    int maxW = (wArgCount > 2 ? (int)wPopNumber() : -1);
    // int minH=-1
    int minH = (wArgCount > 1 ? (int)wPopNumber() : -1);
    // int minW=-1
    int minW = (wArgCount > 0 ? (int)wPopNumber() : -1);
    
    // call SetSizeHints
    ((wxWindow *)wMe)->SetSizeHints(minW, minH, maxW, maxH, incW, incH);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSizer(wxSizer* sizer)
void wxWindow_SetSizer()
{
    // wxSizer* sizer
    wxSizer *sizer = (wxSizer *)wPopPointer( _wxSizer);
    
    // call SetSizer
    ((wxWindow *)wMe)->SetSizer(sizer);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetTitle(const wxString& title)
void wxWindow_SetTitle()
{
    // const wxString& title
    wxString title = wPopString();
    
    // call SetTitle
    ((wxWindow *)wMe)->SetTitle(title);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetValidator(const wxValidator& validator)
void wxWindow_SetValidator()
{
    // const wxValidator& validator
    wxValidator *validator = (wxValidator *)wPopPointer( _wxValidator);
    
    // call SetValidator
    ((wxWindow *)wMe)->SetValidator(*validator);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetToolTip(const wxString& tip)
void wxWindow_SetToolTip()
{
    // const wxString& tip
    wxString tip = wPopString();
    
    // call SetToolTip
    ((wxWindow *)wMe)->SetToolTip(tip);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxToolTip* GetToolTip() const
void wxWindow_GetToolTip()
{
    wxToolTip *returns;
    
    // call GetToolTip
    returns = ((wxWindow *)wMe)->GetToolTip();

    wPushNumber( wAddObject( _wxToolTip, (int)returns ) );
}

// void SetWindowStyle(long style)
void wxWindow_SetWindowStyle()
{
    // long style
    long style = (long)wPopNumber();
    
    // call SetWindowStyle
    ((wxWindow *)wMe)->SetWindowStyle(style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetWindowStyleFlag(long style)
void wxWindow_SetWindowStyleFlag()
{
    // long style
    long style = (long)wPopNumber();
    
    // call SetWindowStyleFlag
    ((wxWindow *)wMe)->SetWindowStyleFlag(style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual bool Show(bool show)
void wxWindow_Show()
{
    bool returns;
    // bool show
    bool show = (bool)wPopNumber();
    
    // call Show
    returns = ((wxWindow *)wMe)->Show(show);

    wPushNumber( (wNumber)returns);
}

// virtual bool TransferDataFromWindow()
void wxWindow_TransferDataFromWindow()
{
    bool returns;
    
    // call TransferDataFromWindow
    returns = ((wxWindow *)wMe)->TransferDataFromWindow();

    wPushNumber( (wNumber)returns);
}

// virtual bool TransferDataToWindow()
void wxWindow_TransferDataToWindow()
{
    bool returns;
    
    // call TransferDataToWindow
    returns = ((wxWindow *)wMe)->TransferDataToWindow();

    wPushNumber( (wNumber)returns);
}

// virtual bool Validate()
void wxWindow_Validate()
{
    bool returns;
    
    // call Validate
    returns = ((wxWindow *)wMe)->Validate();

    wPushNumber( (wNumber)returns);
}

// void WarpPointer(int x, int y)
void wxWindow_WarpPointer()
{
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call WarpPointer
    ((wxWindow *)wMe)->WarpPointer(x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxPanel_del()
{
    delete (wxPanel *)wMe;
}

// wxPanel(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxTAB_TRAVERSAL, const wxString& name = "panel")
void wxPanel_new()
{
    wxPanel *returns;
    // const wxString& name = "panel"
    wxString name = (wArgCount > 5 ? wPopString() : "panel");
    // long style = wxTAB_TRAVERSAL
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxTAB_TRAVERSAL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxPanel
    returns = new wxPanel(parent, id, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxPanel, (int)returns ) );
}

// ~wxPanel()
void wxPanel_dtor()
{
    
    // call ~wxPanel
    ((wxPanel *)wMe)->~wxPanel();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxTAB_TRAVERSAL, const wxString& name = "panel")
void wxPanel_Create()
{
    bool returns;
    // const wxString& name = "panel"
    wxString name = (wArgCount > 5 ? wPopString() : "panel");
    // long style = wxTAB_TRAVERSAL
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxTAB_TRAVERSAL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxPanel *)wMe)->Create(parent, id, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// void InitDialog()
void wxPanel_InitDialog()
{
    
    // call InitDialog
    ((wxPanel *)wMe)->InitDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetDefaultItem(wxButton *btn)
void wxPanel_SetDefaultItem()
{
    // wxButton *btn
    wxButton *btn = (wxButton *)wPopPointer( _wxButton);
    
    // call SetDefaultItem
    ((wxPanel *)wMe)->SetDefaultItem(btn);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxDialog_del()
{
    delete (wxDialog *)wMe;
}

// wxDialog(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_DIALOG_STYLE, const wxString& name = "dialogBox")
void wxDialog_new()
{
    wxDialog *returns;
    // const wxString& name = "dialogBox"
    wxString name = (wArgCount > 6 ? wPopString() : "dialogBox");
    // long style = wxDEFAULT_DIALOG_STYLE
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_DIALOG_STYLE);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxDialog
    returns = new wxDialog(parent, id, title, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxDialog, (int)returns ) );
}

// ~wxDialog()
void wxDialog_dtor()
{
    
    // call ~wxDialog
    ((wxDialog *)wMe)->~wxDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Centre(int direction = wxBOTH)
void wxDialog_Centre()
{
    // int direction = wxBOTH
    int direction = (wArgCount > 0 ? (int)wPopNumber() : wxBOTH);
    
    // call Centre
    ((wxDialog *)wMe)->Centre(direction);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_DIALOG_STYLE, const wxString& name = "dialogBox")
void wxDialog_Create()
{
    bool returns;
    // const wxString& name = "dialogBox"
    wxString name = (wArgCount > 6 ? wPopString() : "dialogBox");
    // long style = wxDEFAULT_DIALOG_STYLE
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_DIALOG_STYLE);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxDialog *)wMe)->Create(parent, id, title, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// void EndModal(int retCode)
void wxDialog_EndModal()
{
    // int retCode
    int retCode = (int)wPopNumber();
    
    // call EndModal
    ((wxDialog *)wMe)->EndModal(retCode);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int GetReturnCode()
void wxDialog_GetReturnCode()
{
    int returns;
    
    // call GetReturnCode
    returns = ((wxDialog *)wMe)->GetReturnCode();

    wPushNumber( (wNumber)returns);
}

// wxString GetTitle() const
void wxDialog_GetTitle()
{
    wxString returns;
    
    // call GetTitle
    returns = ((wxDialog *)wMe)->GetTitle();

    wPushString( (char *)(returns.c_str()) );
}

// void Iconize(const bool iconize)
void wxDialog_Iconize()
{
    // const bool iconize
    bool iconize = (bool)wPopNumber();
    
    // call Iconize
    ((wxDialog *)wMe)->Iconize(iconize);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool IsIconized() const
void wxDialog_IsIconized()
{
    bool returns;
    
    // call IsIconized
    returns = ((wxDialog *)wMe)->IsIconized();

    wPushNumber( (wNumber)returns);
}

// bool IsModal() const
void wxDialog_IsModal()
{
    bool returns;
    
    // call IsModal
    returns = ((wxDialog *)wMe)->IsModal();

    wPushNumber( (wNumber)returns);
}

// void SetModal(const bool flag)
void wxDialog_SetModal()
{
    // const bool flag
    bool flag = (bool)wPopNumber();
    
    // call SetModal
    ((wxDialog *)wMe)->SetModal(flag);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetReturnCode(int retCode)
void wxDialog_SetReturnCode()
{
    // int retCode
    int retCode = (int)wPopNumber();
    
    // call SetReturnCode
    ((wxDialog *)wMe)->SetReturnCode(retCode);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetTitle(const wxString& title)
void wxDialog_SetTitle()
{
    // const wxString& title
    wxString title = wPopString();
    
    // call SetTitle
    ((wxDialog *)wMe)->SetTitle(title);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Show(const bool show)
void wxDialog_Show()
{
    bool returns;
    // const bool show
    bool show = (bool)wPopNumber();
    
    // call Show
    returns = ((wxDialog *)wMe)->Show(show);

    wPushNumber( (wNumber)returns);
}

// int ShowModal()
void wxDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxFrame_del()
{
    delete (wxFrame *)wMe;
}

// wxFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "frame")
void wxFrame_new()
{
    wxFrame *returns;
    // const wxString& name = "frame"
    wxString name = (wArgCount > 6 ? wPopString() : "frame");
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_FRAME_STYLE);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxFrame
    returns = new wxFrame(parent, id, title, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxFrame, (int)returns ) );
}

// ~wxFrame()
void wxFrame_dtor()
{
    
    // call ~wxFrame
    ((wxFrame *)wMe)->~wxFrame();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Centre(int direction = wxBOTH)
void wxFrame_Centre()
{
    // int direction = wxBOTH
    int direction = (wArgCount > 0 ? (int)wPopNumber() : wxBOTH);
    
    // call Centre
    ((wxFrame *)wMe)->Centre(direction);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Command(int id)
void wxFrame_Command()
{
    // int id
    int id = (int)wPopNumber();
    
    // call Command
    ((wxFrame *)wMe)->Command(id);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "frame")
void wxFrame_Create()
{
    bool returns;
    // const wxString& name = "frame"
    wxString name = (wArgCount > 6 ? wPopString() : "frame");
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_FRAME_STYLE);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxFrame *)wMe)->Create(parent, id, title, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// virtual wxStatusBar* CreateStatusBar(int number = 1, long style = 0, wxWindowID id = -1, const wxString& name = "statusBar")
void wxFrame_CreateStatusBar()
{
    wxStatusBar *returns;
    // const wxString& name = "statusBar"
    wxString name = (wArgCount > 3 ? wPopString() : "statusBar");
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 2 ? (wxWindowID)wPopNumber() : -1);
    // long style = 0
    long style = (wArgCount > 1 ? (long)wPopNumber() : 0);
    // int number = 1
    int number = (wArgCount > 0 ? (int)wPopNumber() : 1);
    
    // call CreateStatusBar
    returns = ((wxFrame *)wMe)->CreateStatusBar(number, style, id, name);

    wPushNumber( wAddObject( _wxStatusBar, (int)returns ) );
}

// virtual wxToolBar* CreateToolBar(long style = wxNO_BORDER | wxTB_HORIZONTAL, wxWindowID id = -1, const wxString& name = "toolBar")
void wxFrame_CreateToolBar()
{
    wxToolBar *returns;
    // const wxString& name = "toolBar"
    wxString name = (wArgCount > 2 ? wPopString() : "toolBar");
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // long style = wxNO_BORDER | wxTB_HORIZONTAL
    long style = (wArgCount > 0 ? (long)wPopNumber() : wxNO_BORDER | wxTB_HORIZONTAL);
    
    // call CreateToolBar
    returns = ((wxFrame *)wMe)->CreateToolBar(style, id, name);

    wPushNumber( wAddObject( _wxToolBar, (int)returns ) );
}

// wxPoint GetClientAreaOrigin() const
void wxFrame_GetClientAreaOrigin()
{
    wxPoint *returns;
    
    // call GetClientAreaOrigin
    returns = &((wxFrame *)wMe)->GetClientAreaOrigin();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

// wxMenuBar* GetMenuBar() const
void wxFrame_GetMenuBar()
{
    wxMenuBar *returns;
    
    // call GetMenuBar
    returns = ((wxFrame *)wMe)->GetMenuBar();

    wPushNumber( wAddObject( _wxMenuBar, (int)returns ) );
}

// wxStatusBar* GetStatusBar() const
void wxFrame_GetStatusBar()
{
    wxStatusBar *returns;
    
    // call GetStatusBar
    returns = ((wxFrame *)wMe)->GetStatusBar();

    wPushNumber( wAddObject( _wxStatusBar, (int)returns ) );
}

// wxString GetTitle() const
void wxFrame_GetTitle()
{
    wxString returns;
    
    // call GetTitle
    returns = ((wxFrame *)wMe)->GetTitle();

    wPushString( (char *)(returns.c_str()) );
}

// wxToolBar* GetToolBar() const
void wxFrame_GetToolBar()
{
    wxToolBar *returns;
    
    // call GetToolBar
    returns = ((wxFrame *)wMe)->GetToolBar();

    wPushNumber( wAddObject( _wxToolBar, (int)returns ) );
}

// void Iconize(bool iconize)
void wxFrame_Iconize()
{
    // bool iconize
    bool iconize = (bool)wPopNumber();
    
    // call Iconize
    ((wxFrame *)wMe)->Iconize(iconize);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool IsIconized() const
void wxFrame_IsIconized()
{
    bool returns;
    
    // call IsIconized
    returns = ((wxFrame *)wMe)->IsIconized();

    wPushNumber( (wNumber)returns);
}

// bool IsMaximized() const
void wxFrame_IsMaximized()
{
    bool returns;
    
    // call IsMaximized
    returns = ((wxFrame *)wMe)->IsMaximized();

    wPushNumber( (wNumber)returns);
}

// void Maximize(bool maximize)
void wxFrame_Maximize()
{
    // bool maximize
    bool maximize = (bool)wPopNumber();
    
    // call Maximize
    ((wxFrame *)wMe)->Maximize(maximize);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetIcon(const wxIcon& icon)
void wxFrame_SetIcon()
{
    // const wxIcon& icon
    wxIcon *icon = (wxIcon *)wPopPointer( _wxIcon);
    
    // call SetIcon
    ((wxFrame *)wMe)->SetIcon(*icon);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMenuBar(wxMenuBar* menuBar)
void wxFrame_SetMenuBar()
{
    // wxMenuBar* menuBar
    wxMenuBar *menuBar = (wxMenuBar *)wPopPointer( _wxMenuBar);
    
    // call SetMenuBar
    ((wxFrame *)wMe)->SetMenuBar(menuBar);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStatusBar(wxStatusBar* statusBar)
void wxFrame_SetStatusBar()
{
    // wxStatusBar* statusBar
    wxStatusBar *statusBar = (wxStatusBar *)wPopPointer( _wxStatusBar);
    
    // call SetStatusBar
    ((wxFrame *)wMe)->SetStatusBar(statusBar);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetStatusText(const wxString& text, int number = 0)
void wxFrame_SetStatusText()
{
    // int number = 0
    int number = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // const wxString& text
    wxString text = wPopString();
    
    // call SetStatusText
    ((wxFrame *)wMe)->SetStatusText(text, number);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetStatusWidths(int n, int *widths)
void wxFrame_SetStatusWidths()
{
    // int *widths
    int *widths = (int *)wPopPointer( 0 );
    // int n
    int n = (int)wPopNumber();
    
    // call SetStatusWidths
    ((wxFrame *)wMe)->SetStatusWidths(n, widths);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetToolBar(wxToolBar* toolBar)
void wxFrame_SetToolBar()
{
    // wxToolBar* toolBar
    wxToolBar *toolBar = (wxToolBar *)wPopPointer( _wxToolBar);
    
    // call SetToolBar
    ((wxFrame *)wMe)->SetToolBar(toolBar);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetTitle(const wxString& title)
void wxFrame_SetTitle()
{
    // const wxString& title
    wxString title = wPopString();
    
    // call SetTitle
    ((wxFrame *)wMe)->SetTitle(title);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxMDIParentFrame_del()
{
    delete (wxMDIParentFrame *)wMe;
}

// wxMDIParentFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL, const wxString& name = "frame")
void wxMDIParentFrame_new()
{
    wxMDIParentFrame *returns;
    // const wxString& name = "frame"
    wxString name = (wArgCount > 6 ? wPopString() : "frame");
    // long style = wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxMDIParentFrame
    returns = new wxMDIParentFrame(parent, id, title, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxMDIParentFrame, (int)returns ) );
}

// ~wxMDIParentFrame()
void wxMDIParentFrame_dtor()
{
    
    // call ~wxMDIParentFrame
    ((wxMDIParentFrame *)wMe)->~wxMDIParentFrame();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void ActivateNext()
void wxMDIParentFrame_ActivateNext()
{
    
    // call ActivateNext
    ((wxMDIParentFrame *)wMe)->ActivateNext();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void ActivatePrevious()
void wxMDIParentFrame_ActivatePrevious()
{
    
    // call ActivatePrevious
    ((wxMDIParentFrame *)wMe)->ActivatePrevious();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void ArrangeIcons()
void wxMDIParentFrame_ArrangeIcons()
{
    
    // call ArrangeIcons
    ((wxMDIParentFrame *)wMe)->ArrangeIcons();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Cascade()
void wxMDIParentFrame_Cascade()
{
    
    // call Cascade
    ((wxMDIParentFrame *)wMe)->Cascade();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL, const wxString& name = "frame")
void wxMDIParentFrame_Create()
{
    bool returns;
    // const wxString& name = "frame"
    wxString name = (wArgCount > 6 ? wPopString() : "frame");
    // long style = wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxMDIParentFrame *)wMe)->Create(parent, id, title, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

    void wxMDIParentFrame_GetClientSizeWidth()
    {
        int width, height;
        ((wxMDIParentFrame *)wMe)->GetClientSize(&width, &height);
        wPushNumber( (wNumber)width );
    }

    void wxMDIParentFrame_GetClientSizeHeight()
    {
        int width, height;
        ((wxMDIParentFrame *)wMe)->GetClientSize(&width, &height);
        wPushNumber( (wNumber)height );
    }

// wxMDIChildFrame* GetActiveChild() const
void wxMDIParentFrame_GetActiveChild()
{
    wxMDIChildFrame *returns;
    
    // call GetActiveChild
    returns = ((wxMDIParentFrame *)wMe)->GetActiveChild();

    wPushNumber( wAddObject( _wxMDIChildFrame, (int)returns ) );
}

// wxMDIClientWindow* GetClientWindow() const
void wxMDIParentFrame_GetClientWindow()
{
    wxMDIClientWindow *returns;
    
    // call GetClientWindow
    returns = ((wxMDIParentFrame *)wMe)->GetClientWindow();

    wPushNumber( wAddObject( _wxMDIClientWindow, (int)returns ) );
}

// virtual wxWindow* GetToolBar() const
void wxMDIParentFrame_GetToolBar()
{
    wxWindow *returns;
    
    // call GetToolBar
    returns = ((wxMDIParentFrame *)wMe)->GetToolBar();

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// virtual void SetToolBar(wxToolBar* toolbar)
void wxMDIParentFrame_SetToolBar()
{
    // wxToolBar* toolbar
    wxToolBar *toolbar = (wxToolBar *)wPopPointer( _wxToolBar);
    
    // call SetToolBar
    ((wxMDIParentFrame *)wMe)->SetToolBar(toolbar);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Tile()
void wxMDIParentFrame_Tile()
{
    
    // call Tile
    ((wxMDIParentFrame *)wMe)->Tile();

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxMDIChildFrame_del()
{
    delete (wxMDIChildFrame *)wMe;
}

// wxMDIChildFrame(wxMDIParentFrame* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "frame")
void wxMDIChildFrame_new()
{
    wxMDIChildFrame *returns;
    // const wxString& name = "frame"
    wxString name = (wArgCount > 6 ? wPopString() : "frame");
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_FRAME_STYLE);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxMDIParentFrame* parent
    wxMDIParentFrame *parent = (wxMDIParentFrame *)wPopPointer( _wxMDIParentFrame);
    
    // call wxMDIChildFrame
    returns = new wxMDIChildFrame(parent, id, title, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxMDIChildFrame, (int)returns ) );
}

// ~wxMDIChildFrame()
void wxMDIChildFrame_dtor()
{
    
    // call ~wxMDIChildFrame
    ((wxMDIChildFrame *)wMe)->~wxMDIChildFrame();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Activate()
void wxMDIChildFrame_Activate()
{
    
    // call Activate
    ((wxMDIChildFrame *)wMe)->Activate();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxMDIParentFrame* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "frame")
void wxMDIChildFrame_Create()
{
    bool returns;
    // const wxString& name = "frame"
    wxString name = (wArgCount > 6 ? wPopString() : "frame");
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_FRAME_STYLE);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxMDIParentFrame* parent
    wxMDIParentFrame *parent = (wxMDIParentFrame *)wPopPointer( _wxMDIParentFrame);
    
    // call Create
    returns = ((wxMDIChildFrame *)wMe)->Create(parent, id, title, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// void Restore()
void wxMDIChildFrame_Restore()
{
    
    // call Restore
    ((wxMDIChildFrame *)wMe)->Restore();

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxMiniFrame_del()
{
    delete (wxMiniFrame *)wMe;
}

// wxMiniFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "frame")
void wxMiniFrame_new()
{
    wxMiniFrame *returns;
    // const wxString& name = "frame"
    wxString name = (wArgCount > 6 ? wPopString() : "frame");
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_FRAME_STYLE);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxMiniFrame
    returns = new wxMiniFrame(parent, id, title, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxMiniFrame, (int)returns ) );
}

// ~wxMiniFrame()
void wxMiniFrame_dtor()
{
    
    // call ~wxMiniFrame
    ((wxMiniFrame *)wMe)->~wxMiniFrame();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxDEFAULT_FRAME_STYLE, const wxString& name = "frame")
void wxMiniFrame_Create()
{
    bool returns;
    // const wxString& name = "frame"
    wxString name = (wArgCount > 6 ? wPopString() : "frame");
    // long style = wxDEFAULT_FRAME_STYLE
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxDEFAULT_FRAME_STYLE);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& title
    wxString title = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxMiniFrame *)wMe)->Create(parent, id, title, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}


void wxScrolledWindow_del()
{
    delete (wxScrolledWindow *)wMe;
}

// wxScrolledWindow(wxWindow* parent, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxHSCROLL | wxVSCROLL, const wxString& name = "scrolledWindow")
void wxScrolledWindow_new()
{
    wxScrolledWindow *returns;
    // const wxString& name = "scrolledWindow"
    wxString name = (wArgCount > 5 ? wPopString() : "scrolledWindow");
    // long style = wxHSCROLL | wxVSCROLL
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxHSCROLL | wxVSCROLL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxScrolledWindow
    returns = new wxScrolledWindow(parent, id, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxScrolledWindow, (int)returns ) );
}

// ~wxScrolledWindow()
void wxScrolledWindow_dtor()
{
    
    // call ~wxScrolledWindow
    ((wxScrolledWindow *)wMe)->~wxScrolledWindow();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void CalcScrolledPosition( int x, int y, int *xx, int *yy) const
void wxScrolledWindow_CalcScrolledPosition()
{
    // int *yy
    int *yy = (int *)wPopPointer( 0 );
    // int *xx
    int *xx = (int *)wPopPointer( 0 );
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call CalcScrolledPosition
    ((wxScrolledWindow *)wMe)->CalcScrolledPosition(x, y, xx, yy);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void CalcUnscrolledPosition( int x, int y, int *xx, int *yy) const
void wxScrolledWindow_CalcUnscrolledPosition()
{
    // int *yy
    int *yy = (int *)wPopPointer( 0 );
    // int *xx
    int *xx = (int *)wPopPointer( 0 );
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call CalcUnscrolledPosition
    ((wxScrolledWindow *)wMe)->CalcUnscrolledPosition(x, y, xx, yy);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxHSCROLL | wxVSCROLL, const wxString& name = "scrolledWindow")
void wxScrolledWindow_Create()
{
    bool returns;
    // const wxString& name = "scrolledWindow"
    wxString name = (wArgCount > 5 ? wPopString() : "scrolledWindow");
    // long style = wxHSCROLL | wxVSCROLL
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxHSCROLL | wxVSCROLL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxScrolledWindow *)wMe)->Create(parent, id, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// void EnableScrolling(const bool xScrolling, const bool yScrolling)
void wxScrolledWindow_EnableScrolling()
{
    // const bool yScrolling
    bool yScrolling = (bool)wPopNumber();
    // const bool xScrolling
    bool xScrolling = (bool)wPopNumber();
    
    // call EnableScrolling
    ((wxScrolledWindow *)wMe)->EnableScrolling(xScrolling, yScrolling);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

    void wxScrolledWindow_GetScrollPixelsPerUnitX()
    {
        int xUnit, yUnit;
        ((wxScrolledWindow *)wMe)->GetScrollPixelsPerUnit(&xUnit, &yUnit);
        wPushNumber( (wNumber)xUnit );
    }

    void wxScrolledWindow_GetScrollPixelsPerUnitY()
    {
        int xUnit, yUnit;
        ((wxScrolledWindow *)wMe)->GetScrollPixelsPerUnit(&xUnit, &yUnit);
        wPushNumber( (wNumber)yUnit );
    }
    void wxScrolledWindow_GetVirtualSizeX()
    {
        int x, y;
        ((wxScrolledWindow *)wMe)->GetVirtualSize(&x, &y);
        wPushNumber( (wNumber)x );
    }

    void wxScrolledWindow_GetVirtualSizeY()
    {
        int x, y;
        ((wxScrolledWindow *)wMe)->GetVirtualSize(&x, &y);
        wPushNumber( (wNumber)y );
    }
// bool IsRetained() const
void wxScrolledWindow_IsRetained()
{
    bool returns;
    
    // call IsRetained
    returns = ((wxScrolledWindow *)wMe)->IsRetained();

    wPushNumber( (wNumber)returns);
}

// void PrepareDC(wxDC& dc)
void wxScrolledWindow_PrepareDC()
{
    // wxDC& dc
    wxDC *dc = (wxDC *)wPopPointer( _wxDC);
    
    // call PrepareDC
    ((wxScrolledWindow *)wMe)->PrepareDC(*dc);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Scroll(int x, int y)
void wxScrolledWindow_Scroll()
{
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call Scroll
    ((wxScrolledWindow *)wMe)->Scroll(x, y);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetScrollbars(int pixelsPerUnitX, int pixelsPerUnitY, int noUnitsX, int noUnitsY, int xPos = 0, int yPos = 0, bool noRefresh = FALSE)
void wxScrolledWindow_SetScrollbars()
{
    // bool noRefresh = FALSE
    bool noRefresh = (wArgCount > 6 ? (bool)wPopNumber() : FALSE);
    // int yPos = 0
    int yPos = (wArgCount > 5 ? (int)wPopNumber() : 0);
    // int xPos = 0
    int xPos = (wArgCount > 4 ? (int)wPopNumber() : 0);
    // int noUnitsY
    int noUnitsY = (int)wPopNumber();
    // int noUnitsX
    int noUnitsX = (int)wPopNumber();
    // int pixelsPerUnitY
    int pixelsPerUnitY = (int)wPopNumber();
    // int pixelsPerUnitX
    int pixelsPerUnitX = (int)wPopNumber();
    
    // call SetScrollbars
    ((wxScrolledWindow *)wMe)->SetScrollbars(pixelsPerUnitX, pixelsPerUnitY, noUnitsX, noUnitsY, xPos, yPos, noRefresh);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetTargetWindow(wxWindow* window)
void wxScrolledWindow_SetTargetWindow()
{
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call SetTargetWindow
    ((wxScrolledWindow *)wMe)->SetTargetWindow(window);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

    void wxScrolledWindow_GetViewStartX()
    {
        int x, y;
        ((wxScrolledWindow *)wMe)->GetViewStart(&x, &y);
        wPushNumber( (wNumber)x );
    }

    void wxScrolledWindow_GetViewStartY()
    {
        int x, y;
        ((wxScrolledWindow *)wMe)->GetViewStart(&x, &y);
        wPushNumber( (wNumber)y );
    }

void wxSplitterWindow_del()
{
    delete (wxSplitterWindow *)wMe;
}

// wxSplitterWindow(wxWindow* parent, wxWindowID id, const wxPoint& point = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style=wxSP_3D, const wxString& name = "splitterWindow")
void wxSplitterWindow_new()
{
    wxSplitterWindow *returns;
    // const wxString& name = "splitterWindow"
    wxString name = (wArgCount > 5 ? wPopString() : "splitterWindow");
    // long style=wxSP_3D
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxSP_3D);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& point = wxDefaultPosition
    const wxPoint *point = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxSplitterWindow
    returns = new wxSplitterWindow(parent, id, *point, *size, style, name);

    wPushNumber( wAddObject( _wxSplitterWindow, (int)returns ) );
}

// ~wxSplitterWindow()
void wxSplitterWindow_dtor()
{
    
    // call ~wxSplitterWindow
    ((wxSplitterWindow *)wMe)->~wxSplitterWindow();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow *parent, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSP_3D|wxCLIP_CHILDREN, const wxString& name = "splitter");
void wxSplitterWindow_Create()
{
    bool returns;
    // const wxString& name = "splitter"
    wxString name = (wArgCount > 5 ? wPopString() : "splitter");
    // long style = wxSP_3D|wxCLIP_CHILDREN
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxSP_3D|wxCLIP_CHILDREN);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxSplitterWindow *)wMe)->Create(parent, id, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// int GetMinimumPaneSize() const
void wxSplitterWindow_GetMinimumPaneSize()
{
    int returns;
    
    // call GetMinimumPaneSize
    returns = ((wxSplitterWindow *)wMe)->GetMinimumPaneSize();

    wPushNumber( (wNumber)returns);
}

// int GetSashPosition()
void wxSplitterWindow_GetSashPosition()
{
    int returns;
    
    // call GetSashPosition
    returns = ((wxSplitterWindow *)wMe)->GetSashPosition();

    wPushNumber( (wNumber)returns);
}

// int GetSplitMode() const
void wxSplitterWindow_GetSplitMode()
{
    int returns;
    
    // call GetSplitMode
    returns = ((wxSplitterWindow *)wMe)->GetSplitMode();

    wPushNumber( (wNumber)returns);
}

// wxWindow* GetWindow1() const
void wxSplitterWindow_GetWindow1()
{
    wxWindow *returns;
    
    // call GetWindow1
    returns = ((wxSplitterWindow *)wMe)->GetWindow1();

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// wxWindow* GetWindow2() const
void wxSplitterWindow_GetWindow2()
{
    wxWindow *returns;
    
    // call GetWindow2
    returns = ((wxSplitterWindow *)wMe)->GetWindow2();

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// void Initialize(wxWindow* window)
void wxSplitterWindow_Initialize()
{
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Initialize
    ((wxSplitterWindow *)wMe)->Initialize(window);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool IsSplit() const
void wxSplitterWindow_IsSplit()
{
    bool returns;
    
    // call IsSplit
    returns = ((wxSplitterWindow *)wMe)->IsSplit();

    wPushNumber( (wNumber)returns);
}

// bool ReplaceWindow(wxWindow * winOld, wxWindow * winNew)
void wxSplitterWindow_ReplaceWindow()
{
    bool returns;
    // wxWindow * winNew
    wxWindow *winNew = (wxWindow *)wPopPointer( _wxWindow);
    // wxWindow * winOld
    wxWindow *winOld = (wxWindow *)wPopPointer( _wxWindow);
    
    // call ReplaceWindow
    returns = ((wxSplitterWindow *)wMe)->ReplaceWindow(winOld, winNew);

    wPushNumber( (wNumber)returns);
}

// void SetSashPosition(int position, const bool redraw = TRUE)
void wxSplitterWindow_SetSashPosition()
{
    // const bool redraw = TRUE
    const bool redraw = (wArgCount > 1 ? (bool)wPopNumber() : TRUE);
    // int position
    int position = (int)wPopNumber();
    
    // call SetSashPosition
    ((wxSplitterWindow *)wMe)->SetSashPosition(position, redraw);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMinimumPaneSize(int paneSize)
void wxSplitterWindow_SetMinimumPaneSize()
{
    // int paneSize
    int paneSize = (int)wPopNumber();
    
    // call SetMinimumPaneSize
    ((wxSplitterWindow *)wMe)->SetMinimumPaneSize(paneSize);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSplitMode(int mode)
void wxSplitterWindow_SetSplitMode()
{
    // int mode
    int mode = (int)wPopNumber();
    
    // call SetSplitMode
    ((wxSplitterWindow *)wMe)->SetSplitMode(mode);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool SplitHorizontally(wxWindow* window1, wxWindow* window2, int sashPosition = 0)
void wxSplitterWindow_SplitHorizontally()
{
    bool returns;
    // int sashPosition = 0
    int sashPosition = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // wxWindow* window2
    wxWindow *window2 = (wxWindow *)wPopPointer( _wxWindow);
    // wxWindow* window1
    wxWindow *window1 = (wxWindow *)wPopPointer( _wxWindow);
    
    // call SplitHorizontally
    returns = ((wxSplitterWindow *)wMe)->SplitHorizontally(window1, window2, sashPosition);

    wPushNumber( (wNumber)returns);
}

// bool SplitVertically(wxWindow* window1, wxWindow* window2, int sashPosition = 0)
void wxSplitterWindow_SplitVertically()
{
    bool returns;
    // int sashPosition = 0
    int sashPosition = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // wxWindow* window2
    wxWindow *window2 = (wxWindow *)wPopPointer( _wxWindow);
    // wxWindow* window1
    wxWindow *window1 = (wxWindow *)wPopPointer( _wxWindow);
    
    // call SplitVertically
    returns = ((wxSplitterWindow *)wMe)->SplitVertically(window1, window2, sashPosition);

    wPushNumber( (wNumber)returns);
}

// bool Unsplit(wxWindow* toRemove = NULL)
void wxSplitterWindow_Unsplit()
{
    bool returns;
    // wxWindow* toRemove = NULL
    wxWindow *toRemove = (wArgCount > 0 ? (wxWindow *)wPopPointer( _wxWindow) : NULL);
    
    // call Unsplit
    returns = ((wxSplitterWindow *)wMe)->Unsplit(toRemove);

    wPushNumber( (wNumber)returns);
}


void wxStatusBar_del()
{
    delete (wxStatusBar *)wMe;
}

// ~wxStatusBar()
void wxStatusBar_dtor()
{
    
    // call ~wxStatusBar
    ((wxStatusBar *)wMe)->~wxStatusBar();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow *parent, wxWindowID id, long style, const wxString& name = wxPanelNameStr)
void wxStatusBar_Create()
{
    bool returns;
    // const wxString& name = wxPanelNameStr
    wxString name = (wArgCount > 3 ? wPopString() : wxPanelNameStr);
    // long style
    long style = (long)wPopNumber();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxStatusBar *)wMe)->Create(parent, id, style, name);

    wPushNumber( (wNumber)returns);
}

// virtual bool GetFieldRect(int i, wxRect& rect) const
void wxStatusBar_GetFieldRect()
{
    bool returns;
    // wxRect& rect
    wxRect *rect = (wxRect *)wPopPointer( _wxRect);
    // int i
    int i = (int)wPopNumber();
    
    // call GetFieldRect
    returns = ((wxStatusBar *)wMe)->GetFieldRect(i, *rect);

    wPushNumber( (wNumber)returns);
}

// int GetFieldsCount() const
void wxStatusBar_GetFieldsCount()
{
    int returns;
    
    // call GetFieldsCount
    returns = ((wxStatusBar *)wMe)->GetFieldsCount();

    wPushNumber( (wNumber)returns);
}

// virtual wxString GetStatusText(int ir = 0) const
void wxStatusBar_GetStatusText()
{
    wxString returns;
    // int ir = 0
    int ir = (wArgCount > 0 ? (int)wPopNumber() : 0);
    
    // call GetStatusText
    returns = ((wxStatusBar *)wMe)->GetStatusText(ir);

    wPushString( (char *)(returns.c_str()) );
}

// virtual void SetFieldsCount(int number = 1, int* widths = NULL)
void wxStatusBar_SetFieldsCount()
{
    // int* widths = NULL
    int *widths = (wArgCount > 1 ? (int *)wPopPointer( 0 ) : NULL);
    // int number = 1
    int number = (wArgCount > 0 ? (int)wPopNumber() : 1);
    
    // call SetFieldsCount
    ((wxStatusBar *)wMe)->SetFieldsCount(number, widths);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMinHeight(int height)
void wxStatusBar_SetMinHeight()
{
    // int height
    int height = (int)wPopNumber();
    
    // call SetMinHeight
    ((wxStatusBar *)wMe)->SetMinHeight(height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetStatusText(const wxString& text, int i = 0)
void wxStatusBar_SetStatusText()
{
    // int i = 0
    int i = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // const wxString& text
    wxString text = wPopString();
    
    // call SetStatusText
    ((wxStatusBar *)wMe)->SetStatusText(text, i);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetStatusWidths(int n, int *widths)
void wxStatusBar_SetStatusWidths()
{
    // int *widths
    int *widths = (int *)wPopPointer( 0 );
    // int n
    int n = (int)wPopNumber();
    
    // call SetStatusWidths
    ((wxStatusBar *)wMe)->SetStatusWidths(n, widths);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxControl_del()
{
    delete (wxControl *)wMe;
}

// void Command(wxCommandEvent& event)
void wxControl_Command()
{
    // wxCommandEvent& event
    wxCommandEvent *event = (wxCommandEvent *)wPopPointer( _wxCommandEvent);
    
    // call Command
    ((wxControl *)wMe)->Command(*event);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxString& GetLabel()
void wxControl_GetLabel()
{
    wxString *returns;
    
    // call GetLabel
    returns = &((wxControl *)wMe)->GetLabel();

    wPushString( (char *)(returns->c_str()) );
}

// void SetLabel(const wxString& label)
void wxControl_SetLabel()
{
    // const wxString& label
    wxString label = wPopString();
    
    // call SetLabel
    ((wxControl *)wMe)->SetLabel(label);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxButton_del()
{
    delete (wxButton *)wMe;
}

// wxButton(wxWindow *parent, wxWindowID id, const wxString& label, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = wxButtonNameStr)
void wxButton_new()
{
    wxButton *returns;
    // const wxString& name = wxButtonNameStr
    wxString name = (wArgCount > 7 ? wPopString() : wxButtonNameStr);
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxButton
    returns = new wxButton(parent, id, label, *pos, *size, style, *validator, name);

    wPushNumber( wAddObject( _wxButton, (int)returns ) );
}

// ~wxButton()
void wxButton_dtor()
{
    
    // call ~wxButton
    ((wxButton *)wMe)->~wxButton();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow *parent, wxWindowID id, const wxString& label, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = wxButtonNameStr)
void wxButton_Create()
{
    bool returns;
    // const wxString& name = wxButtonNameStr
    wxString name = (wArgCount > 7 ? wPopString() : wxButtonNameStr);
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxButton *)wMe)->Create(parent, id, label, *pos, *size, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// wxString GetLabel() const
void wxButton_GetLabel()
{
    wxString returns;
    
    // call GetLabel
    returns = ((wxButton *)wMe)->GetLabel();

    wPushString( (char *)(returns.c_str()) );
}

// wxSize GetDefaultSize()
void wxButton_GetDefaultSize()
{
    wxSize *returns;
    
    // call GetDefaultSize
    returns = &((wxButton *)wMe)->GetDefaultSize();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// void SetDefault()
void wxButton_SetDefault()
{
    
    // call SetDefault
    ((wxButton *)wMe)->SetDefault();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetLabel(const wxString& label)
void wxButton_SetLabel()
{
    // const wxString& label
    wxString label = wPopString();
    
    // call SetLabel
    ((wxButton *)wMe)->SetLabel(label);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxBitmapButton_del()
{
    delete (wxBitmapButton *)wMe;
}

// wxBitmapButton( wxWindow* parent, wxWindowID id, const wxBitmap& bitmap, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxBU_AUTODRAW, const wxValidator& validator = wxDefaultValidator, const wxString& name = "button")
void wxBitmapButton_new()
{
    wxBitmapButton *returns;
    // const wxString& name = "button"
    wxString name = (wArgCount > 7 ? wPopString() : "button");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxBU_AUTODRAW
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxBU_AUTODRAW);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxBitmapButton
    returns = new wxBitmapButton(parent, id, *bitmap, *pos, *size, style, *validator, name);

    wPushNumber( wAddObject( _wxBitmapButton, (int)returns ) );
}

// ~wxBitmapButton()
void wxBitmapButton_dtor()
{
    
    // call ~wxBitmapButton
    ((wxBitmapButton *)wMe)->~wxBitmapButton();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxBitmap& bitmap, const wxPoint& pos, const wxSize& size = wxDefaultSize, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = "button")
void wxBitmapButton_Create()
{
    bool returns;
    // const wxString& name = "button"
    wxString name = (wArgCount > 7 ? wPopString() : "button");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos
    wxPoint *pos = (wxPoint *)wPopPointer( _wxPoint);
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxBitmapButton *)wMe)->Create(parent, id, *bitmap, *pos, *size, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// wxBitmap& GetBitmapDisabled() const
void wxBitmapButton_GetBitmapDisabled()
{
    wxBitmap *returns;
    
    // call GetBitmapDisabled
    returns = &((wxBitmapButton *)wMe)->GetBitmapDisabled();

    wPushNumber( wAddObject( _wxBitmap, (int)returns ) );
}

// wxBitmap& GetBitmapFocus() const
void wxBitmapButton_GetBitmapFocus()
{
    wxBitmap *returns;
    
    // call GetBitmapFocus
    returns = &((wxBitmapButton *)wMe)->GetBitmapFocus();

    wPushNumber( wAddObject( _wxBitmap, (int)returns ) );
}

// wxBitmap& GetBitmapLabel() const
void wxBitmapButton_GetBitmapLabel()
{
    wxBitmap *returns;
    
    // call GetBitmapLabel
    returns = &((wxBitmapButton *)wMe)->GetBitmapLabel();

    wPushNumber( wAddObject( _wxBitmap, (int)returns ) );
}

// wxBitmap& GetBitmapSelected() const
void wxBitmapButton_GetBitmapSelected()
{
    wxBitmap *returns;
    
    // call GetBitmapSelected
    returns = &((wxBitmapButton *)wMe)->GetBitmapSelected();

    wPushNumber( wAddObject( _wxBitmap, (int)returns ) );
}

// void SetBitmapDisabled(const wxBitmap& bitmap)
void wxBitmapButton_SetBitmapDisabled()
{
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call SetBitmapDisabled
    ((wxBitmapButton *)wMe)->SetBitmapDisabled(*bitmap);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetBitmapFocus(const wxBitmap& bitmap)
void wxBitmapButton_SetBitmapFocus()
{
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call SetBitmapFocus
    ((wxBitmapButton *)wMe)->SetBitmapFocus(*bitmap);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetBitmapLabel(const wxBitmap& bitmap)
void wxBitmapButton_SetBitmapLabel()
{
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call SetBitmapLabel
    ((wxBitmapButton *)wMe)->SetBitmapLabel(*bitmap);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetBitmapSelected(const wxBitmap& bitmap)
void wxBitmapButton_SetBitmapSelected()
{
    // const wxBitmap& bitmap
    wxBitmap *bitmap = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call SetBitmapSelected
    ((wxBitmapButton *)wMe)->SetBitmapSelected(*bitmap);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxCalendarCtrl_del()
{
    delete (wxCalendarCtrl *)wMe;
}

// wxCalendarCtrl(wxWindow* parent, wxWindowID id, const wxDateTime& date = wxDefaultDateTime, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxCAL_SHOW_HOLIDAYS, const wxString& name = wxCalendarNameStr)
void wxCalendarCtrl_new()
{
    wxCalendarCtrl *returns;
    // const wxString& name = wxCalendarNameStr
    wxString name = (wArgCount > 6 ? wPopString() : wxCalendarNameStr);
    // long style = wxCAL_SHOW_HOLIDAYS
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxCAL_SHOW_HOLIDAYS);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxDateTime& date = wxDefaultDateTime
    const wxDateTime *date = (wArgCount > 2 ? (wxDateTime *)wPopPointer( _wxDateTime) : &wxDefaultDateTime);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxCalendarCtrl
    returns = new wxCalendarCtrl(parent, id, *date, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxCalendarCtrl, (int)returns ) );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxDateTime& date = wxDefaultDateTime, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxCAL_SHOW_HOLIDAYS, const wxString& name = wxCalendarNameStr)
void wxCalendarCtrl_Create()
{
    bool returns;
    // const wxString& name = wxCalendarNameStr
    wxString name = (wArgCount > 6 ? wPopString() : wxCalendarNameStr);
    // long style = wxCAL_SHOW_HOLIDAYS
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxCAL_SHOW_HOLIDAYS);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxDateTime& date = wxDefaultDateTime
    const wxDateTime *date = (wArgCount > 2 ? (wxDateTime *)wPopPointer( _wxDateTime) : &wxDefaultDateTime);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxCalendarCtrl *)wMe)->Create(parent, id, *date, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// ~wxCalendarCtrl()
void wxCalendarCtrl_dtor()
{
    
    // call ~wxCalendarCtrl
    ((wxCalendarCtrl *)wMe)->~wxCalendarCtrl();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetDate(const wxDateTime& date)
void wxCalendarCtrl_SetDate()
{
    // const wxDateTime& date
    wxDateTime *date = (wxDateTime *)wPopPointer( _wxDateTime);
    
    // call SetDate
    ((wxCalendarCtrl *)wMe)->SetDate(*date);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void EnableYearChange(bool enable = TRUE)
void wxCalendarCtrl_EnableYearChange()
{
    // bool enable = TRUE
    bool enable = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call EnableYearChange
    ((wxCalendarCtrl *)wMe)->EnableYearChange(enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void EnableMonthChange(bool enable = TRUE)
void wxCalendarCtrl_EnableMonthChange()
{
    // bool enable = TRUE
    bool enable = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call EnableMonthChange
    ((wxCalendarCtrl *)wMe)->EnableMonthChange(enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void EnableHolidayDisplay(bool display = TRUE)
void wxCalendarCtrl_EnableHolidayDisplay()
{
    // bool display = TRUE
    bool display = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call EnableHolidayDisplay
    ((wxCalendarCtrl *)wMe)->EnableHolidayDisplay(display);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias SetHeaderColors void SetHeaderColours(const wxColour& colFg, const wxColour& colBg)
void wxCalendarCtrl_SetHeaderColours()
{
    // const wxColour& colBg
    wxColour *colBg = (wxColour *)wPopPointer( _wxColour);
    // const wxColour& colFg
    wxColour *colFg = (wxColour *)wPopPointer( _wxColour);
    
    // call SetHeaderColours
    ((wxCalendarCtrl *)wMe)->SetHeaderColours(*colFg, *colBg);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias GetHeaderColorFg const wxColour& GetHeaderColourFg() const
void wxCalendarCtrl_GetHeaderColourFg()
{
    const wxColour *returns;
    
    // call GetHeaderColourFg
    returns = &((wxCalendarCtrl *)wMe)->GetHeaderColourFg();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// %alias GetHeaderColorBg const wxColour& GetHeaderColourBg() const
void wxCalendarCtrl_GetHeaderColourBg()
{
    const wxColour *returns;
    
    // call GetHeaderColourBg
    returns = &((wxCalendarCtrl *)wMe)->GetHeaderColourBg();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// %alias SetHighlightColors void SetHighlightColours(const wxColour& colFg, const wxColour& colBg)
void wxCalendarCtrl_SetHighlightColours()
{
    // const wxColour& colBg
    wxColour *colBg = (wxColour *)wPopPointer( _wxColour);
    // const wxColour& colFg
    wxColour *colFg = (wxColour *)wPopPointer( _wxColour);
    
    // call SetHighlightColours
    ((wxCalendarCtrl *)wMe)->SetHighlightColours(*colFg, *colBg);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias GetHighlightColorFg const wxColour& GetHighlightColourFg() const
void wxCalendarCtrl_GetHighlightColourFg()
{
    const wxColour *returns;
    
    // call GetHighlightColourFg
    returns = &((wxCalendarCtrl *)wMe)->GetHighlightColourFg();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// %alias GetHighlightColorBg const wxColour& GetHighlightColourBg() const
void wxCalendarCtrl_GetHighlightColourBg()
{
    const wxColour *returns;
    
    // call GetHighlightColourBg
    returns = &((wxCalendarCtrl *)wMe)->GetHighlightColourBg();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// %alias SetHolidayColors void SetHolidayColours(const wxColour& colFg, const wxColour& colBg)
void wxCalendarCtrl_SetHolidayColours()
{
    // const wxColour& colBg
    wxColour *colBg = (wxColour *)wPopPointer( _wxColour);
    // const wxColour& colFg
    wxColour *colFg = (wxColour *)wPopPointer( _wxColour);
    
    // call SetHolidayColours
    ((wxCalendarCtrl *)wMe)->SetHolidayColours(*colFg, *colBg);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias GetHolidayColorFg const wxColour& GetHolidayColourFg() const
void wxCalendarCtrl_GetHolidayColourFg()
{
    const wxColour *returns;
    
    // call GetHolidayColourFg
    returns = &((wxCalendarCtrl *)wMe)->GetHolidayColourFg();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// %alias GetHolidayColorBg const wxColour& GetHolidayColourBg() const
void wxCalendarCtrl_GetHolidayColourBg()
{
    const wxColour *returns;
    
    // call GetHolidayColourBg
    returns = &((wxCalendarCtrl *)wMe)->GetHolidayColourBg();

    wPushNumber( wAddObject( _wxColour, (int)returns ) );
}

// wxCalendarDateAttr * GetAttr(size_t day) const
void wxCalendarCtrl_GetAttr()
{
    wxCalendarDateAttr *returns;
    // size_t day
    size_t day = (size_t)wPopNumber();
    
    // call GetAttr
    returns = ((wxCalendarCtrl *)wMe)->GetAttr(day);

    wPushNumber( wAddObject( _wxCalendarDateAttr, (int)returns ) );
}

// void SetAttr(size_t day, wxCalendarDateAttr* attr)
void wxCalendarCtrl_SetAttr()
{
    // wxCalendarDateAttr* attr
    wxCalendarDateAttr *attr = (wxCalendarDateAttr *)wPopPointer( _wxCalendarDateAttr);
    // size_t day
    size_t day = (size_t)wPopNumber();
    
    // call SetAttr
    ((wxCalendarCtrl *)wMe)->SetAttr(day, attr);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetHoliday(size_t day)
void wxCalendarCtrl_SetHoliday()
{
    // size_t day
    size_t day = (size_t)wPopNumber();
    
    // call SetHoliday
    ((wxCalendarCtrl *)wMe)->SetHoliday(day);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void ResetAttr(size_t day)
void wxCalendarCtrl_ResetAttr()
{
    // size_t day
    size_t day = (size_t)wPopNumber();
    
    // call ResetAttr
    ((wxCalendarCtrl *)wMe)->ResetAttr(day);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxCheckBox_del()
{
    delete (wxCheckBox *)wMe;
}

// wxCheckBox(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxValidator& val = wxDefaultValidator, const wxString& name = "checkBox")
void wxCheckBox_new()
{
    wxCheckBox *returns;
    // const wxString& name = "checkBox"
    wxString name = (wArgCount > 7 ? wPopString() : "checkBox");
    // const wxValidator& val = wxDefaultValidator
    const wxValidator *val = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxCheckBox
    returns = new wxCheckBox(parent, id, label, *pos, *size, style, *val, name);

    wPushNumber( wAddObject( _wxCheckBox, (int)returns ) );
}

// ~wxCheckBox()
void wxCheckBox_dtor()
{
    
    // call ~wxCheckBox
    ((wxCheckBox *)wMe)->~wxCheckBox();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxValidator& val = wxDefaultValidator, const wxString& name = "checkBox")
void wxCheckBox_Create()
{
    bool returns;
    // const wxString& name = "checkBox"
    wxString name = (wArgCount > 7 ? wPopString() : "checkBox");
    // const wxValidator& val = wxDefaultValidator
    const wxValidator *val = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxCheckBox *)wMe)->Create(parent, id, label, *pos, *size, style, *val, name);

    wPushNumber( (wNumber)returns);
}

// bool GetValue() const
void wxCheckBox_GetValue()
{
    bool returns;
    
    // call GetValue
    returns = ((wxCheckBox *)wMe)->GetValue();

    wPushNumber( (wNumber)returns);
}

// void SetValue(const bool state)
void wxCheckBox_SetValue()
{
    // const bool state
    bool state = (bool)wPopNumber();
    
    // call SetValue
    ((wxCheckBox *)wMe)->SetValue(state);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxChoice_del()
{
    delete (wxChoice *)wMe;
}

// wxChoice(wxWindow *parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, int n = 0, const wxString choices[] = NULL, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = wxChoiceNameStr)
void wxChoice_new()
{
    wxChoice *returns;
    // const wxString& name = wxChoiceNameStr
    wxString name = (wArgCount > 8 ? wPopString() : wxChoiceNameStr);
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 7 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 6 ? (long)wPopNumber() : 0);
    // const wxString choices[] = NULL
    if (wArgCount > 4) wPopNumber();
    wxString choices[1];
    // int n = 0
    int n = (wArgCount > 4 ? (int)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxChoice
    returns = new wxChoice(parent, id, *pos, *size, n, choices, style, *validator, name);

    wPushNumber( wAddObject( _wxChoice, (int)returns ) );
}

// ~wxChoice()
void wxChoice_dtor()
{
    
    // call ~wxChoice
    ((wxChoice *)wMe)->~wxChoice();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Append(const wxString& item)
void wxChoice_Append()
{
    // const wxString& item
    wxString item = wPopString();
    
    // call Append
    ((wxChoice *)wMe)->Append(item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Clear()
void wxChoice_Clear()
{
    
    // call Clear
    ((wxChoice *)wMe)->Clear();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow *parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, int n = 0, const wxString choices[] = NULL, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = wxChoiceNameStr)
void wxChoice_Create()
{
    bool returns;
    // const wxString& name = wxChoiceNameStr
    wxString name = (wArgCount > 8 ? wPopString() : wxChoiceNameStr);
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 7 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 6 ? (long)wPopNumber() : 0);
    // const wxString choices[] = NULL
    if (wArgCount > 4) wPopNumber();
    wxString choices[1];
    // int n = 0
    int n = (wArgCount > 4 ? (int)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxChoice *)wMe)->Create(parent, id, *pos, *size, n, choices, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// int FindString(const wxString& string) const
void wxChoice_FindString()
{
    int returns;
    // const wxString& string
    wxString string = wPopString();
    
    // call FindString
    returns = ((wxChoice *)wMe)->FindString(string);

    wPushNumber( (wNumber)returns);
}

// int GetColumns() const
void wxChoice_GetColumns()
{
    int returns;
    
    // call GetColumns
    returns = ((wxChoice *)wMe)->GetColumns();

    wPushNumber( (wNumber)returns);
}

// void* GetClientData(int n) const
void wxChoice_GetClientData()
{
    // int n
    int n = (int)wPopNumber();
    
    // call GetClientData
    ((wxChoice *)wMe)->GetClientData(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int GetSelection() const
void wxChoice_GetSelection()
{
    int returns;
    
    // call GetSelection
    returns = ((wxChoice *)wMe)->GetSelection();

    wPushNumber( (wNumber)returns);
}

// wxString GetString(int n) const
void wxChoice_GetString()
{
    wxString returns;
    // int n
    int n = (int)wPopNumber();
    
    // call GetString
    returns = ((wxChoice *)wMe)->GetString(n);

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetStringSelection() const
void wxChoice_GetStringSelection()
{
    wxString returns;
    
    // call GetStringSelection
    returns = ((wxChoice *)wMe)->GetStringSelection();

    wPushString( (char *)(returns.c_str()) );
}

// void SetClientData(int n, void* data)
void wxChoice_SetClientData()
{
    // void* data
    void *data = (void *)wPopPointer( 0 );
    // int n
    int n = (int)wPopNumber();
    
    // call SetClientData
    ((wxChoice *)wMe)->SetClientData(n, data);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetColumns(int n = 1)
void wxChoice_SetColumns()
{
    // int n = 1
    int n = (wArgCount > 0 ? (int)wPopNumber() : 1);
    
    // call SetColumns
    ((wxChoice *)wMe)->SetColumns(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSelection(int n)
void wxChoice_SetSelection()
{
    // int n
    int n = (int)wPopNumber();
    
    // call SetSelection
    ((wxChoice *)wMe)->SetSelection(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStringSelection(const wxString& string)
void wxChoice_SetStringSelection()
{
    // const wxString& string
    wxString string = wPopString();
    
    // call SetStringSelection
    ((wxChoice *)wMe)->SetStringSelection(string);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxComboBox_del()
{
    delete (wxComboBox *)wMe;
}

// wxComboBox(wxWindow* parent, wxWindowID id, const wxString& value = "", const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, int n = 0, const wxString choices[] = NULL, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = "comboBox")
void wxComboBox_new()
{
    wxComboBox *returns;
    // const wxString& name = "comboBox"
    wxString name = (wArgCount > 9 ? wPopString() : "comboBox");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 8 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 7 ? (long)wPopNumber() : 0);
    // const wxString choices[] = NULL
    if (wArgCount > 5) wPopNumber();
    wxString choices[1];
    // int n = 0
    int n = (wArgCount > 5 ? (int)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& value = ""
    wxString value = (wArgCount > 2 ? wPopString() : "");
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxComboBox
    returns = new wxComboBox(parent, id, value, *pos, *size, n, choices, style, *validator, name);

    wPushNumber( wAddObject( _wxComboBox, (int)returns ) );
}

// ~wxComboBox()
void wxComboBox_dtor()
{
    
    // call ~wxComboBox
    ((wxComboBox *)wMe)->~wxComboBox();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Append(const wxString& item)
void wxComboBox_Append()
{
    // const wxString& item
    wxString item = wPopString();
    
    // call Append
    ((wxComboBox *)wMe)->Append(item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Clear()
void wxComboBox_Clear()
{
    
    // call Clear
    ((wxComboBox *)wMe)->Clear();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& value = "", const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, int n = 0, const wxString choices[] = NULL, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = "comboBox")
void wxComboBox_Create()
{
    bool returns;
    // const wxString& name = "comboBox"
    wxString name = (wArgCount > 9 ? wPopString() : "comboBox");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 8 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 7 ? (long)wPopNumber() : 0);
    // const wxString choices[] = NULL
    if (wArgCount > 5) wPopNumber();
    wxString choices[1];
    // int n = 0
    int n = (wArgCount > 5 ? (int)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& value = ""
    wxString value = (wArgCount > 2 ? wPopString() : "");
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxComboBox *)wMe)->Create(parent, id, value, *pos, *size, n, choices, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// void Copy()
void wxComboBox_Copy()
{
    
    // call Copy
    ((wxComboBox *)wMe)->Copy();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Cut()
void wxComboBox_Cut()
{
    
    // call Cut
    ((wxComboBox *)wMe)->Cut();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Delete(int n)
void wxComboBox_Delete()
{
    // int n
    int n = (int)wPopNumber();
    
    // call Delete
    ((wxComboBox *)wMe)->Delete(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int FindString(const wxString& string)
void wxComboBox_FindString()
{
    int returns;
    // const wxString& string
    wxString string = wPopString();
    
    // call FindString
    returns = ((wxComboBox *)wMe)->FindString(string);

    wPushNumber( (wNumber)returns);
}

// void* GetClientData(int n) const
void wxComboBox_GetClientData()
{
    // int n
    int n = (int)wPopNumber();
    
    // call GetClientData
    ((wxComboBox *)wMe)->GetClientData(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// long GetInsertionPoint() const
void wxComboBox_GetInsertionPoint()
{
    long returns;
    
    // call GetInsertionPoint
    returns = ((wxComboBox *)wMe)->GetInsertionPoint();

    wPushNumber( (wNumber)returns);
}

// long GetLastPosition() const
void wxComboBox_GetLastPosition()
{
    long returns;
    
    // call GetLastPosition
    returns = ((wxComboBox *)wMe)->GetLastPosition();

    wPushNumber( (wNumber)returns);
}

// int GetSelection() const
void wxComboBox_GetSelection()
{
    int returns;
    
    // call GetSelection
    returns = ((wxComboBox *)wMe)->GetSelection();

    wPushNumber( (wNumber)returns);
}

// wxString GetString(int n) const
void wxComboBox_GetString()
{
    wxString returns;
    // int n
    int n = (int)wPopNumber();
    
    // call GetString
    returns = ((wxComboBox *)wMe)->GetString(n);

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetStringSelection() const
void wxComboBox_GetStringSelection()
{
    wxString returns;
    
    // call GetStringSelection
    returns = ((wxComboBox *)wMe)->GetStringSelection();

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetValue() const
void wxComboBox_GetValue()
{
    wxString returns;
    
    // call GetValue
    returns = ((wxComboBox *)wMe)->GetValue();

    wPushString( (char *)(returns.c_str()) );
}

// void Paste()
void wxComboBox_Paste()
{
    
    // call Paste
    ((wxComboBox *)wMe)->Paste();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Replace(long from, long to, const wxString& text)
void wxComboBox_Replace()
{
    // const wxString& text
    wxString text = wPopString();
    // long to
    long to = (long)wPopNumber();
    // long from
    long from = (long)wPopNumber();
    
    // call Replace
    ((wxComboBox *)wMe)->Replace(from, to, text);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Remove(long from, long to)
void wxComboBox_Remove()
{
    // long to
    long to = (long)wPopNumber();
    // long from
    long from = (long)wPopNumber();
    
    // call Remove
    ((wxComboBox *)wMe)->Remove(from, to);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetClientData(int n, void* data)
void wxComboBox_SetClientData()
{
    // void* data
    void *data = (void *)wPopPointer( 0 );
    // int n
    int n = (int)wPopNumber();
    
    // call SetClientData
    ((wxComboBox *)wMe)->SetClientData(n, data);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetInsertionPoint(long pos)
void wxComboBox_SetInsertionPoint()
{
    // long pos
    long pos = (long)wPopNumber();
    
    // call SetInsertionPoint
    ((wxComboBox *)wMe)->SetInsertionPoint(pos);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetInsertionPointEnd()
void wxComboBox_SetInsertionPointEnd()
{
    
    // call SetInsertionPointEnd
    ((wxComboBox *)wMe)->SetInsertionPointEnd();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSelection(int n)
void wxComboBox_SetSelection()
{
    // int n
    int n = (int)wPopNumber();
    
    // call SetSelection
    ((wxComboBox *)wMe)->SetSelection(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetMark void SetSelection(long from, long to)
void wxComboBox_SetMark()
{
    // long to
    long to = (long)wPopNumber();
    // long from
    long from = (long)wPopNumber();
    
    // call SetSelection
    ((wxComboBox *)wMe)->SetSelection(from, to);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetValue(const wxString& text)
void wxComboBox_SetValue()
{
    // const wxString& text
    wxString text = wPopString();
    
    // call SetValue
    ((wxComboBox *)wMe)->SetValue(text);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxGauge_del()
{
    delete (wxGauge *)wMe;
}

// wxGauge(wxWindow* parent, wxWindowID id, int range, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxGA_HORIZONTAL, const wxValidator& validator = wxDefaultValidator, const wxString& name = "gauge")
void wxGauge_new()
{
    wxGauge *returns;
    // const wxString& name = "gauge"
    wxString name = (wArgCount > 7 ? wPopString() : "gauge");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxGA_HORIZONTAL
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxGA_HORIZONTAL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // int range
    int range = (int)wPopNumber();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxGauge
    returns = new wxGauge(parent, id, range, *pos, *size, style, *validator, name);

    wPushNumber( wAddObject( _wxGauge, (int)returns ) );
}

// ~wxGauge()
void wxGauge_dtor()
{
    
    // call ~wxGauge
    ((wxGauge *)wMe)->~wxGauge();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, int range, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxGA_HORIZONTAL, const wxValidator& validator = wxDefaultValidator, const wxString& name = "gauge")
void wxGauge_Create()
{
    bool returns;
    // const wxString& name = "gauge"
    wxString name = (wArgCount > 7 ? wPopString() : "gauge");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxGA_HORIZONTAL
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxGA_HORIZONTAL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // int range
    int range = (int)wPopNumber();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxGauge *)wMe)->Create(parent, id, range, *pos, *size, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// int GetBezelFace() const
void wxGauge_GetBezelFace()
{
    int returns;
    
    // call GetBezelFace
    returns = ((wxGauge *)wMe)->GetBezelFace();

    wPushNumber( (wNumber)returns);
}

// int GetRange() const
void wxGauge_GetRange()
{
    int returns;
    
    // call GetRange
    returns = ((wxGauge *)wMe)->GetRange();

    wPushNumber( (wNumber)returns);
}

// int GetShadowWidth() const
void wxGauge_GetShadowWidth()
{
    int returns;
    
    // call GetShadowWidth
    returns = ((wxGauge *)wMe)->GetShadowWidth();

    wPushNumber( (wNumber)returns);
}

// int GetValue() const
void wxGauge_GetValue()
{
    int returns;
    
    // call GetValue
    returns = ((wxGauge *)wMe)->GetValue();

    wPushNumber( (wNumber)returns);
}

// void SetBezelFace(int width)
void wxGauge_SetBezelFace()
{
    // int width
    int width = (int)wPopNumber();
    
    // call SetBezelFace
    ((wxGauge *)wMe)->SetBezelFace(width);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetRange(int range)
void wxGauge_SetRange()
{
    // int range
    int range = (int)wPopNumber();
    
    // call SetRange
    ((wxGauge *)wMe)->SetRange(range);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetShadowWidth(int width)
void wxGauge_SetShadowWidth()
{
    // int width
    int width = (int)wPopNumber();
    
    // call SetShadowWidth
    ((wxGauge *)wMe)->SetShadowWidth(width);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetValue(int pos)
void wxGauge_SetValue()
{
    // int pos
    int pos = (int)wPopNumber();
    
    // call SetValue
    ((wxGauge *)wMe)->SetValue(pos);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxStaticBox_del()
{
    delete (wxStaticBox *)wMe;
}

// wxStaticBox(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = "staticBox")
void wxStaticBox_new()
{
    wxStaticBox *returns;
    // const wxString& name = "staticBox"
    wxString name = (wArgCount > 6 ? wPopString() : "staticBox");
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxStaticBox
    returns = new wxStaticBox(parent, id, label, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxStaticBox, (int)returns ) );
}

// ~wxStaticBox()
void wxStaticBox_dtor()
{
    
    // call ~wxStaticBox
    ((wxStaticBox *)wMe)->~wxStaticBox();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = "staticBox")
void wxStaticBox_Create()
{
    bool returns;
    // const wxString& name = "staticBox"
    wxString name = (wArgCount > 6 ? wPopString() : "staticBox");
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxStaticBox *)wMe)->Create(parent, id, label, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}


void wxListBox_del()
{
    delete (wxListBox *)wMe;
}

// wxListBox(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, int n = 0, const wxString choices[] = NULL, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = "listBox")
void wxListBox_new()
{
    wxListBox *returns;
    // const wxString& name = "listBox"
    wxString name = (wArgCount > 8 ? wPopString() : "listBox");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 7 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 6 ? (long)wPopNumber() : 0);
    // const wxString choices[] = NULL
    if (wArgCount > 4) wPopNumber();
    wxString choices[1];
    // int n = 0
    int n = (wArgCount > 4 ? (int)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxListBox
    returns = new wxListBox(parent, id, *pos, *size, n, choices, style, *validator, name);

    wPushNumber( wAddObject( _wxListBox, (int)returns ) );
}

// ~wxListBox()
void wxListBox_dtor()
{
    
    // call ~wxListBox
    ((wxListBox *)wMe)->~wxListBox();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Append(const wxString& item)
void wxListBox_Append()
{
    // const wxString& item
    wxString item = wPopString();
    
    // call Append
    ((wxListBox *)wMe)->Append(item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Clear()
void wxListBox_Clear()
{
    
    // call Clear
    ((wxListBox *)wMe)->Clear();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, int n = 0, const wxString choices[] = NULL, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = "listBox")
void wxListBox_Create()
{
    bool returns;
    // const wxString& name = "listBox"
    wxString name = (wArgCount > 8 ? wPopString() : "listBox");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 7 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 6 ? (long)wPopNumber() : 0);
    // const wxString choices[] = NULL
    if (wArgCount > 4) wPopNumber();
    wxString choices[1];
    // int n = 0
    int n = (wArgCount > 4 ? (int)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxListBox *)wMe)->Create(parent, id, *pos, *size, n, choices, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// void Delete(int n)
void wxListBox_Delete()
{
    // int n
    int n = (int)wPopNumber();
    
    // call Delete
    ((wxListBox *)wMe)->Delete(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Deselect(int n)
void wxListBox_Deselect()
{
    // int n
    int n = (int)wPopNumber();
    
    // call Deselect
    ((wxListBox *)wMe)->Deselect(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int FindString(const wxString& string)
void wxListBox_FindString()
{
    int returns;
    // const wxString& string
    wxString string = wPopString();
    
    // call FindString
    returns = ((wxListBox *)wMe)->FindString(string);

    wPushNumber( (wNumber)returns);
}

// void* GetClientData(int n) const
void wxListBox_GetClientData()
{
    // int n
    int n = (int)wPopNumber();
    
    // call GetClientData
    ((wxListBox *)wMe)->GetClientData(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int GetSelection() const
void wxListBox_GetSelection()
{
    int returns;
    
    // call GetSelection
    returns = ((wxListBox *)wMe)->GetSelection();

    wPushNumber( (wNumber)returns);
}

// int GetSelections(wxArrayInt& selections) const
void wxListBox_GetSelections()
{
    int returns;
    // wxArrayInt& selections
    wxArrayInt *selections = (wxArrayInt *)wPopPointer( _wxArrayInt);
    
    // call GetSelections
    returns = ((wxListBox *)wMe)->GetSelections(*selections);

    wPushNumber( (wNumber)returns);
}

// wxString GetString(int n) const
void wxListBox_GetString()
{
    wxString returns;
    // int n
    int n = (int)wPopNumber();
    
    // call GetString
    returns = ((wxListBox *)wMe)->GetString(n);

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetStringSelection() const
void wxListBox_GetStringSelection()
{
    wxString returns;
    
    // call GetStringSelection
    returns = ((wxListBox *)wMe)->GetStringSelection();

    wPushString( (char *)(returns.c_str()) );
}

// bool Selected(int n) const
void wxListBox_Selected()
{
    bool returns;
    // int n
    int n = (int)wPopNumber();
    
    // call Selected
    returns = ((wxListBox *)wMe)->Selected(n);

    wPushNumber( (wNumber)returns);
}

// void SetClientData(int n, void* data)
void wxListBox_SetClientData()
{
    // void* data
    void *data = (void *)wPopPointer( 0 );
    // int n
    int n = (int)wPopNumber();
    
    // call SetClientData
    ((wxListBox *)wMe)->SetClientData(n, data);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetFirstItem(int n)
void wxListBox_SetFirstItem()
{
    // int n
    int n = (int)wPopNumber();
    
    // call SetFirstItem
    ((wxListBox *)wMe)->SetFirstItem(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSelection(int n, const bool select = TRUE)
void wxListBox_SetSelection()
{
    // const bool select = TRUE
    const bool select = (wArgCount > 1 ? (bool)wPopNumber() : TRUE);
    // int n
    int n = (int)wPopNumber();
    
    // call SetSelection
    ((wxListBox *)wMe)->SetSelection(n, select);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetString(int n, const wxString& string)
void wxListBox_SetString()
{
    // const wxString& string
    wxString string = wPopString();
    // int n
    int n = (int)wPopNumber();
    
    // call SetString
    ((wxListBox *)wMe)->SetString(n, string);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStringSelection(const wxString& string, const bool select = TRUE)
void wxListBox_SetStringSelection()
{
    // const bool select = TRUE
    const bool select = (wArgCount > 1 ? (bool)wPopNumber() : TRUE);
    // const wxString& string
    wxString string = wPopString();
    
    // call SetStringSelection
    ((wxListBox *)wMe)->SetStringSelection(string, select);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxCheckListBox_del()
{
    delete (wxCheckListBox *)wMe;
}

// wxCheckListBox(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, int n = 0, const wxString choices[] = NULL, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = "listBox")
void wxCheckListBox_new()
{
    wxCheckListBox *returns;
    // const wxString& name = "listBox"
    wxString name = (wArgCount > 8 ? wPopString() : "listBox");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 7 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 6 ? (long)wPopNumber() : 0);
    // const wxString choices[] = NULL
    if (wArgCount > 4) wPopNumber();
    wxString choices[1];
    // int n = 0
    int n = (wArgCount > 4 ? (int)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxCheckListBox
    returns = new wxCheckListBox(parent, id, *pos, *size, n, choices, style, *validator, name);

    wPushNumber( wAddObject( _wxCheckListBox, (int)returns ) );
}

// ~wxCheckListBox()
void wxCheckListBox_dtor()
{
    
    // call ~wxCheckListBox
    ((wxCheckListBox *)wMe)->~wxCheckListBox();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Check(int item, bool check = TRUE)
void wxCheckListBox_Check()
{
    // bool check = TRUE
    bool check = (wArgCount > 1 ? (bool)wPopNumber() : TRUE);
    // int item
    int item = (int)wPopNumber();
    
    // call Check
    ((wxCheckListBox *)wMe)->Check(item, check);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool IsChecked(int item) const
void wxCheckListBox_IsChecked()
{
    bool returns;
    // int item
    int item = (int)wPopNumber();
    
    // call IsChecked
    returns = ((wxCheckListBox *)wMe)->IsChecked(item);

    wPushNumber( (wNumber)returns);
}


void wxListCtrl_del()
{
    delete (wxListCtrl *)wMe;
}

// wxListCtrl(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxLC_ICON, const wxValidator& validator = wxDefaultValidator, const wxString& name = "listCtrl")
void wxListCtrl_new()
{
    wxListCtrl *returns;
    // const wxString& name = "listCtrl"
    wxString name = (wArgCount > 6 ? wPopString() : "listCtrl");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 5 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxLC_ICON
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxLC_ICON);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxListCtrl
    returns = new wxListCtrl(parent, id, *pos, *size, style, *validator, name);

    wPushNumber( wAddObject( _wxListCtrl, (int)returns ) );
}

// ~wxListCtrl()
void wxListCtrl_dtor()
{
    
    // call ~wxListCtrl
    ((wxListCtrl *)wMe)->~wxListCtrl();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Arrange(int flag = wxLIST_ALIGN_DEFAULT)
void wxListCtrl_Arrange()
{
    bool returns;
    // int flag = wxLIST_ALIGN_DEFAULT
    int flag = (wArgCount > 0 ? (int)wPopNumber() : wxLIST_ALIGN_DEFAULT);
    
    // call Arrange
    returns = ((wxListCtrl *)wMe)->Arrange(flag);

    wPushNumber( (wNumber)returns);
}

// bool Create(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxLC_ICON, const wxValidator& validator = wxDefaultValidator, const wxString& name = "listCtrl")
void wxListCtrl_Create()
{
    bool returns;
    // const wxString& name = "listCtrl"
    wxString name = (wArgCount > 6 ? wPopString() : "listCtrl");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 5 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxLC_ICON
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxLC_ICON);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxListCtrl *)wMe)->Create(parent, id, *pos, *size, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// void ClearAll()
void wxListCtrl_ClearAll()
{
    
    // call ClearAll
    ((wxListCtrl *)wMe)->ClearAll();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool DeleteItem(long item)
void wxListCtrl_DeleteItem()
{
    bool returns;
    // long item
    long item = (long)wPopNumber();
    
    // call DeleteItem
    returns = ((wxListCtrl *)wMe)->DeleteItem(item);

    wPushNumber( (wNumber)returns);
}

// bool DeleteAllItems()
void wxListCtrl_DeleteAllItems()
{
    bool returns;
    
    // call DeleteAllItems
    returns = ((wxListCtrl *)wMe)->DeleteAllItems();

    wPushNumber( (wNumber)returns);
}

// bool DeleteColumn(int col)
void wxListCtrl_DeleteColumn()
{
    bool returns;
    // int col
    int col = (int)wPopNumber();
    
    // call DeleteColumn
    returns = ((wxListCtrl *)wMe)->DeleteColumn(col);

    wPushNumber( (wNumber)returns);
}

// void EditLabel(long item)
void wxListCtrl_EditLabel()
{
    // long item
    long item = (long)wPopNumber();
    
    // call EditLabel
    ((wxListCtrl *)wMe)->EditLabel(item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool EnsureVisible(long item)
void wxListCtrl_EnsureVisible()
{
    bool returns;
    // long item
    long item = (long)wPopNumber();
    
    // call EnsureVisible
    returns = ((wxListCtrl *)wMe)->EnsureVisible(item);

    wPushNumber( (wNumber)returns);
}

// long FindItem(long start, const wxString& str, const bool partial = FALSE)
void wxListCtrl_FindItem()
{
    long returns;
    // const bool partial = FALSE
    const bool partial = (wArgCount > 2 ? (bool)wPopNumber() : FALSE);
    // const wxString& str
    wxString str = wPopString();
    // long start
    long start = (long)wPopNumber();
    
    // call FindItem
    returns = ((wxListCtrl *)wMe)->FindItem(start, str, partial);

    wPushNumber( (wNumber)returns);
}

// %rename FindItemData long FindItem(long start, long data)
void wxListCtrl_FindItemData()
{
    long returns;
    // long data
    long data = (long)wPopNumber();
    // long start
    long start = (long)wPopNumber();
    
    // call FindItem
    returns = ((wxListCtrl *)wMe)->FindItem(start, data);

    wPushNumber( (wNumber)returns);
}

// %rename FindItemAtPos long FindItem(long start, const wxPoint& pt, int direction)
void wxListCtrl_FindItemAtPos()
{
    long returns;
    // int direction
    int direction = (int)wPopNumber();
    // const wxPoint& pt
    wxPoint *pt = (wxPoint *)wPopPointer( _wxPoint);
    // long start
    long start = (long)wPopNumber();
    
    // call FindItem
    returns = ((wxListCtrl *)wMe)->FindItem(start, *pt, direction);

    wPushNumber( (wNumber)returns);
}

// bool GetColumn(int col, wxListItem& item) const
void wxListCtrl_GetColumn()
{
    bool returns;
    // wxListItem& item
    wxListItem *item = (wxListItem *)wPopPointer( _wxListItem);
    // int col
    int col = (int)wPopNumber();
    
    // call GetColumn
    returns = ((wxListCtrl *)wMe)->GetColumn(col, *item);

    wPushNumber( (wNumber)returns);
}

// int GetColumnWidth(int col) const
void wxListCtrl_GetColumnWidth()
{
    int returns;
    // int col
    int col = (int)wPopNumber();
    
    // call GetColumnWidth
    returns = ((wxListCtrl *)wMe)->GetColumnWidth(col);

    wPushNumber( (wNumber)returns);
}

// int GetCountPerPage() const
void wxListCtrl_GetCountPerPage()
{
    int returns;
    
    // call GetCountPerPage
    returns = ((wxListCtrl *)wMe)->GetCountPerPage();

    wPushNumber( (wNumber)returns);
}

// wxImageList* GetImageList(int which) const
void wxListCtrl_GetImageList()
{
    wxImageList *returns;
    // int which
    int which = (int)wPopNumber();
    
    // call GetImageList
    returns = ((wxListCtrl *)wMe)->GetImageList(which);

    wPushNumber( wAddObject( _wxImageList, (int)returns ) );
}

// bool GetItem(wxListItem& info) const
void wxListCtrl_GetItem()
{
    bool returns;
    // wxListItem& info
    wxListItem *info = (wxListItem *)wPopPointer( _wxListItem);
    
    // call GetItem
    returns = ((wxListCtrl *)wMe)->GetItem(*info);

    wPushNumber( (wNumber)returns);
}

// long GetItemData(long item) const
void wxListCtrl_GetItemData()
{
    long returns;
    // long item
    long item = (long)wPopNumber();
    
    // call GetItemData
    returns = ((wxListCtrl *)wMe)->GetItemData(item);

    wPushNumber( (wNumber)returns);
}

// bool GetItemPosition(long item, wxPoint& pos) const
void wxListCtrl_GetItemPosition()
{
    bool returns;
    // wxPoint& pos
    wxPoint *pos = (wxPoint *)wPopPointer( _wxPoint);
    // long item
    long item = (long)wPopNumber();
    
    // call GetItemPosition
    returns = ((wxListCtrl *)wMe)->GetItemPosition(item, *pos);

    wPushNumber( (wNumber)returns);
}

// bool GetItemRect(long item, wxRect& rect, int code = wxLIST_RECT_BOUNDS) const
void wxListCtrl_GetItemRect()
{
    bool returns;
    // int code = wxLIST_RECT_BOUNDS
    int code = (wArgCount > 2 ? (int)wPopNumber() : wxLIST_RECT_BOUNDS);
    // wxRect& rect
    wxRect *rect = (wxRect *)wPopPointer( _wxRect);
    // long item
    long item = (long)wPopNumber();
    
    // call GetItemRect
    returns = ((wxListCtrl *)wMe)->GetItemRect(item, *rect, code);

    wPushNumber( (wNumber)returns);
}

// int GetItemState(long item, long stateMask) const
void wxListCtrl_GetItemState()
{
    int returns;
    // long stateMask
    long stateMask = (long)wPopNumber();
    // long item
    long item = (long)wPopNumber();
    
    // call GetItemState
    returns = ((wxListCtrl *)wMe)->GetItemState(item, stateMask);

    wPushNumber( (wNumber)returns);
}

// int GetItemCount() const
void wxListCtrl_GetItemCount()
{
    int returns;
    
    // call GetItemCount
    returns = ((wxListCtrl *)wMe)->GetItemCount();

    wPushNumber( (wNumber)returns);
}

// int GetItemSpacing(bool isSmall) const
void wxListCtrl_GetItemSpacing()
{
    int returns;
    // bool isSmall
    bool isSmall = (bool)wPopNumber();
    
    // call GetItemSpacing
    returns = ((wxListCtrl *)wMe)->GetItemSpacing(isSmall);

    wPushNumber( (wNumber)returns);
}

// wxString GetItemText(long item) const
void wxListCtrl_GetItemText()
{
    wxString returns;
    // long item
    long item = (long)wPopNumber();
    
    // call GetItemText
    returns = ((wxListCtrl *)wMe)->GetItemText(item);

    wPushString( (char *)(returns.c_str()) );
}

// long GetNextItem(long item, int geometry = wxLIST_NEXT_ALL, int state = wxLIST_STATE_DONTCARE) const
void wxListCtrl_GetNextItem()
{
    long returns;
    // int state = wxLIST_STATE_DONTCARE
    int state = (wArgCount > 2 ? (int)wPopNumber() : wxLIST_STATE_DONTCARE);
    // int geometry = wxLIST_NEXT_ALL
    int geometry = (wArgCount > 1 ? (int)wPopNumber() : wxLIST_NEXT_ALL);
    // long item
    long item = (long)wPopNumber();
    
    // call GetNextItem
    returns = ((wxListCtrl *)wMe)->GetNextItem(item, geometry, state);

    wPushNumber( (wNumber)returns);
}

// int GetSelectedItemCount() const
void wxListCtrl_GetSelectedItemCount()
{
    int returns;
    
    // call GetSelectedItemCount
    returns = ((wxListCtrl *)wMe)->GetSelectedItemCount();

    wPushNumber( (wNumber)returns);
}

// %alias GetTextColor wxColour GetTextColour() const
void wxListCtrl_GetTextColour()
{
    wxColour *returns;
    
    // call GetTextColour
    returns = &((wxListCtrl *)wMe)->GetTextColour();

    wPushNumber( wAddObject( _wxColour, (int)(&returns) ) );
}

// long GetTopItem() const
void wxListCtrl_GetTopItem()
{
    long returns;
    
    // call GetTopItem
    returns = ((wxListCtrl *)wMe)->GetTopItem();

    wPushNumber( (wNumber)returns);
}

// long HitTest(const wxPoint& point, int& flags)
void wxListCtrl_HitTest()
{
    long returns;
    // int& flags
    int *flags = (int *)wPopPointer( 0 );
    // const wxPoint& point
    wxPoint *point = (wxPoint *)wPopPointer( _wxPoint);
    
    // call HitTest
    returns = ((wxListCtrl *)wMe)->HitTest(*point, *flags);

    wPushNumber( (wNumber)returns);
}

// long InsertColumn(long col, wxListItem& info)
void wxListCtrl_InsertColumn()
{
    long returns;
    // wxListItem& info
    wxListItem *info = (wxListItem *)wPopPointer( _wxListItem);
    // long col
    long col = (long)wPopNumber();
    
    // call InsertColumn
    returns = ((wxListCtrl *)wMe)->InsertColumn(col, *info);

    wPushNumber( (wNumber)returns);
}

// %rename InsertColumnInfo long InsertColumn(long col, const wxString& heading, int format = wxLIST_FORMAT_LEFT, int width = -1)
void wxListCtrl_InsertColumnInfo()
{
    long returns;
    // int width = -1
    int width = (wArgCount > 3 ? (int)wPopNumber() : -1);
    // int format = wxLIST_FORMAT_LEFT
    int format = (wArgCount > 2 ? (int)wPopNumber() : wxLIST_FORMAT_LEFT);
    // const wxString& heading
    wxString heading = wPopString();
    // long col
    long col = (long)wPopNumber();
    
    // call InsertColumn
    returns = ((wxListCtrl *)wMe)->InsertColumn(col, heading, format, width);

    wPushNumber( (wNumber)returns);
}

// long InsertItem(wxListItem& info)
void wxListCtrl_InsertItem()
{
    long returns;
    // wxListItem& info
    wxListItem *info = (wxListItem *)wPopPointer( _wxListItem);
    
    // call InsertItem
    returns = ((wxListCtrl *)wMe)->InsertItem(*info);

    wPushNumber( (wNumber)returns);
}

// %rename InsertStringItem long InsertItem(long index, const wxString& label)
void wxListCtrl_InsertStringItem()
{
    long returns;
    // const wxString& label
    wxString label = wPopString();
    // long index
    long index = (long)wPopNumber();
    
    // call InsertItem
    returns = ((wxListCtrl *)wMe)->InsertItem(index, label);

    wPushNumber( (wNumber)returns);
}

// %rename InsertImageItem long InsertItem(long index, int imageIndex)
void wxListCtrl_InsertImageItem()
{
    long returns;
    // int imageIndex
    int imageIndex = (int)wPopNumber();
    // long index
    long index = (long)wPopNumber();
    
    // call InsertItem
    returns = ((wxListCtrl *)wMe)->InsertItem(index, imageIndex);

    wPushNumber( (wNumber)returns);
}

// %rename InsertImageStringItem long InsertItem(long index, const wxString& label, int imageIndex)
void wxListCtrl_InsertImageStringItem()
{
    long returns;
    // int imageIndex
    int imageIndex = (int)wPopNumber();
    // const wxString& label
    wxString label = wPopString();
    // long index
    long index = (long)wPopNumber();
    
    // call InsertItem
    returns = ((wxListCtrl *)wMe)->InsertItem(index, label, imageIndex);

    wPushNumber( (wNumber)returns);
}

// bool ScrollList(int dx, int dy)
void wxListCtrl_ScrollList()
{
    bool returns;
    // int dy
    int dy = (int)wPopNumber();
    // int dx
    int dx = (int)wPopNumber();
    
    // call ScrollList
    returns = ((wxListCtrl *)wMe)->ScrollList(dx, dy);

    wPushNumber( (wNumber)returns);
}

// %alias SetBackgroundColor void SetBackgroundColour(const wxColour& col)
void wxListCtrl_SetBackgroundColour()
{
    // const wxColour& col
    wxColour *col = (wxColour *)wPopPointer( _wxColour);
    
    // call SetBackgroundColour
    ((wxListCtrl *)wMe)->SetBackgroundColour(*col);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool SetColumn(int col, wxListItem& item)
void wxListCtrl_SetColumn()
{
    bool returns;
    // wxListItem& item
    wxListItem *item = (wxListItem *)wPopPointer( _wxListItem);
    // int col
    int col = (int)wPopNumber();
    
    // call SetColumn
    returns = ((wxListCtrl *)wMe)->SetColumn(col, *item);

    wPushNumber( (wNumber)returns);
}

// bool SetColumnWidth(int col, int width)
void wxListCtrl_SetColumnWidth()
{
    bool returns;
    // int width
    int width = (int)wPopNumber();
    // int col
    int col = (int)wPopNumber();
    
    // call SetColumnWidth
    returns = ((wxListCtrl *)wMe)->SetColumnWidth(col, width);

    wPushNumber( (wNumber)returns);
}

// void SetImageList(wxImageList* imageList, int which)
void wxListCtrl_SetImageList()
{
    // int which
    int which = (int)wPopNumber();
    // wxImageList* imageList
    wxImageList *imageList = (wxImageList *)wPopPointer( _wxImageList);
    
    // call SetImageList
    ((wxListCtrl *)wMe)->SetImageList(imageList, which);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool SetItem(wxListItem& info)
void wxListCtrl_SetItem()
{
    bool returns;
    // wxListItem& info
    wxListItem *info = (wxListItem *)wPopPointer( _wxListItem);
    
    // call SetItem
    returns = ((wxListCtrl *)wMe)->SetItem(*info);

    wPushNumber( (wNumber)returns);
}

// %rename SetStringItem long SetItem(long index, int col, const wxString& label, int imageId = -1)
void wxListCtrl_SetStringItem()
{
    long returns;
    // int imageId = -1
    int imageId = (wArgCount > 3 ? (int)wPopNumber() : -1);
    // const wxString& label
    wxString label = wPopString();
    // int col
    int col = (int)wPopNumber();
    // long index
    long index = (long)wPopNumber();
    
    // call SetItem
    returns = ((wxListCtrl *)wMe)->SetItem(index, col, label, imageId);

    wPushNumber( (wNumber)returns);
}

// bool SetItemData(long item, long data)
void wxListCtrl_SetItemData()
{
    bool returns;
    // long data
    long data = (long)wPopNumber();
    // long item
    long item = (long)wPopNumber();
    
    // call SetItemData
    returns = ((wxListCtrl *)wMe)->SetItemData(item, data);

    wPushNumber( (wNumber)returns);
}

// bool SetItemImage(long item, int image, int selImage)
void wxListCtrl_SetItemImage()
{
    bool returns;
    // int selImage
    int selImage = (int)wPopNumber();
    // int image
    int image = (int)wPopNumber();
    // long item
    long item = (long)wPopNumber();
    
    // call SetItemImage
    returns = ((wxListCtrl *)wMe)->SetItemImage(item, image, selImage);

    wPushNumber( (wNumber)returns);
}

// bool SetItemPosition(long item, const wxPoint& pos)
void wxListCtrl_SetItemPosition()
{
    bool returns;
    // const wxPoint& pos
    wxPoint *pos = (wxPoint *)wPopPointer( _wxPoint);
    // long item
    long item = (long)wPopNumber();
    
    // call SetItemPosition
    returns = ((wxListCtrl *)wMe)->SetItemPosition(item, *pos);

    wPushNumber( (wNumber)returns);
}

// bool SetItemState(long item, long state, long stateMask)
void wxListCtrl_SetItemState()
{
    bool returns;
    // long stateMask
    long stateMask = (long)wPopNumber();
    // long state
    long state = (long)wPopNumber();
    // long item
    long item = (long)wPopNumber();
    
    // call SetItemState
    returns = ((wxListCtrl *)wMe)->SetItemState(item, state, stateMask);

    wPushNumber( (wNumber)returns);
}

// void SetItemText(long item, const wxString& text)
void wxListCtrl_SetItemText()
{
    // const wxString& text
    wxString text = wPopString();
    // long item
    long item = (long)wPopNumber();
    
    // call SetItemText
    ((wxListCtrl *)wMe)->SetItemText(item, text);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSingleStyle(long style, const bool add = TRUE)
void wxListCtrl_SetSingleStyle()
{
    // const bool add = TRUE
    const bool add = (wArgCount > 1 ? (bool)wPopNumber() : TRUE);
    // long style
    long style = (long)wPopNumber();
    
    // call SetSingleStyle
    ((wxListCtrl *)wMe)->SetSingleStyle(style, add);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias SetTextColor void SetTextColour(const wxColour& col)
void wxListCtrl_SetTextColour()
{
    // const wxColour& col
    wxColour *col = (wxColour *)wPopPointer( _wxColour);
    
    // call SetTextColour
    ((wxListCtrl *)wMe)->SetTextColour(*col);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetWindowStyleFlag(long style)
void wxListCtrl_SetWindowStyleFlag()
{
    // long style
    long style = (long)wPopNumber();
    
    // call SetWindowStyleFlag
    ((wxListCtrl *)wMe)->SetWindowStyleFlag(style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxTextCtrl_del()
{
    delete (wxTextCtrl *)wMe;
}

// wxTextCtrl(wxWindow *parent, wxWindowID id, const wxString& value = wxEmptyString, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = wxTextCtrlNameStr)
void wxTextCtrl_new()
{
    wxTextCtrl *returns;
    // const wxString& name = wxTextCtrlNameStr
    wxString name = (wArgCount > 7 ? wPopString() : wxTextCtrlNameStr);
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& value = wxEmptyString
    wxString value = (wArgCount > 2 ? wPopString() : wxEmptyString);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxTextCtrl
    returns = new wxTextCtrl(parent, id, value, *pos, *size, style, *validator, name);

    wPushNumber( wAddObject( _wxTextCtrl, (int)returns ) );
}

// ~wxTextCtrl()
void wxTextCtrl_dtor()
{
    
    // call ~wxTextCtrl
    ((wxTextCtrl *)wMe)->~wxTextCtrl();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void AppendText(const wxString& text)
void wxTextCtrl_AppendText()
{
    // const wxString& text
    wxString text = wPopString();
    
    // call AppendText
    ((wxTextCtrl *)wMe)->AppendText(text);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual bool CanCopy()
void wxTextCtrl_CanCopy()
{
    bool returns;
    
    // call CanCopy
    returns = ((wxTextCtrl *)wMe)->CanCopy();

    wPushNumber( (wNumber)returns);
}

// virtual bool CanCut()
void wxTextCtrl_CanCut()
{
    bool returns;
    
    // call CanCut
    returns = ((wxTextCtrl *)wMe)->CanCut();

    wPushNumber( (wNumber)returns);
}

// virtual bool CanPaste()
void wxTextCtrl_CanPaste()
{
    bool returns;
    
    // call CanPaste
    returns = ((wxTextCtrl *)wMe)->CanPaste();

    wPushNumber( (wNumber)returns);
}

// virtual bool CanRedo()
void wxTextCtrl_CanRedo()
{
    bool returns;
    
    // call CanRedo
    returns = ((wxTextCtrl *)wMe)->CanRedo();

    wPushNumber( (wNumber)returns);
}

// virtual bool CanUndo()
void wxTextCtrl_CanUndo()
{
    bool returns;
    
    // call CanUndo
    returns = ((wxTextCtrl *)wMe)->CanUndo();

    wPushNumber( (wNumber)returns);
}

// virtual void Clear()
void wxTextCtrl_Clear()
{
    
    // call Clear
    ((wxTextCtrl *)wMe)->Clear();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void Copy()
void wxTextCtrl_Copy()
{
    
    // call Copy
    ((wxTextCtrl *)wMe)->Copy();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& value = "", const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = "text")
void wxTextCtrl_Create()
{
    bool returns;
    // const wxString& name = "text"
    wxString name = (wArgCount > 7 ? wPopString() : "text");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& value = ""
    wxString value = (wArgCount > 2 ? wPopString() : "");
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxTextCtrl *)wMe)->Create(parent, id, value, *pos, *size, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// virtual void Cut()
void wxTextCtrl_Cut()
{
    
    // call Cut
    ((wxTextCtrl *)wMe)->Cut();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DiscardEdits()
void wxTextCtrl_DiscardEdits()
{
    
    // call DiscardEdits
    ((wxTextCtrl *)wMe)->DiscardEdits();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual long GetInsertionPoint() const
void wxTextCtrl_GetInsertionPoint()
{
    long returns;
    
    // call GetInsertionPoint
    returns = ((wxTextCtrl *)wMe)->GetInsertionPoint();

    wPushNumber( (wNumber)returns);
}

// virtual long GetLastPosition() const
void wxTextCtrl_GetLastPosition()
{
    long returns;
    
    // call GetLastPosition
    returns = ((wxTextCtrl *)wMe)->GetLastPosition();

    wPushNumber( (wNumber)returns);
}

// int GetLineLength(long lineNo) const
void wxTextCtrl_GetLineLength()
{
    int returns;
    // long lineNo
    long lineNo = (long)wPopNumber();
    
    // call GetLineLength
    returns = ((wxTextCtrl *)wMe)->GetLineLength(lineNo);

    wPushNumber( (wNumber)returns);
}

// wxString GetLineText(long lineNo) const
void wxTextCtrl_GetLineText()
{
    wxString returns;
    // long lineNo
    long lineNo = (long)wPopNumber();
    
    // call GetLineText
    returns = ((wxTextCtrl *)wMe)->GetLineText(lineNo);

    wPushString( (char *)(returns.c_str()) );
}

// int GetNumberOfLines() const
void wxTextCtrl_GetNumberOfLines()
{
    int returns;
    
    // call GetNumberOfLines
    returns = ((wxTextCtrl *)wMe)->GetNumberOfLines();

    wPushNumber( (wNumber)returns);
}

    void wxTextCtrl_GetSelectionFrom()
    {
        long from, to;
        ((wxTextCtrl *)wMe)->GetSelection(&from, &to);
        wPushNumber( (wNumber)from );
    }

    void wxTextCtrl_GetSelectionTo()
    {
        long from, to;
        ((wxTextCtrl *)wMe)->GetSelection(&from, &to);
        wPushNumber( (wNumber)to );
    }

// wxString GetValue() const
void wxTextCtrl_GetValue()
{
    wxString returns;
    
    // call GetValue
    returns = ((wxTextCtrl *)wMe)->GetValue();

    wPushString( (char *)(returns.c_str()) );
}

// bool IsModified() const
void wxTextCtrl_IsModified()
{
    bool returns;
    
    // call IsModified
    returns = ((wxTextCtrl *)wMe)->IsModified();

    wPushNumber( (wNumber)returns);
}

// bool LoadFile(const wxString& filename)
void wxTextCtrl_LoadFile()
{
    bool returns;
    // const wxString& filename
    wxString filename = wPopString();
    
    // call LoadFile
    returns = ((wxTextCtrl *)wMe)->LoadFile(filename);

    wPushNumber( (wNumber)returns);
}

// virtual void Paste()
void wxTextCtrl_Paste()
{
    
    // call Paste
    ((wxTextCtrl *)wMe)->Paste();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool PositionToXY(long pos, long *x, long *y) const
void wxTextCtrl_PositionToXY()
{
    bool returns;
    // long *y
    long *y = (long *)wPopPointer( 0 );
    // long *x
    long *x = (long *)wPopPointer( 0 );
    // long pos
    long pos = (long)wPopNumber();
    
    // call PositionToXY
    returns = ((wxTextCtrl *)wMe)->PositionToXY(pos, x, y);

    wPushNumber( (wNumber)returns);
}

// virtual void Redo()
void wxTextCtrl_Redo()
{
    
    // call Redo
    ((wxTextCtrl *)wMe)->Redo();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void Remove(long from, long to)
void wxTextCtrl_Remove()
{
    // long to
    long to = (long)wPopNumber();
    // long from
    long from = (long)wPopNumber();
    
    // call Remove
    ((wxTextCtrl *)wMe)->Remove(from, to);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void Replace(long from, long to, const wxString& value)
void wxTextCtrl_Replace()
{
    // const wxString& value
    wxString value = wPopString();
    // long to
    long to = (long)wPopNumber();
    // long from
    long from = (long)wPopNumber();
    
    // call Replace
    ((wxTextCtrl *)wMe)->Replace(from, to, value);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool SaveFile(const wxString& filename)
void wxTextCtrl_SaveFile()
{
    bool returns;
    // const wxString& filename
    wxString filename = wPopString();
    
    // call SaveFile
    returns = ((wxTextCtrl *)wMe)->SaveFile(filename);

    wPushNumber( (wNumber)returns);
}

// virtual void SetEditable(const bool editable)
void wxTextCtrl_SetEditable()
{
    // const bool editable
    bool editable = (bool)wPopNumber();
    
    // call SetEditable
    ((wxTextCtrl *)wMe)->SetEditable(editable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetInsertionPoint(long pos)
void wxTextCtrl_SetInsertionPoint()
{
    // long pos
    long pos = (long)wPopNumber();
    
    // call SetInsertionPoint
    ((wxTextCtrl *)wMe)->SetInsertionPoint(pos);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetInsertionPointEnd()
void wxTextCtrl_SetInsertionPointEnd()
{
    
    // call SetInsertionPointEnd
    ((wxTextCtrl *)wMe)->SetInsertionPointEnd();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetSelection(long from, long to)
void wxTextCtrl_SetSelection()
{
    // long to
    long to = (long)wPopNumber();
    // long from
    long from = (long)wPopNumber();
    
    // call SetSelection
    ((wxTextCtrl *)wMe)->SetSelection(from, to);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetValue(const wxString& value)
void wxTextCtrl_SetValue()
{
    // const wxString& value
    wxString value = wPopString();
    
    // call SetValue
    ((wxTextCtrl *)wMe)->SetValue(value);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void ShowPosition(long pos)
void wxTextCtrl_ShowPosition()
{
    // long pos
    long pos = (long)wPopNumber();
    
    // call ShowPosition
    ((wxTextCtrl *)wMe)->ShowPosition(pos);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void Undo()
void wxTextCtrl_Undo()
{
    
    // call Undo
    ((wxTextCtrl *)wMe)->Undo();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void WriteText(const wxString& text)
void wxTextCtrl_WriteText()
{
    // const wxString& text
    wxString text = wPopString();
    
    // call WriteText
    ((wxTextCtrl *)wMe)->WriteText(text);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// long XYToPosition(long x, long y)
void wxTextCtrl_XYToPosition()
{
    long returns;
    // long y
    long y = (long)wPopNumber();
    // long x
    long x = (long)wPopNumber();
    
    // call XYToPosition
    returns = ((wxTextCtrl *)wMe)->XYToPosition(x, y);

    wPushNumber( (wNumber)returns);
}


void wxTreeCtrl_del()
{
    delete (wxTreeCtrl *)wMe;
}

// wxTreeCtrl(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxTR_HAS_BUTTONS, const wxValidator& validator = wxDefaultValidator, const wxString& name = "listCtrl")
void wxTreeCtrl_new()
{
    wxTreeCtrl *returns;
    // const wxString& name = "listCtrl"
    wxString name = (wArgCount > 6 ? wPopString() : "listCtrl");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 5 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxTR_HAS_BUTTONS
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxTR_HAS_BUTTONS);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxTreeCtrl
    returns = new wxTreeCtrl(parent, id, *pos, *size, style, *validator, name);

    wPushNumber( wAddObject( _wxTreeCtrl, (int)returns ) );
}

// ~wxTreeCtrl()
void wxTreeCtrl_dtor()
{
    
    // call ~wxTreeCtrl
    ((wxTreeCtrl *)wMe)->~wxTreeCtrl();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxTreeItemId AddRoot(const wxString& text, int image = -1, int selImage = -1, wxTreeItemData* data = NULL)
void wxTreeCtrl_AddRoot()
{
    wxTreeItemId *returns;
    // wxTreeItemData* data = NULL
    wxTreeItemData *data = (wArgCount > 3 ? (wxTreeItemData *)wPopPointer( _wxTreeItemData) : NULL);
    // int selImage = -1
    int selImage = (wArgCount > 2 ? (int)wPopNumber() : -1);
    // int image = -1
    int image = (wArgCount > 1 ? (int)wPopNumber() : -1);
    // const wxString& text
    wxString text = wPopString();
    
    // call AddRoot
    returns = &((wxTreeCtrl *)wMe)->AddRoot(text, image, selImage, data);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId AppendItem(const wxTreeItemId& parent, const wxString& text, int image = -1, int selImage = -1, wxTreeItemData* data = NULL)
void wxTreeCtrl_AppendItem()
{
    wxTreeItemId *returns;
    // wxTreeItemData* data = NULL
    wxTreeItemData *data = (wArgCount > 4 ? (wxTreeItemData *)wPopPointer( _wxTreeItemData) : NULL);
    // int selImage = -1
    int selImage = (wArgCount > 3 ? (int)wPopNumber() : -1);
    // int image = -1
    int image = (wArgCount > 2 ? (int)wPopNumber() : -1);
    // const wxString& text
    wxString text = wPopString();
    // const wxTreeItemId& parent
    wxTreeItemId *parent = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call AppendItem
    returns = &((wxTreeCtrl *)wMe)->AppendItem(*parent, text, image, selImage, data);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// void Collapse(const wxTreeItemId& item)
void wxTreeCtrl_Collapse()
{
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call Collapse
    ((wxTreeCtrl *)wMe)->Collapse(*item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void CollapseAndReset(const wxTreeItemId& item)
void wxTreeCtrl_CollapseAndReset()
{
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call CollapseAndReset
    ((wxTreeCtrl *)wMe)->CollapseAndReset(*item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxTR_HAS_BUTTONS, const wxValidator& validator = wxDefaultValidator, const wxString& name = "listCtrl")
void wxTreeCtrl_Create()
{
    bool returns;
    // const wxString& name = "listCtrl"
    wxString name = (wArgCount > 6 ? wPopString() : "listCtrl");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 5 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxTR_HAS_BUTTONS
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxTR_HAS_BUTTONS);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxTreeCtrl *)wMe)->Create(parent, id, *pos, *size, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// void Delete(const wxTreeItemId& item)
void wxTreeCtrl_Delete()
{
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call Delete
    ((wxTreeCtrl *)wMe)->Delete(*item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void DeleteAllItems()
void wxTreeCtrl_DeleteAllItems()
{
    
    // call DeleteAllItems
    ((wxTreeCtrl *)wMe)->DeleteAllItems();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void EditLabel(const wxTreeItemId& item)
void wxTreeCtrl_EditLabel()
{
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call EditLabel
    ((wxTreeCtrl *)wMe)->EditLabel(*item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void EnsureVisible(const wxTreeItemId& item)
void wxTreeCtrl_EnsureVisible()
{
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call EnsureVisible
    ((wxTreeCtrl *)wMe)->EnsureVisible(*item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Expand(const wxTreeItemId& item)
void wxTreeCtrl_Expand()
{
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call Expand
    ((wxTreeCtrl *)wMe)->Expand(*item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// size_t GetChildrenCount(const wxTreeItemId& item, bool recursively = TRUE) const
void wxTreeCtrl_GetChildrenCount()
{
    size_t returns;
    // bool recursively = TRUE
    bool recursively = (wArgCount > 1 ? (bool)wPopNumber() : TRUE);
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetChildrenCount
    returns = ((wxTreeCtrl *)wMe)->GetChildrenCount(*item, recursively);

    wPushNumber( (wNumber)returns);
}

// int GetCount() const
void wxTreeCtrl_GetCount()
{
    int returns;
    
    // call GetCount
    returns = ((wxTreeCtrl *)wMe)->GetCount();

    wPushNumber( (wNumber)returns);
}

// wxTreeItemId GetFirstChild(const wxTreeItemId& item, long& cookie) const
void wxTreeCtrl_GetFirstChild()
{
    wxTreeItemId *returns;
    // long& cookie
    long *cookie = (long *)wPopPointer( 0 );
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetFirstChild
    returns = &((wxTreeCtrl *)wMe)->GetFirstChild(*item, *cookie);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId GetFirstVisibleItem() const
void wxTreeCtrl_GetFirstVisibleItem()
{
    wxTreeItemId *returns;
    
    // call GetFirstVisibleItem
    returns = &((wxTreeCtrl *)wMe)->GetFirstVisibleItem();

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxImageList* GetImageList() const
void wxTreeCtrl_GetImageList()
{
    wxImageList *returns;
    
    // call GetImageList
    returns = ((wxTreeCtrl *)wMe)->GetImageList();

    wPushNumber( wAddObject( _wxImageList, (int)returns ) );
}

// int GetIndent() const
void wxTreeCtrl_GetIndent()
{
    int returns;
    
    // call GetIndent
    returns = ((wxTreeCtrl *)wMe)->GetIndent();

    wPushNumber( (wNumber)returns);
}

// wxTreeItemData* GetItemData(const wxTreeItemId& item) const
void wxTreeCtrl_GetItemData()
{
    wxTreeItemData *returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetItemData
    returns = ((wxTreeCtrl *)wMe)->GetItemData(*item);

    wPushNumber( wAddObject( _wxTreeItemData, (int)returns ) );
}

// int GetItemImage(const wxTreeItemId& item, wxTreeItemIcon which = wxTreeItemIcon_Normal) const
void wxTreeCtrl_GetItemImage()
{
    int returns;
    // wxTreeItemIcon which = wxTreeItemIcon_Normal
    wxTreeItemIcon which = (wArgCount > 1 ? (wxTreeItemIcon)(int)wPopNumber() : wxTreeItemIcon_Normal);
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetItemImage
    returns = ((wxTreeCtrl *)wMe)->GetItemImage(*item, (wxTreeItemIcon)which);

    wPushNumber( (wNumber)returns);
}

// wxString GetItemText(const wxTreeItemId& item) const
void wxTreeCtrl_GetItemText()
{
    wxString returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetItemText
    returns = ((wxTreeCtrl *)wMe)->GetItemText(*item);

    wPushString( (char *)(returns.c_str()) );
}

// wxTreeItemId GetLastChild(const wxTreeItemId& item) const
void wxTreeCtrl_GetLastChild()
{
    wxTreeItemId *returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetLastChild
    returns = &((wxTreeCtrl *)wMe)->GetLastChild(*item);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId GetNextChild(const wxTreeItemId& item, long& cookie) const
void wxTreeCtrl_GetNextChild()
{
    wxTreeItemId *returns;
    // long& cookie
    long *cookie = (long *)wPopPointer( 0 );
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetNextChild
    returns = &((wxTreeCtrl *)wMe)->GetNextChild(*item, *cookie);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId GetNextSibling(const wxTreeItemId& item) const
void wxTreeCtrl_GetNextSibling()
{
    wxTreeItemId *returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetNextSibling
    returns = &((wxTreeCtrl *)wMe)->GetNextSibling(*item);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId GetNextVisible(const wxTreeItemId& item) const
void wxTreeCtrl_GetNextVisible()
{
    wxTreeItemId *returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetNextVisible
    returns = &((wxTreeCtrl *)wMe)->GetNextVisible(*item);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId GetParent(const wxTreeItemId& item) const
void wxTreeCtrl_GetParent()
{
    wxTreeItemId *returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetParent
    returns = &((wxTreeCtrl *)wMe)->GetParent(*item);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId GetPrevSibling(const wxTreeItemId& item) const
void wxTreeCtrl_GetPrevSibling()
{
    wxTreeItemId *returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetPrevSibling
    returns = &((wxTreeCtrl *)wMe)->GetPrevSibling(*item);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId GetPrevVisible(const wxTreeItemId& item) const
void wxTreeCtrl_GetPrevVisible()
{
    wxTreeItemId *returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetPrevVisible
    returns = &((wxTreeCtrl *)wMe)->GetPrevVisible(*item);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId GetRootItem() const
void wxTreeCtrl_GetRootItem()
{
    wxTreeItemId *returns;
    
    // call GetRootItem
    returns = &((wxTreeCtrl *)wMe)->GetRootItem();

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// int GetItemSelectedImage(const wxTreeItemId& item) const
void wxTreeCtrl_GetItemSelectedImage()
{
    int returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call GetItemSelectedImage
    returns = ((wxTreeCtrl *)wMe)->GetItemSelectedImage(*item);

    wPushNumber( (wNumber)returns);
}

// wxTreeItemId GetSelection() const
void wxTreeCtrl_GetSelection()
{
    wxTreeItemId *returns;
    
    // call GetSelection
    returns = &((wxTreeCtrl *)wMe)->GetSelection();

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// size_t GetSelections(wxArrayTreeItemIds& selection) const
void wxTreeCtrl_GetSelections()
{
    size_t returns;
    // wxArrayTreeItemIds& selection
    wxArrayTreeItemIds *selection = (wxArrayTreeItemIds *)wPopPointer( _wxArrayTreeItemIds);
    
    // call GetSelections
    returns = ((wxTreeCtrl *)wMe)->GetSelections(*selection);

    wPushNumber( (wNumber)returns);
}

// wxImageList* GetStateImageList() const
void wxTreeCtrl_GetStateImageList()
{
    wxImageList *returns;
    
    // call GetStateImageList
    returns = ((wxTreeCtrl *)wMe)->GetStateImageList();

    wPushNumber( wAddObject( _wxImageList, (int)returns ) );
}

// wxTreeItemId HitTest(const wxPoint& point, int& flags)
void wxTreeCtrl_HitTest()
{
    wxTreeItemId *returns;
    // int& flags
    int *flags = (int *)wPopPointer( 0 );
    // const wxPoint& point
    wxPoint *point = (wxPoint *)wPopPointer( _wxPoint);
    
    // call HitTest
    returns = &((wxTreeCtrl *)wMe)->HitTest(*point, *flags);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId InsertItem(const wxTreeItemId& parent, const wxTreeItemId& previous, const wxString& text, int image = -1, int selImage = -1, wxTreeItemData* data = NULL)
void wxTreeCtrl_InsertItem()
{
    wxTreeItemId *returns;
    // wxTreeItemData* data = NULL
    wxTreeItemData *data = (wArgCount > 5 ? (wxTreeItemData *)wPopPointer( _wxTreeItemData) : NULL);
    // int selImage = -1
    int selImage = (wArgCount > 4 ? (int)wPopNumber() : -1);
    // int image = -1
    int image = (wArgCount > 3 ? (int)wPopNumber() : -1);
    // const wxString& text
    wxString text = wPopString();
    // const wxTreeItemId& previous
    wxTreeItemId *previous = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    // const wxTreeItemId& parent
    wxTreeItemId *parent = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call InsertItem
    returns = &((wxTreeCtrl *)wMe)->InsertItem(*parent, *previous, text, image, selImage, data);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// %rename InsertItemBefore wxTreeItemId InsertItem(const wxTreeItemId& parent, size_t before, const wxString& text, int image = -1, int selImage = -1, wxTreeItemData* data = NULL)
void wxTreeCtrl_InsertItemBefore()
{
    wxTreeItemId *returns;
    // wxTreeItemData* data = NULL
    wxTreeItemData *data = (wArgCount > 5 ? (wxTreeItemData *)wPopPointer( _wxTreeItemData) : NULL);
    // int selImage = -1
    int selImage = (wArgCount > 4 ? (int)wPopNumber() : -1);
    // int image = -1
    int image = (wArgCount > 3 ? (int)wPopNumber() : -1);
    // const wxString& text
    wxString text = wPopString();
    // size_t before
    size_t before = (size_t)wPopNumber();
    // const wxTreeItemId& parent
    wxTreeItemId *parent = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call InsertItem
    returns = &((wxTreeCtrl *)wMe)->InsertItem(*parent, before, text, image, selImage, data);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// bool IsBold(const wxTreeItemId& item) const
void wxTreeCtrl_IsBold()
{
    bool returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call IsBold
    returns = ((wxTreeCtrl *)wMe)->IsBold(*item);

    wPushNumber( (wNumber)returns);
}

// bool IsExpanded(const wxTreeItemId& item) const
void wxTreeCtrl_IsExpanded()
{
    bool returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call IsExpanded
    returns = ((wxTreeCtrl *)wMe)->IsExpanded(*item);

    wPushNumber( (wNumber)returns);
}

// bool IsSelected(const wxTreeItemId& item) const
void wxTreeCtrl_IsSelected()
{
    bool returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call IsSelected
    returns = ((wxTreeCtrl *)wMe)->IsSelected(*item);

    wPushNumber( (wNumber)returns);
}

// bool IsVisible(const wxTreeItemId& item) const
void wxTreeCtrl_IsVisible()
{
    bool returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call IsVisible
    returns = ((wxTreeCtrl *)wMe)->IsVisible(*item);

    wPushNumber( (wNumber)returns);
}

// bool ItemHasChildren(const wxTreeItemId& item) const
void wxTreeCtrl_ItemHasChildren()
{
    bool returns;
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call ItemHasChildren
    returns = ((wxTreeCtrl *)wMe)->ItemHasChildren(*item);

    wPushNumber( (wNumber)returns);
}

// wxTreeItemId PrependItem(const wxTreeItemId& parent, const wxString& text, int image = -1, int selImage = -1, wxTreeItemData* data = NULL)
void wxTreeCtrl_PrependItem()
{
    wxTreeItemId *returns;
    // wxTreeItemData* data = NULL
    wxTreeItemData *data = (wArgCount > 4 ? (wxTreeItemData *)wPopPointer( _wxTreeItemData) : NULL);
    // int selImage = -1
    int selImage = (wArgCount > 3 ? (int)wPopNumber() : -1);
    // int image = -1
    int image = (wArgCount > 2 ? (int)wPopNumber() : -1);
    // const wxString& text
    wxString text = wPopString();
    // const wxTreeItemId& parent
    wxTreeItemId *parent = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call PrependItem
    returns = &((wxTreeCtrl *)wMe)->PrependItem(*parent, text, image, selImage, data);

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// void ScrollTo(const wxTreeItemId& item)
void wxTreeCtrl_ScrollTo()
{
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call ScrollTo
    ((wxTreeCtrl *)wMe)->ScrollTo(*item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetIndent(int indent)
void wxTreeCtrl_SetIndent()
{
    // int indent
    int indent = (int)wPopNumber();
    
    // call SetIndent
    ((wxTreeCtrl *)wMe)->SetIndent(indent);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetImageList(wxImageList* imageList)
void wxTreeCtrl_SetImageList()
{
    // wxImageList* imageList
    wxImageList *imageList = (wxImageList *)wPopPointer( _wxImageList);
    
    // call SetImageList
    ((wxTreeCtrl *)wMe)->SetImageList(imageList);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias SetItemBackgroundColor void SetItemBackgroundColour(const wxTreeItemId& item, const wxColour& col)
void wxTreeCtrl_SetItemBackgroundColour()
{
    // const wxColour& col
    wxColour *col = (wxColour *)wPopPointer( _wxColour);
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SetItemBackgroundColour
    ((wxTreeCtrl *)wMe)->SetItemBackgroundColour(*item, *col);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetItemBold(const wxTreeItemId& item, bool bold = TRUE)
void wxTreeCtrl_SetItemBold()
{
    // bool bold = TRUE
    bool bold = (wArgCount > 1 ? (bool)wPopNumber() : TRUE);
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SetItemBold
    ((wxTreeCtrl *)wMe)->SetItemBold(*item, bold);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetItemData(const wxTreeItemId& item, wxTreeItemData* data)
void wxTreeCtrl_SetItemData()
{
    // wxTreeItemData* data
    wxTreeItemData *data = (wxTreeItemData *)wPopPointer( _wxTreeItemData);
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SetItemData
    ((wxTreeCtrl *)wMe)->SetItemData(*item, data);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetItemFont(const wxTreeItemId& item, const wxFont& font)
void wxTreeCtrl_SetItemFont()
{
    // const wxFont& font
    wxFont *font = (wxFont *)wPopPointer( _wxFont);
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SetItemFont
    ((wxTreeCtrl *)wMe)->SetItemFont(*item, *font);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetItemHasChildren(const wxTreeItemId& item, bool hasChildren = TRUE)
void wxTreeCtrl_SetItemHasChildren()
{
    // bool hasChildren = TRUE
    bool hasChildren = (wArgCount > 1 ? (bool)wPopNumber() : TRUE);
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SetItemHasChildren
    ((wxTreeCtrl *)wMe)->SetItemHasChildren(*item, hasChildren);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetItemImage(const wxTreeItemId& item, int image, wxTreeItemIcon which = wxTreeItemIcon_Normal)
void wxTreeCtrl_SetItemImage()
{
    // wxTreeItemIcon which = wxTreeItemIcon_Normal
    wxTreeItemIcon which = (wArgCount > 2 ? (wxTreeItemIcon)(int)wPopNumber() : wxTreeItemIcon_Normal);
    // int image
    int image = (int)wPopNumber();
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SetItemImage
    ((wxTreeCtrl *)wMe)->SetItemImage(*item, image, (wxTreeItemIcon)which);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetItemSelectedImage(const wxTreeItemId& item, int selImage)
void wxTreeCtrl_SetItemSelectedImage()
{
    // int selImage
    int selImage = (int)wPopNumber();
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SetItemSelectedImage
    ((wxTreeCtrl *)wMe)->SetItemSelectedImage(*item, selImage);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetItemText(const wxTreeItemId& item, const wxString& text)
void wxTreeCtrl_SetItemText()
{
    // const wxString& text
    wxString text = wPopString();
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SetItemText
    ((wxTreeCtrl *)wMe)->SetItemText(*item, text);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %alias SetItemTextColor void SetItemTextColour(const wxTreeItemId& item, const wxColour& col)
void wxTreeCtrl_SetItemTextColour()
{
    // const wxColour& col
    wxColour *col = (wxColour *)wPopPointer( _wxColour);
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SetItemTextColour
    ((wxTreeCtrl *)wMe)->SetItemTextColour(*item, *col);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStateImageList(wxImageList* imageList)
void wxTreeCtrl_SetStateImageList()
{
    // wxImageList* imageList
    wxImageList *imageList = (wxImageList *)wPopPointer( _wxImageList);
    
    // call SetStateImageList
    ((wxTreeCtrl *)wMe)->SetStateImageList(imageList);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SortChildren(const wxTreeItemId& item)
void wxTreeCtrl_SortChildren()
{
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call SortChildren
    ((wxTreeCtrl *)wMe)->SortChildren(*item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Toggle(const wxTreeItemId& item)
void wxTreeCtrl_Toggle()
{
    // const wxTreeItemId& item
    wxTreeItemId *item = (wxTreeItemId *)wPopPointer( _wxTreeItemId);
    
    // call Toggle
    ((wxTreeCtrl *)wMe)->Toggle(*item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Unselect()
void wxTreeCtrl_Unselect()
{
    
    // call Unselect
    ((wxTreeCtrl *)wMe)->Unselect();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void UnselectAll()
void wxTreeCtrl_UnselectAll()
{
    
    // call UnselectAll
    ((wxTreeCtrl *)wMe)->UnselectAll();

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxScrollBar_del()
{
    delete (wxScrollBar *)wMe;
}

// wxScrollBar(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSB_HORIZONTAL, const wxValidator& validator = wxDefaultValidator, const wxString& name = "scrollBar")
void wxScrollBar_new()
{
    wxScrollBar *returns;
    // const wxString& name = "scrollBar"
    wxString name = (wArgCount > 6 ? wPopString() : "scrollBar");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 5 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxSB_HORIZONTAL
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxSB_HORIZONTAL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxScrollBar
    returns = new wxScrollBar(parent, id, *pos, *size, style, *validator, name);

    wPushNumber( wAddObject( _wxScrollBar, (int)returns ) );
}

// ~wxScrollBar()
void wxScrollBar_dtor()
{
    
    // call ~wxScrollBar
    ((wxScrollBar *)wMe)->~wxScrollBar();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSB_HORIZONTAL, const wxValidator& validator = wxDefaultValidator, const wxString& name = "scrollBar")
void wxScrollBar_Create()
{
    bool returns;
    // const wxString& name = "scrollBar"
    wxString name = (wArgCount > 6 ? wPopString() : "scrollBar");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 5 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxSB_HORIZONTAL
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxSB_HORIZONTAL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxScrollBar *)wMe)->Create(parent, id, *pos, *size, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// int GetRange() const
void wxScrollBar_GetRange()
{
    int returns;
    
    // call GetRange
    returns = ((wxScrollBar *)wMe)->GetRange();

    wPushNumber( (wNumber)returns);
}

// int GetPageSize() const
void wxScrollBar_GetPageSize()
{
    int returns;
    
    // call GetPageSize
    returns = ((wxScrollBar *)wMe)->GetPageSize();

    wPushNumber( (wNumber)returns);
}

// int GetThumbPosition() const
void wxScrollBar_GetThumbPosition()
{
    int returns;
    
    // call GetThumbPosition
    returns = ((wxScrollBar *)wMe)->GetThumbPosition();

    wPushNumber( (wNumber)returns);
}

// void SetThumbPosition(int viewStart)
void wxScrollBar_SetThumbPosition()
{
    // int viewStart
    int viewStart = (int)wPopNumber();
    
    // call SetThumbPosition
    ((wxScrollBar *)wMe)->SetThumbPosition(viewStart);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// virtual void SetScrollbar(int position, int thumbSize, int range, int pageSize, const bool refresh = TRUE)
void wxScrollBar_SetScrollbar()
{
    // const bool refresh = TRUE
    const bool refresh = (wArgCount > 4 ? (bool)wPopNumber() : TRUE);
    // int pageSize
    int pageSize = (int)wPopNumber();
    // int range
    int range = (int)wPopNumber();
    // int thumbSize
    int thumbSize = (int)wPopNumber();
    // int position
    int position = (int)wPopNumber();
    
    // call SetScrollbar
    ((wxScrollBar *)wMe)->SetScrollbar(position, thumbSize, range, pageSize, refresh);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxSpinButton_del()
{
    delete (wxSpinButton *)wMe;
}

// wxSpinButton(wxWindow *parent, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSP_VERTICAL | wxSP_ARROW_KEYS, const wxString& name = "wxSpinButton")
void wxSpinButton_new()
{
    wxSpinButton *returns;
    // const wxString& name = "wxSpinButton"
    wxString name = (wArgCount > 5 ? wPopString() : "wxSpinButton");
    // long style = wxSP_VERTICAL | wxSP_ARROW_KEYS
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxSP_VERTICAL | wxSP_ARROW_KEYS);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxSpinButton
    returns = new wxSpinButton(parent, id, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxSpinButton, (int)returns ) );
}

// ~wxSpinButton()
void wxSpinButton_dtor()
{
    
    // call ~wxSpinButton
    ((wxSpinButton *)wMe)->~wxSpinButton();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow *parent, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSP_VERTICAL | wxSP_ARROW_KEYS, const wxString& name = "wxSpinButton")
void wxSpinButton_Create()
{
    bool returns;
    // const wxString& name = "wxSpinButton"
    wxString name = (wArgCount > 5 ? wPopString() : "wxSpinButton");
    // long style = wxSP_VERTICAL | wxSP_ARROW_KEYS
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxSP_VERTICAL | wxSP_ARROW_KEYS);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxSpinButton *)wMe)->Create(parent, id, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// int GetMax() const
void wxSpinButton_GetMax()
{
    int returns;
    
    // call GetMax
    returns = ((wxSpinButton *)wMe)->GetMax();

    wPushNumber( (wNumber)returns);
}

// int GetMin() const
void wxSpinButton_GetMin()
{
    int returns;
    
    // call GetMin
    returns = ((wxSpinButton *)wMe)->GetMin();

    wPushNumber( (wNumber)returns);
}

// int GetValue() const
void wxSpinButton_GetValue()
{
    int returns;
    
    // call GetValue
    returns = ((wxSpinButton *)wMe)->GetValue();

    wPushNumber( (wNumber)returns);
}

// void SetRange(int min, int max)
void wxSpinButton_SetRange()
{
    // int max
    int max = (int)wPopNumber();
    // int min
    int min = (int)wPopNumber();
    
    // call SetRange
    ((wxSpinButton *)wMe)->SetRange(min, max);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetValue(int value)
void wxSpinButton_SetValue()
{
    // int value
    int value = (int)wPopNumber();
    
    // call SetValue
    ((wxSpinButton *)wMe)->SetValue(value);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxSpinCtrl_del()
{
    delete (wxSpinCtrl *)wMe;
}

// wxSpinCtrl(wxWindow* parent, wxWindowID id = -1, const wxString& value = wxEmptyString, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSP_ARROW_KEYS, int min = 0, int max = 100, int initial = 0, const wxString& name = "wxSpinCtrl")
void wxSpinCtrl_new()
{
    wxSpinCtrl *returns;
    // const wxString& name = "wxSpinCtrl"
    wxString name = (wArgCount > 9 ? wPopString() : "wxSpinCtrl");
    // int initial = 0
    int initial = (wArgCount > 8 ? (int)wPopNumber() : 0);
    // int max = 100
    int max = (wArgCount > 7 ? (int)wPopNumber() : 100);
    // int min = 0
    int min = (wArgCount > 6 ? (int)wPopNumber() : 0);
    // long style = wxSP_ARROW_KEYS
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxSP_ARROW_KEYS);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& value = wxEmptyString
    wxString value = (wArgCount > 2 ? wPopString() : wxEmptyString);
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxSpinCtrl
    returns = new wxSpinCtrl(parent, id, value, *pos, *size, style, min, max, initial, name);

    wPushNumber( wAddObject( _wxSpinCtrl, (int)returns ) );
}

// bool Create(wxWindow* parent, wxWindowID id = -1, const wxString& value = wxEmptyString, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSP_ARROW_KEYS, int min = 0, int max = 100, int initial = 0, const wxString& name = "wxSpinCtrl")
void wxSpinCtrl_Create()
{
    bool returns;
    // const wxString& name = "wxSpinCtrl"
    wxString name = (wArgCount > 9 ? wPopString() : "wxSpinCtrl");
    // int initial = 0
    int initial = (wArgCount > 8 ? (int)wPopNumber() : 0);
    // int max = 100
    int max = (wArgCount > 7 ? (int)wPopNumber() : 100);
    // int min = 0
    int min = (wArgCount > 6 ? (int)wPopNumber() : 0);
    // long style = wxSP_ARROW_KEYS
    long style = (wArgCount > 5 ? (long)wPopNumber() : wxSP_ARROW_KEYS);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& value = wxEmptyString
    wxString value = (wArgCount > 2 ? wPopString() : wxEmptyString);
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxSpinCtrl *)wMe)->Create(parent, id, value, *pos, *size, style, min, max, initial, name);

    wPushNumber( (wNumber)returns);
}

// void SetValue(const wxString& text)
void wxSpinCtrl_SetValue()
{
    // const wxString& text
    wxString text = wPopString();
    
    // call SetValue
    ((wxSpinCtrl *)wMe)->SetValue(text);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int GetValue() const
void wxSpinCtrl_GetValue()
{
    int returns;
    
    // call GetValue
    returns = ((wxSpinCtrl *)wMe)->GetValue();

    wPushNumber( (wNumber)returns);
}

// void SetRange(int minVal, int maxVal)
void wxSpinCtrl_SetRange()
{
    // int maxVal
    int maxVal = (int)wPopNumber();
    // int minVal
    int minVal = (int)wPopNumber();
    
    // call SetRange
    ((wxSpinCtrl *)wMe)->SetRange(minVal, maxVal);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int GetMin() const
void wxSpinCtrl_GetMin()
{
    int returns;
    
    // call GetMin
    returns = ((wxSpinCtrl *)wMe)->GetMin();

    wPushNumber( (wNumber)returns);
}

// int GetMax() const
void wxSpinCtrl_GetMax()
{
    int returns;
    
    // call GetMax
    returns = ((wxSpinCtrl *)wMe)->GetMax();

    wPushNumber( (wNumber)returns);
}


void wxStaticText_del()
{
    delete (wxStaticText *)wMe;
}

// wxStaticText(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& pos, const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = "staticText")
void wxStaticText_new()
{
    wxStaticText *returns;
    // const wxString& name = "staticText"
    wxString name = (wArgCount > 6 ? wPopString() : "staticText");
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos
    wxPoint *pos = (wxPoint *)wPopPointer( _wxPoint);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxStaticText
    returns = new wxStaticText(parent, id, label, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxStaticText, (int)returns ) );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& pos, const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = "staticText")
void wxStaticText_Create()
{
    bool returns;
    // const wxString& name = "staticText"
    wxString name = (wArgCount > 6 ? wPopString() : "staticText");
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos
    wxPoint *pos = (wxPoint *)wPopPointer( _wxPoint);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxStaticText *)wMe)->Create(parent, id, label, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// wxString GetLabel() const
void wxStaticText_GetLabel()
{
    wxString returns;
    
    // call GetLabel
    returns = ((wxStaticText *)wMe)->GetLabel();

    wPushString( (char *)(returns.c_str()) );
}

// virtual void SetLabel(const wxString& label)
void wxStaticText_SetLabel()
{
    // const wxString& label
    wxString label = wPopString();
    
    // call SetLabel
    ((wxStaticText *)wMe)->SetLabel(label);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxStaticBitmap_del()
{
    delete (wxStaticBitmap *)wMe;
}

// virtual void SetBitmap(const wxBitmap& label)
void wxStaticBitmap_SetBitmap()
{
    // const wxBitmap& label
    wxBitmap *label = (wxBitmap *)wPopPointer( _wxBitmap);
    
    // call SetBitmap
    ((wxStaticBitmap *)wMe)->SetBitmap(*label);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxRadioBox_del()
{
    delete (wxRadioBox *)wMe;
}

// wxRadioBox(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& point = wxDefaultPosition, const wxSize& size = wxDefaultSize, int n = 0, const wxString choices[] = NULL, int majorDimension = 0, long style = wxRA_SPECIFY_COLS, const wxValidator& validator = wxDefaultValidator, const wxString& name = "radioBox")
void wxRadioBox_new()
{
    wxRadioBox *returns;
    // const wxString& name = "radioBox"
    wxString name = (wArgCount > 10 ? wPopString() : "radioBox");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 9 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxRA_SPECIFY_COLS
    long style = (wArgCount > 8 ? (long)wPopNumber() : wxRA_SPECIFY_COLS);
    // int majorDimension = 0
    int majorDimension = (wArgCount > 7 ? (int)wPopNumber() : 0);
    // const wxString choices[] = NULL
    if (wArgCount > 5) wPopNumber();
    wxString choices[1];
    // int n = 0
    int n = (wArgCount > 5 ? (int)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& point = wxDefaultPosition
    const wxPoint *point = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxRadioBox
    returns = new wxRadioBox(parent, id, label, *point, *size, n, choices, majorDimension, style, *validator, name);

    wPushNumber( wAddObject( _wxRadioBox, (int)returns ) );
}

// ~wxRadioBox()
void wxRadioBox_dtor()
{
    
    // call ~wxRadioBox
    ((wxRadioBox *)wMe)->~wxRadioBox();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& point = wxDefaultPosition, const wxSize& size = wxDefaultSize, int n = 0, const wxString choices[] = NULL, int majorDimension = 0, long style = wxRA_SPECIFY_COLS, const wxValidator& validator = wxDefaultValidator, const wxString& name = "radioBox")
void wxRadioBox_Create()
{
    bool returns;
    // const wxString& name = "radioBox"
    wxString name = (wArgCount > 10 ? wPopString() : "radioBox");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 9 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxRA_SPECIFY_COLS
    long style = (wArgCount > 8 ? (long)wPopNumber() : wxRA_SPECIFY_COLS);
    // int majorDimension = 0
    int majorDimension = (wArgCount > 7 ? (int)wPopNumber() : 0);
    // const wxString choices[] = NULL
    if (wArgCount > 5) wPopNumber();
    wxString choices[1];
    // int n = 0
    int n = (wArgCount > 5 ? (int)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& point = wxDefaultPosition
    const wxPoint *point = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxRadioBox *)wMe)->Create(parent, id, label, *point, *size, n, choices, majorDimension, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// void Enable(const bool enable)
void wxRadioBox_Enable()
{
    // const bool enable
    bool enable = (bool)wPopNumber();
    
    // call Enable
    ((wxRadioBox *)wMe)->Enable(enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename EnableItem void Enable(int n, const bool enable)
void wxRadioBox_EnableItem()
{
    // const bool enable
    bool enable = (bool)wPopNumber();
    // int n
    int n = (int)wPopNumber();
    
    // call Enable
    ((wxRadioBox *)wMe)->Enable(n, enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int FindString(const wxString& string) const
void wxRadioBox_FindString()
{
    int returns;
    // const wxString& string
    wxString string = wPopString();
    
    // call FindString
    returns = ((wxRadioBox *)wMe)->FindString(string);

    wPushNumber( (wNumber)returns);
}

// int GetSelection() const
void wxRadioBox_GetSelection()
{
    int returns;
    
    // call GetSelection
    returns = ((wxRadioBox *)wMe)->GetSelection();

    wPushNumber( (wNumber)returns);
}

// wxString GetStringSelection() const
void wxRadioBox_GetStringSelection()
{
    wxString returns;
    
    // call GetStringSelection
    returns = ((wxRadioBox *)wMe)->GetStringSelection();

    wPushString( (char *)(returns.c_str()) );
}

// void SetSelection(int n)
void wxRadioBox_SetSelection()
{
    // int n
    int n = (int)wPopNumber();
    
    // call SetSelection
    ((wxRadioBox *)wMe)->SetSelection(n);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStringSelection(const wxString& string)
void wxRadioBox_SetStringSelection()
{
    // const wxString& string
    wxString string = wPopString();
    
    // call SetStringSelection
    ((wxRadioBox *)wMe)->SetStringSelection(string);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Show(const bool show)
void wxRadioBox_Show()
{
    // const bool show
    bool show = (bool)wPopNumber();
    
    // call Show
    ((wxRadioBox *)wMe)->Show(show);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename ShowItem void Show(int item, const bool show)
void wxRadioBox_ShowItem()
{
    // const bool show
    bool show = (bool)wPopNumber();
    // int item
    int item = (int)wPopNumber();
    
    // call Show
    ((wxRadioBox *)wMe)->Show(item, show);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxString GetString(int n) const
void wxRadioBox_GetString()
{
    wxString returns;
    // int n
    int n = (int)wPopNumber();
    
    // call GetString
    returns = ((wxRadioBox *)wMe)->GetString(n);

    wPushString( (char *)(returns.c_str()) );
}


void wxRadioButton_del()
{
    delete (wxRadioButton *)wMe;
}

// wxRadioButton(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = "radioButton")
void wxRadioButton_new()
{
    wxRadioButton *returns;
    // const wxString& name = "radioButton"
    wxString name = (wArgCount > 7 ? wPopString() : "radioButton");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxRadioButton
    returns = new wxRadioButton(parent, id, label, *pos, *size, style, *validator, name);

    wPushNumber( wAddObject( _wxRadioButton, (int)returns ) );
}

// ~wxRadioButton()
void wxRadioButton_dtor()
{
    
    // call ~wxRadioButton
    ((wxRadioButton *)wMe)->~wxRadioButton();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxString& label, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxValidator& validator = wxDefaultValidator, const wxString& name = "radioButton")
void wxRadioButton_Create()
{
    bool returns;
    // const wxString& name = "radioButton"
    wxString name = (wArgCount > 7 ? wPopString() : "radioButton");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 6 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 4 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 3 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // const wxString& label
    wxString label = wPopString();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxRadioButton *)wMe)->Create(parent, id, label, *pos, *size, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// bool GetValue() const
void wxRadioButton_GetValue()
{
    bool returns;
    
    // call GetValue
    returns = ((wxRadioButton *)wMe)->GetValue();

    wPushNumber( (wNumber)returns);
}

// void SetValue(const bool value)
void wxRadioButton_SetValue()
{
    // const bool value
    bool value = (bool)wPopNumber();
    
    // call SetValue
    ((wxRadioButton *)wMe)->SetValue(value);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxSlider_del()
{
    delete (wxSlider *)wMe;
}

// wxSlider(wxWindow* parent, wxWindowID id, int value , int minValue, int maxValue, const wxPoint& point = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSL_HORIZONTAL, const wxValidator& validator = wxDefaultValidator, const wxString& name = "slider")
void wxSlider_new()
{
    wxSlider *returns;
    // const wxString& name = "slider"
    wxString name = (wArgCount > 9 ? wPopString() : "slider");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 8 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxSL_HORIZONTAL
    long style = (wArgCount > 7 ? (long)wPopNumber() : wxSL_HORIZONTAL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 6 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& point = wxDefaultPosition
    const wxPoint *point = (wArgCount > 5 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // int maxValue
    int maxValue = (int)wPopNumber();
    // int minValue
    int minValue = (int)wPopNumber();
    // int value
    int value = (int)wPopNumber();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxSlider
    returns = new wxSlider(parent, id, value, minValue, maxValue, *point, *size, style, *validator, name);

    wPushNumber( wAddObject( _wxSlider, (int)returns ) );
}

// ~wxSlider()
void wxSlider_dtor()
{
    
    // call ~wxSlider
    ((wxSlider *)wMe)->~wxSlider();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void ClearSel()
void wxSlider_ClearSel()
{
    
    // call ClearSel
    ((wxSlider *)wMe)->ClearSel();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void ClearTicks()
void wxSlider_ClearTicks()
{
    
    // call ClearTicks
    ((wxSlider *)wMe)->ClearTicks();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, int value , int minValue, int maxValue, const wxPoint& point = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSL_HORIZONTAL, const wxValidator& validator = wxDefaultValidator, const wxString& name = "slider")
void wxSlider_Create()
{
    bool returns;
    // const wxString& name = "slider"
    wxString name = (wArgCount > 9 ? wPopString() : "slider");
    // const wxValidator& validator = wxDefaultValidator
    const wxValidator *validator = (wArgCount > 8 ? (wxValidator *)wPopPointer( _wxValidator) : &wxDefaultValidator);
    // long style = wxSL_HORIZONTAL
    long style = (wArgCount > 7 ? (long)wPopNumber() : wxSL_HORIZONTAL);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 6 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& point = wxDefaultPosition
    const wxPoint *point = (wArgCount > 5 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // int maxValue
    int maxValue = (int)wPopNumber();
    // int minValue
    int minValue = (int)wPopNumber();
    // int value
    int value = (int)wPopNumber();
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxSlider *)wMe)->Create(parent, id, value, minValue, maxValue, *point, *size, style, *validator, name);

    wPushNumber( (wNumber)returns);
}

// int GetLineSize() const
void wxSlider_GetLineSize()
{
    int returns;
    
    // call GetLineSize
    returns = ((wxSlider *)wMe)->GetLineSize();

    wPushNumber( (wNumber)returns);
}

// int GetMax() const
void wxSlider_GetMax()
{
    int returns;
    
    // call GetMax
    returns = ((wxSlider *)wMe)->GetMax();

    wPushNumber( (wNumber)returns);
}

// int GetMin() const
void wxSlider_GetMin()
{
    int returns;
    
    // call GetMin
    returns = ((wxSlider *)wMe)->GetMin();

    wPushNumber( (wNumber)returns);
}

// int GetPageSize() const
void wxSlider_GetPageSize()
{
    int returns;
    
    // call GetPageSize
    returns = ((wxSlider *)wMe)->GetPageSize();

    wPushNumber( (wNumber)returns);
}

// int GetSelEnd() const
void wxSlider_GetSelEnd()
{
    int returns;
    
    // call GetSelEnd
    returns = ((wxSlider *)wMe)->GetSelEnd();

    wPushNumber( (wNumber)returns);
}

// int GetSelStart() const
void wxSlider_GetSelStart()
{
    int returns;
    
    // call GetSelStart
    returns = ((wxSlider *)wMe)->GetSelStart();

    wPushNumber( (wNumber)returns);
}

// int GetThumbLength() const
void wxSlider_GetThumbLength()
{
    int returns;
    
    // call GetThumbLength
    returns = ((wxSlider *)wMe)->GetThumbLength();

    wPushNumber( (wNumber)returns);
}

// int GetTickFreq() const
void wxSlider_GetTickFreq()
{
    int returns;
    
    // call GetTickFreq
    returns = ((wxSlider *)wMe)->GetTickFreq();

    wPushNumber( (wNumber)returns);
}

// int GetValue() const
void wxSlider_GetValue()
{
    int returns;
    
    // call GetValue
    returns = ((wxSlider *)wMe)->GetValue();

    wPushNumber( (wNumber)returns);
}

// void SetRange(int minValue, int maxValue)
void wxSlider_SetRange()
{
    // int maxValue
    int maxValue = (int)wPopNumber();
    // int minValue
    int minValue = (int)wPopNumber();
    
    // call SetRange
    ((wxSlider *)wMe)->SetRange(minValue, maxValue);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetTickFreq(int n, int pos)
void wxSlider_SetTickFreq()
{
    // int pos
    int pos = (int)wPopNumber();
    // int n
    int n = (int)wPopNumber();
    
    // call SetTickFreq
    ((wxSlider *)wMe)->SetTickFreq(n, pos);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetLineSize(int lineSize)
void wxSlider_SetLineSize()
{
    // int lineSize
    int lineSize = (int)wPopNumber();
    
    // call SetLineSize
    ((wxSlider *)wMe)->SetLineSize(lineSize);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetPageSize(int pageSize)
void wxSlider_SetPageSize()
{
    // int pageSize
    int pageSize = (int)wPopNumber();
    
    // call SetPageSize
    ((wxSlider *)wMe)->SetPageSize(pageSize);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSelection(int startPos, int endPos)
void wxSlider_SetSelection()
{
    // int endPos
    int endPos = (int)wPopNumber();
    // int startPos
    int startPos = (int)wPopNumber();
    
    // call SetSelection
    ((wxSlider *)wMe)->SetSelection(startPos, endPos);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetThumbLength(int len)
void wxSlider_SetThumbLength()
{
    // int len
    int len = (int)wPopNumber();
    
    // call SetThumbLength
    ((wxSlider *)wMe)->SetThumbLength(len);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetTick(int tickPos)
void wxSlider_SetTick()
{
    // int tickPos
    int tickPos = (int)wPopNumber();
    
    // call SetTick
    ((wxSlider *)wMe)->SetTick(tickPos);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetValue(int value)
void wxSlider_SetValue()
{
    // int value
    int value = (int)wPopNumber();
    
    // call SetValue
    ((wxSlider *)wMe)->SetValue(value);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxToolBarBase_del()
{
    delete (wxToolBarBase *)wMe;
}


void wxToolBar_del()
{
    delete (wxToolBar *)wMe;
}

// wxToolBar(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxTB_HORIZONTAL | wxNO_BORDER, const wxString& name = wxPanelNameStr)
void wxToolBar_new()
{
    wxToolBar *returns;
    // const wxString& name = wxPanelNameStr
    wxString name = (wArgCount > 5 ? wPopString() : wxPanelNameStr);
    // long style = wxTB_HORIZONTAL | wxNO_BORDER
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxTB_HORIZONTAL | wxNO_BORDER);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxToolBar
    returns = new wxToolBar(parent, id, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxToolBar, (int)returns ) );
}

// ~wxToolBar()
void wxToolBar_dtor()
{
    
    // call ~wxToolBar
    ((wxToolBar *)wMe)->~wxToolBar();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool AddControl(wxControl* control)
void wxToolBar_AddControl()
{
    bool returns;
    // wxControl* control
    wxControl *control = (wxControl *)wPopPointer( _wxControl);
    
    // call AddControl
    returns = ((wxToolBar *)wMe)->AddControl(control);

    wPushNumber( (wNumber)returns);
}

// void AddSeparator()
void wxToolBar_AddSeparator()
{
    
    // call AddSeparator
    ((wxToolBar *)wMe)->AddSeparator();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool DeleteTool(int toolId)
void wxToolBar_DeleteTool()
{
    bool returns;
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call DeleteTool
    returns = ((wxToolBar *)wMe)->DeleteTool(toolId);

    wPushNumber( (wNumber)returns);
}

// bool DeleteToolByPos(size_t pos)
void wxToolBar_DeleteToolByPos()
{
    bool returns;
    // size_t pos
    size_t pos = (size_t)wPopNumber();
    
    // call DeleteToolByPos
    returns = ((wxToolBar *)wMe)->DeleteToolByPos(pos);

    wPushNumber( (wNumber)returns);
}

// void EnableTool(int toolId, const bool enable)
void wxToolBar_EnableTool()
{
    // const bool enable
    bool enable = (bool)wPopNumber();
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call EnableTool
    ((wxToolBar *)wMe)->EnableTool(toolId, enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxSize GetToolSize()
void wxToolBar_GetToolSize()
{
    wxSize *returns;
    
    // call GetToolSize
    returns = &((wxToolBar *)wMe)->GetToolSize();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// wxSize GetToolBitmapSize()
void wxToolBar_GetToolBitmapSize()
{
    wxSize *returns;
    
    // call GetToolBitmapSize
    returns = &((wxToolBar *)wMe)->GetToolBitmapSize();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// wxObject* GetToolClientData(int toolId) const
void wxToolBar_GetToolClientData()
{
    wxObject *returns;
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call GetToolClientData
    returns = ((wxToolBar *)wMe)->GetToolClientData(toolId);

    wPushNumber( wAddObject( _wxObject, (int)returns ) );
}

// bool GetToolEnabled(int toolId) const
void wxToolBar_GetToolEnabled()
{
    bool returns;
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call GetToolEnabled
    returns = ((wxToolBar *)wMe)->GetToolEnabled(toolId);

    wPushNumber( (wNumber)returns);
}

// wxString GetToolLongHelp(int toolId) const
void wxToolBar_GetToolLongHelp()
{
    wxString returns;
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call GetToolLongHelp
    returns = ((wxToolBar *)wMe)->GetToolLongHelp(toolId);

    wPushString( (char *)(returns.c_str()) );
}

// int GetToolPacking() const
void wxToolBar_GetToolPacking()
{
    int returns;
    
    // call GetToolPacking
    returns = ((wxToolBar *)wMe)->GetToolPacking();

    wPushNumber( (wNumber)returns);
}

// int GetToolSeparation() const
void wxToolBar_GetToolSeparation()
{
    int returns;
    
    // call GetToolSeparation
    returns = ((wxToolBar *)wMe)->GetToolSeparation();

    wPushNumber( (wNumber)returns);
}

// wxString GetToolShortHelp(int toolId) const
void wxToolBar_GetToolShortHelp()
{
    wxString returns;
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call GetToolShortHelp
    returns = ((wxToolBar *)wMe)->GetToolShortHelp(toolId);

    wPushString( (char *)(returns.c_str()) );
}

// bool GetToolState(int toolId) const
void wxToolBar_GetToolState()
{
    bool returns;
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call GetToolState
    returns = ((wxToolBar *)wMe)->GetToolState(toolId);

    wPushNumber( (wNumber)returns);
}

// bool Realize()
void wxToolBar_Realize()
{
    bool returns;
    
    // call Realize
    returns = ((wxToolBar *)wMe)->Realize();

    wPushNumber( (wNumber)returns);
}

// void SetToolBitmapSize(const wxSize& size)
void wxToolBar_SetToolBitmapSize()
{
    // const wxSize& size
    wxSize *size = (wxSize *)wPopPointer( _wxSize);
    
    // call SetToolBitmapSize
    ((wxToolBar *)wMe)->SetToolBitmapSize(*size);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetToolLongHelp(int toolId, const wxString& helpString)
void wxToolBar_SetToolLongHelp()
{
    // const wxString& helpString
    wxString helpString = wPopString();
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call SetToolLongHelp
    ((wxToolBar *)wMe)->SetToolLongHelp(toolId, helpString);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetToolPacking(int packing)
void wxToolBar_SetToolPacking()
{
    // int packing
    int packing = (int)wPopNumber();
    
    // call SetToolPacking
    ((wxToolBar *)wMe)->SetToolPacking(packing);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetToolShortHelp(int toolId, const wxString& helpString)
void wxToolBar_SetToolShortHelp()
{
    // const wxString& helpString
    wxString helpString = wPopString();
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call SetToolShortHelp
    ((wxToolBar *)wMe)->SetToolShortHelp(toolId, helpString);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetToolSeparation(int separation)
void wxToolBar_SetToolSeparation()
{
    // int separation
    int separation = (int)wPopNumber();
    
    // call SetToolSeparation
    ((wxToolBar *)wMe)->SetToolSeparation(separation);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void ToggleTool(int toolId, const bool toggle)
void wxToolBar_ToggleTool()
{
    // const bool toggle
    bool toggle = (bool)wPopNumber();
    // int toolId
    int toolId = (int)wPopNumber();
    
    // call ToggleTool
    ((wxToolBar *)wMe)->ToggleTool(toolId, toggle);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxNotebook_del()
{
    delete (wxNotebook *)wMe;
}

// wxNotebook(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = "notebook")
void wxNotebook_new()
{
    wxNotebook *returns;
    // const wxString& name = "notebook"
    wxString name = (wArgCount > 5 ? wPopString() : "notebook");
    // long style = 0
    long style = (wArgCount > 4 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxNotebook
    returns = new wxNotebook(parent, id, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxNotebook, (int)returns ) );
}

// ~wxNotebook()
void wxNotebook_dtor()
{
    
    // call ~wxNotebook
    ((wxNotebook *)wMe)->~wxNotebook();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool AddPage(wxNotebookPage* page, const wxString& text, bool select = FALSE, int imageId = -1)
void wxNotebook_AddPage()
{
    bool returns;
    // int imageId = -1
    int imageId = (wArgCount > 3 ? (int)wPopNumber() : -1);
    // bool select = FALSE
    bool select = (wArgCount > 2 ? (bool)wPopNumber() : FALSE);
    // const wxString& text
    wxString text = wPopString();
    // wxNotebookPage* page
    wxWindow *page = (wxWindow *)wPopPointer( _wxWindow);
    
    // call AddPage
    returns = ((wxNotebook *)wMe)->AddPage(page, text, select, imageId);

    wPushNumber( (wNumber)returns);
}

// void AdvanceSelection(bool forward = TRUE)
void wxNotebook_AdvanceSelection()
{
    // bool forward = TRUE
    bool forward = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call AdvanceSelection
    ((wxNotebook *)wMe)->AdvanceSelection(forward);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = "notebook")
void wxNotebook_Create()
{
    bool returns;
    // const wxString& name = "notebook"
    wxString name = (wArgCount > 5 ? wPopString() : "notebook");
    // long style = 0
    long style = (wArgCount > 4 ? (long)wPopNumber() : 0);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id
    wxWindowID id = (wxWindowID)wPopNumber();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxNotebook *)wMe)->Create(parent, id, *pos, *size, style, name);

    wPushNumber( (wNumber)returns);
}

// bool DeleteAllPages()
void wxNotebook_DeleteAllPages()
{
    bool returns;
    
    // call DeleteAllPages
    returns = ((wxNotebook *)wMe)->DeleteAllPages();

    wPushNumber( (wNumber)returns);
}

// bool DeletePage(int page)
void wxNotebook_DeletePage()
{
    bool returns;
    // int page
    int page = (int)wPopNumber();
    
    // call DeletePage
    returns = ((wxNotebook *)wMe)->DeletePage(page);

    wPushNumber( (wNumber)returns);
}

// wxImageList* GetImageList() const
void wxNotebook_GetImageList()
{
    wxImageList *returns;
    
    // call GetImageList
    returns = ((wxNotebook *)wMe)->GetImageList();

    wPushNumber( wAddObject( _wxImageList, (int)returns ) );
}

// wxNotebookPage* GetPage(int page)
void wxNotebook_GetPage()
{
    wxWindow *returns;
    // int page
    int page = (int)wPopNumber();
    
    // call GetPage
    returns = ((wxNotebook *)wMe)->GetPage(page);

    wPushNumber( wAddObject( _wxWindow, (int)returns ) );
}

// int GetPageCount() const
void wxNotebook_GetPageCount()
{
    int returns;
    
    // call GetPageCount
    returns = ((wxNotebook *)wMe)->GetPageCount();

    wPushNumber( (wNumber)returns);
}

// int GetPageImage(int nPage) const
void wxNotebook_GetPageImage()
{
    int returns;
    // int nPage
    int nPage = (int)wPopNumber();
    
    // call GetPageImage
    returns = ((wxNotebook *)wMe)->GetPageImage(nPage);

    wPushNumber( (wNumber)returns);
}

// wxString GetPageText(int nPage) const
void wxNotebook_GetPageText()
{
    wxString returns;
    // int nPage
    int nPage = (int)wPopNumber();
    
    // call GetPageText
    returns = ((wxNotebook *)wMe)->GetPageText(nPage);

    wPushString( (char *)(returns.c_str()) );
}

// int GetRowCount() const
void wxNotebook_GetRowCount()
{
    int returns;
    
    // call GetRowCount
    returns = ((wxNotebook *)wMe)->GetRowCount();

    wPushNumber( (wNumber)returns);
}

// int GetSelection() const
void wxNotebook_GetSelection()
{
    int returns;
    
    // call GetSelection
    returns = ((wxNotebook *)wMe)->GetSelection();

    wPushNumber( (wNumber)returns);
}

// bool InsertPage(int index, wxNotebookPage* page, const wxString& text, bool select = FALSE, int imageId = -1)
void wxNotebook_InsertPage()
{
    bool returns;
    // int imageId = -1
    int imageId = (wArgCount > 4 ? (int)wPopNumber() : -1);
    // bool select = FALSE
    bool select = (wArgCount > 3 ? (bool)wPopNumber() : FALSE);
    // const wxString& text
    wxString text = wPopString();
    // wxNotebookPage* page
    wxWindow *page = (wxWindow *)wPopPointer( _wxWindow);
    // int index
    int index = (int)wPopNumber();
    
    // call InsertPage
    returns = ((wxNotebook *)wMe)->InsertPage(index, page, text, select, imageId);

    wPushNumber( (wNumber)returns);
}

// bool RemovePage(int page)
void wxNotebook_RemovePage()
{
    bool returns;
    // int page
    int page = (int)wPopNumber();
    
    // call RemovePage
    returns = ((wxNotebook *)wMe)->RemovePage(page);

    wPushNumber( (wNumber)returns);
}

// void SetImageList(wxImageList* imageList)
void wxNotebook_SetImageList()
{
    // wxImageList* imageList
    wxImageList *imageList = (wxImageList *)wPopPointer( _wxImageList);
    
    // call SetImageList
    ((wxNotebook *)wMe)->SetImageList(imageList);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetPadding(const wxSize& padding)
void wxNotebook_SetPadding()
{
    // const wxSize& padding
    wxSize *padding = (wxSize *)wPopPointer( _wxSize);
    
    // call SetPadding
    ((wxNotebook *)wMe)->SetPadding(*padding);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetPageSize(const wxSize& size)
void wxNotebook_SetPageSize()
{
    // const wxSize& size
    wxSize *size = (wxSize *)wPopPointer( _wxSize);
    
    // call SetPageSize
    ((wxNotebook *)wMe)->SetPageSize(*size);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool SetPageImage(int page, int image)
void wxNotebook_SetPageImage()
{
    bool returns;
    // int image
    int image = (int)wPopNumber();
    // int page
    int page = (int)wPopNumber();
    
    // call SetPageImage
    returns = ((wxNotebook *)wMe)->SetPageImage(page, image);

    wPushNumber( (wNumber)returns);
}

// bool SetPageText(int page, const wxString& text)
void wxNotebook_SetPageText()
{
    bool returns;
    // const wxString& text
    wxString text = wPopString();
    // int page
    int page = (int)wPopNumber();
    
    // call SetPageText
    returns = ((wxNotebook *)wMe)->SetPageText(page, text);

    wPushNumber( (wNumber)returns);
}

// int SetSelection(int page)
void wxNotebook_SetSelection()
{
    int returns;
    // int page
    int page = (int)wPopNumber();
    
    // call SetSelection
    returns = ((wxNotebook *)wMe)->SetSelection(page);

    wPushNumber( (wNumber)returns);
}


void wxSashWindow_del()
{
    delete (wxSashWindow *)wMe;
}

// wxSashWindow(wxWindow *parent, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSW_3D|wxCLIP_CHILDREN, const wxString& name = "sashWindow")
void wxSashWindow_new()
{
    wxSashWindow *returns;
    // const wxString& name = "sashWindow"
    wxString name = (wArgCount > 5 ? wPopString() : "sashWindow");
    // long style = wxSW_3D|wxCLIP_CHILDREN
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxSW_3D|wxCLIP_CHILDREN);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxSashWindow
    returns = new wxSashWindow(parent, id, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxSashWindow, (int)returns ) );
}

// ~wxSashWindow()
void wxSashWindow_dtor()
{
    
    // call ~wxSashWindow
    ((wxSashWindow *)wMe)->~wxSashWindow();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool GetSashVisible(wxSashEdgePosition edge) const
void wxSashWindow_GetSashVisible()
{
    bool returns;
    // wxSashEdgePosition edge
    wxSashEdgePosition edge = (wxSashEdgePosition)(int)wPopNumber();
    
    // call GetSashVisible
    returns = ((wxSashWindow *)wMe)->GetSashVisible((wxSashEdgePosition)edge);

    wPushNumber( (wNumber)returns);
}

// int GetMaximumSizeX() const
void wxSashWindow_GetMaximumSizeX()
{
    int returns;
    
    // call GetMaximumSizeX
    returns = ((wxSashWindow *)wMe)->GetMaximumSizeX();

    wPushNumber( (wNumber)returns);
}

// int GetMaximumSizeY() const
void wxSashWindow_GetMaximumSizeY()
{
    int returns;
    
    // call GetMaximumSizeY
    returns = ((wxSashWindow *)wMe)->GetMaximumSizeY();

    wPushNumber( (wNumber)returns);
}

// int GetMinimumSizeX()
void wxSashWindow_GetMinimumSizeX()
{
    int returns;
    
    // call GetMinimumSizeX
    returns = ((wxSashWindow *)wMe)->GetMinimumSizeX();

    wPushNumber( (wNumber)returns);
}

// int GetMinimumSizeY() const
void wxSashWindow_GetMinimumSizeY()
{
    int returns;
    
    // call GetMinimumSizeY
    returns = ((wxSashWindow *)wMe)->GetMinimumSizeY();

    wPushNumber( (wNumber)returns);
}

// bool HasBorder(wxSashEdgePosition edge) const
void wxSashWindow_HasBorder()
{
    bool returns;
    // wxSashEdgePosition edge
    wxSashEdgePosition edge = (wxSashEdgePosition)(int)wPopNumber();
    
    // call HasBorder
    returns = ((wxSashWindow *)wMe)->HasBorder((wxSashEdgePosition)edge);

    wPushNumber( (wNumber)returns);
}

// void SetMaximumSizeX(int min)
void wxSashWindow_SetMaximumSizeX()
{
    // int min
    int min = (int)wPopNumber();
    
    // call SetMaximumSizeX
    ((wxSashWindow *)wMe)->SetMaximumSizeX(min);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMaximumSizeY(int min)
void wxSashWindow_SetMaximumSizeY()
{
    // int min
    int min = (int)wPopNumber();
    
    // call SetMaximumSizeY
    ((wxSashWindow *)wMe)->SetMaximumSizeY(min);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMinimumSizeX(int min)
void wxSashWindow_SetMinimumSizeX()
{
    // int min
    int min = (int)wPopNumber();
    
    // call SetMinimumSizeX
    ((wxSashWindow *)wMe)->SetMinimumSizeX(min);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMinimumSizeY(int min)
void wxSashWindow_SetMinimumSizeY()
{
    // int min
    int min = (int)wPopNumber();
    
    // call SetMinimumSizeY
    ((wxSashWindow *)wMe)->SetMinimumSizeY(min);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSashVisible(wxSashEdgePosition edge, bool visible)
void wxSashWindow_SetSashVisible()
{
    // bool visible
    bool visible = (bool)wPopNumber();
    // wxSashEdgePosition edge
    wxSashEdgePosition edge = (wxSashEdgePosition)(int)wPopNumber();
    
    // call SetSashVisible
    ((wxSashWindow *)wMe)->SetSashVisible((wxSashEdgePosition)edge, visible);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSashBorder(wxSashEdgePosition edge, bool hasBorder)
void wxSashWindow_SetSashBorder()
{
    // bool hasBorder
    bool hasBorder = (bool)wPopNumber();
    // wxSashEdgePosition edge
    wxSashEdgePosition edge = (wxSashEdgePosition)(int)wPopNumber();
    
    // call SetSashBorder
    ((wxSashWindow *)wMe)->SetSashBorder((wxSashEdgePosition)edge, hasBorder);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxSashLayoutWindow_del()
{
    delete (wxSashLayoutWindow *)wMe;
}

// wxSashLayoutWindow(wxWindow *parent, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style = wxSW_3D|wxCLIP_CHILDREN, const wxString& name = "layoutWindow")
void wxSashLayoutWindow_new()
{
    wxSashLayoutWindow *returns;
    // const wxString& name = "layoutWindow"
    wxString name = (wArgCount > 5 ? wPopString() : "layoutWindow");
    // long style = wxSW_3D|wxCLIP_CHILDREN
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxSW_3D|wxCLIP_CHILDREN);
    // const wxSize& size = wxDefaultSize
    const wxSize *size = (wArgCount > 3 ? (wxSize *)wPopPointer( _wxSize) : &wxDefaultSize);
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 2 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (wArgCount > 1 ? (wxWindowID)wPopNumber() : -1);
    // wxWindow *parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxSashLayoutWindow
    returns = new wxSashLayoutWindow(parent, id, *pos, *size, style, name);

    wPushNumber( wAddObject( _wxSashLayoutWindow, (int)returns ) );
}

// ~wxSashLayoutWindow()
void wxSashLayoutWindow_dtor()
{
    
    // call ~wxSashLayoutWindow
    ((wxSashLayoutWindow *)wMe)->~wxSashLayoutWindow();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxLayoutAlignment GetAlignment() const
void wxSashLayoutWindow_GetAlignment()
{
    wxLayoutAlignment returns;
    
    // call GetAlignment
    returns = ((wxSashLayoutWindow *)wMe)->GetAlignment();

    wPushNumber( (wNumber)returns);
}

// wxLayoutOrientation GetOrientation() const
void wxSashLayoutWindow_GetOrientation()
{
    wxLayoutOrientation returns;
    
    // call GetOrientation
    returns = ((wxSashLayoutWindow *)wMe)->GetOrientation();

    wPushNumber( (wNumber)returns);
}

// void SetAlignment(wxLayoutAlignment alignment)
void wxSashLayoutWindow_SetAlignment()
{
    // wxLayoutAlignment alignment
    wxLayoutAlignment alignment = (wxLayoutAlignment)(int)wPopNumber();
    
    // call SetAlignment
    ((wxSashLayoutWindow *)wMe)->SetAlignment((wxLayoutAlignment)alignment);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetDefaultSize(const wxSize& size)
void wxSashLayoutWindow_SetDefaultSize()
{
    // const wxSize& size
    wxSize *size = (wxSize *)wPopPointer( _wxSize);
    
    // call SetDefaultSize
    ((wxSashLayoutWindow *)wMe)->SetDefaultSize(*size);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetOrientation(wxLayoutOrientation orientation)
void wxSashLayoutWindow_SetOrientation()
{
    // wxLayoutOrientation orientation
    wxLayoutOrientation orientation = (wxLayoutOrientation)(int)wPopNumber();
    
    // call SetOrientation
    ((wxSashLayoutWindow *)wMe)->SetOrientation((wxLayoutOrientation)orientation);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxColourDialog_del()
{
    delete (wxColourDialog *)wMe;
}

// wxColourDialog(wxWindow* parent, wxColourData* data = NULL)
void wxColourDialog_new()
{
    wxColourDialog *returns;
    // wxColourData* data = NULL
    wxColourData *data = (wArgCount > 1 ? (wxColourData *)wPopPointer( _wxColourData) : NULL);
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxColourDialog
    returns = new wxColourDialog(parent, data);

    wPushNumber( wAddObject( _wxColourDialog, (int)returns ) );
}

// ~wxColourDialog()
void wxColourDialog_dtor()
{
    
    // call ~wxColourDialog
    ((wxColourDialog *)wMe)->~wxColourDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Create(wxWindow* parent, wxColourData* data = NULL)
void wxColourDialog_Create()
{
    bool returns;
    // wxColourData* data = NULL
    wxColourData *data = (wArgCount > 1 ? (wxColourData *)wPopPointer( _wxColourData) : NULL);
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Create
    returns = ((wxColourDialog *)wMe)->Create(parent, data);

    wPushNumber( (wNumber)returns);
}

// %alias GetColorData wxColourData& GetColourData()
void wxColourDialog_GetColourData()
{
    wxColourData *returns;
    
    // call GetColourData
    returns = &((wxColourDialog *)wMe)->GetColourData();

    wPushNumber( wAddObject( _wxColourData, (int)returns ) );
}

// int ShowModal()
void wxColourDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxColourDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxFileDialog_del()
{
    delete (wxFileDialog *)wMe;
}

// wxFileDialog(wxWindow* parent, const wxString& message = "Choose a file", const wxString& defaultDir = "", const wxString& defaultFile = "", const wxString& wildcard = "*.*", long style = 0, const wxPoint& pos = wxDefaultPosition)
void wxFileDialog_new()
{
    wxFileDialog *returns;
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 6 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // long style = 0
    long style = (wArgCount > 5 ? (long)wPopNumber() : 0);
    // const wxString& wildcard = "*.*"
    wxString wildcard = (wArgCount > 4 ? wPopString() : "*.*");
    // const wxString& defaultFile = ""
    wxString defaultFile = (wArgCount > 3 ? wPopString() : "");
    // const wxString& defaultDir = ""
    wxString defaultDir = (wArgCount > 2 ? wPopString() : "");
    // const wxString& message = "Choose a file"
    wxString message = (wArgCount > 1 ? wPopString() : "Choose a file");
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxFileDialog
    returns = new wxFileDialog(parent, message, defaultDir, defaultFile, wildcard, style, *pos);

    wPushNumber( wAddObject( _wxFileDialog, (int)returns ) );
}

// ~wxFileDialog()
void wxFileDialog_dtor()
{
    
    // call ~wxFileDialog
    ((wxFileDialog *)wMe)->~wxFileDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxString GetDirectory() const
void wxFileDialog_GetDirectory()
{
    wxString returns;
    
    // call GetDirectory
    returns = ((wxFileDialog *)wMe)->GetDirectory();

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetFilename() const
void wxFileDialog_GetFilename()
{
    wxString returns;
    
    // call GetFilename
    returns = ((wxFileDialog *)wMe)->GetFilename();

    wPushString( (char *)(returns.c_str()) );
}

// int GetFilterIndex() const
void wxFileDialog_GetFilterIndex()
{
    int returns;
    
    // call GetFilterIndex
    returns = ((wxFileDialog *)wMe)->GetFilterIndex();

    wPushNumber( (wNumber)returns);
}

// wxString GetMessage() const
void wxFileDialog_GetMessage()
{
    wxString returns;
    
    // call GetMessage
    returns = ((wxFileDialog *)wMe)->GetMessage();

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetPath() const
void wxFileDialog_GetPath()
{
    wxString returns;
    
    // call GetPath
    returns = ((wxFileDialog *)wMe)->GetPath();

    wPushString( (char *)(returns.c_str()) );
}

// long GetStyle() const
void wxFileDialog_GetStyle()
{
    long returns;
    
    // call GetStyle
    returns = ((wxFileDialog *)wMe)->GetStyle();

    wPushNumber( (wNumber)returns);
}

// wxString GetWildcard() const
void wxFileDialog_GetWildcard()
{
    wxString returns;
    
    // call GetWildcard
    returns = ((wxFileDialog *)wMe)->GetWildcard();

    wPushString( (char *)(returns.c_str()) );
}

// void SetDirectory(const wxString& directory)
void wxFileDialog_SetDirectory()
{
    // const wxString& directory
    wxString directory = wPopString();
    
    // call SetDirectory
    ((wxFileDialog *)wMe)->SetDirectory(directory);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetFilename(const wxString& setfilename)
void wxFileDialog_SetFilename()
{
    // const wxString& setfilename
    wxString setfilename = wPopString();
    
    // call SetFilename
    ((wxFileDialog *)wMe)->SetFilename(setfilename);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMessage(const wxString& message)
void wxFileDialog_SetMessage()
{
    // const wxString& message
    wxString message = wPopString();
    
    // call SetMessage
    ((wxFileDialog *)wMe)->SetMessage(message);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetPath(const wxString& path)
void wxFileDialog_SetPath()
{
    // const wxString& path
    wxString path = wPopString();
    
    // call SetPath
    ((wxFileDialog *)wMe)->SetPath(path);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStyle(long style)
void wxFileDialog_SetStyle()
{
    // long style
    long style = (long)wPopNumber();
    
    // call SetStyle
    ((wxFileDialog *)wMe)->SetStyle(style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetWildcard(const wxString& wildCard)
void wxFileDialog_SetWildcard()
{
    // const wxString& wildCard
    wxString wildCard = wPopString();
    
    // call SetWildcard
    ((wxFileDialog *)wMe)->SetWildcard(wildCard);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int ShowModal()
void wxFileDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxFileDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxDirDialog_del()
{
    delete (wxDirDialog *)wMe;
}

// wxDirDialog(wxWindow* parent, const wxString& message = "Choose a directory", const wxString& defaultPath = "", long style = 0, const wxPoint& pos = wxDefaultPosition)
void wxDirDialog_new()
{
    wxDirDialog *returns;
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 4 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // long style = 0
    long style = (wArgCount > 3 ? (long)wPopNumber() : 0);
    // const wxString& defaultPath = ""
    wxString defaultPath = (wArgCount > 2 ? wPopString() : "");
    // const wxString& message = "Choose a directory"
    wxString message = (wArgCount > 1 ? wPopString() : "Choose a directory");
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxDirDialog
    returns = new wxDirDialog(parent, message, defaultPath, style, *pos);

    wPushNumber( wAddObject( _wxDirDialog, (int)returns ) );
}

// ~wxDirDialog()
void wxDirDialog_dtor()
{
    
    // call ~wxDirDialog
    ((wxDirDialog *)wMe)->~wxDirDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxString GetPath() const
void wxDirDialog_GetPath()
{
    wxString returns;
    
    // call GetPath
    returns = ((wxDirDialog *)wMe)->GetPath();

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetMessage() const
void wxDirDialog_GetMessage()
{
    wxString returns;
    
    // call GetMessage
    returns = ((wxDirDialog *)wMe)->GetMessage();

    wPushString( (char *)(returns.c_str()) );
}

// long GetStyle() const
void wxDirDialog_GetStyle()
{
    long returns;
    
    // call GetStyle
    returns = ((wxDirDialog *)wMe)->GetStyle();

    wPushNumber( (wNumber)returns);
}

// void SetMessage(const wxString& message)
void wxDirDialog_SetMessage()
{
    // const wxString& message
    wxString message = wPopString();
    
    // call SetMessage
    ((wxDirDialog *)wMe)->SetMessage(message);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetPath(const wxString& path)
void wxDirDialog_SetPath()
{
    // const wxString& path
    wxString path = wPopString();
    
    // call SetPath
    ((wxDirDialog *)wMe)->SetPath(path);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStyle(long style)
void wxDirDialog_SetStyle()
{
    // long style
    long style = (long)wPopNumber();
    
    // call SetStyle
    ((wxDirDialog *)wMe)->SetStyle(style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int ShowModal()
void wxDirDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxDirDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxSingleChoiceDialog_del()
{
    delete (wxSingleChoiceDialog *)wMe;
}

// ~wxSingleChoiceDialog()
void wxSingleChoiceDialog_dtor()
{
    
    // call ~wxSingleChoiceDialog
    ((wxSingleChoiceDialog *)wMe)->~wxSingleChoiceDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int GetSelection() const
void wxSingleChoiceDialog_GetSelection()
{
    int returns;
    
    // call GetSelection
    returns = ((wxSingleChoiceDialog *)wMe)->GetSelection();

    wPushNumber( (wNumber)returns);
}

// char* GetSelectionClientData() const
void wxSingleChoiceDialog_GetSelectionClientData()
{
    char *returns;
    
    // call GetSelectionClientData
    returns = ((wxSingleChoiceDialog *)wMe)->GetSelectionClientData();

    wPushNumber( (wNumber)(int)returns);
}

// wxString GetStringSelection() const
void wxSingleChoiceDialog_GetStringSelection()
{
    wxString returns;
    
    // call GetStringSelection
    returns = ((wxSingleChoiceDialog *)wMe)->GetStringSelection();

    wPushString( (char *)(returns.c_str()) );
}

// void SetSelection(int selection) const
void wxSingleChoiceDialog_SetSelection()
{
    // int selection
    int selection = (int)wPopNumber();
    
    // call SetSelection
    ((wxSingleChoiceDialog *)wMe)->SetSelection(selection);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int ShowModal()
void wxSingleChoiceDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxSingleChoiceDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxTextEntryDialog_del()
{
    delete (wxTextEntryDialog *)wMe;
}

// wxTextEntryDialog(wxWindow* parent, const wxString& message, const wxString& caption = "Please enter text", const wxString& defaultValue = "", long style = wxOK | wxCANCEL | wxCENTRE, const wxPoint& pos = wxDefaultPosition)
void wxTextEntryDialog_new()
{
    wxTextEntryDialog *returns;
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 5 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // long style = wxOK | wxCANCEL | wxCENTRE
    long style = (wArgCount > 4 ? (long)wPopNumber() : wxOK | wxCANCEL | wxCENTRE);
    // const wxString& defaultValue = ""
    wxString defaultValue = (wArgCount > 3 ? wPopString() : "");
    // const wxString& caption = "Please enter text"
    wxString caption = (wArgCount > 2 ? wPopString() : "Please enter text");
    // const wxString& message
    wxString message = wPopString();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxTextEntryDialog
    returns = new wxTextEntryDialog(parent, message, caption, defaultValue, style, *pos);

    wPushNumber( wAddObject( _wxTextEntryDialog, (int)returns ) );
}

// ~wxTextEntryDialog()
void wxTextEntryDialog_dtor()
{
    
    // call ~wxTextEntryDialog
    ((wxTextEntryDialog *)wMe)->~wxTextEntryDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxString GetValue() const
void wxTextEntryDialog_GetValue()
{
    wxString returns;
    
    // call GetValue
    returns = ((wxTextEntryDialog *)wMe)->GetValue();

    wPushString( (char *)(returns.c_str()) );
}

// void SetValue(const wxString& value)
void wxTextEntryDialog_SetValue()
{
    // const wxString& value
    wxString value = wPopString();
    
    // call SetValue
    ((wxTextEntryDialog *)wMe)->SetValue(value);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int ShowModal()
void wxTextEntryDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxTextEntryDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxFontDialog_del()
{
    delete (wxFontDialog *)wMe;
}

// wxFontDialog(wxWindow* parent, wxFontData* data = NULL)
void wxFontDialog_new()
{
    wxFontDialog *returns;
    // wxFontData* data = NULL
    wxFontData *data = (wArgCount > 1 ? (wxFontData *)wPopPointer( _wxFontData) : NULL);
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxFontDialog
    returns = new wxFontDialog(parent, data);

    wPushNumber( wAddObject( _wxFontDialog, (int)returns ) );
}

// ~wxFontDialog()
void wxFontDialog_dtor()
{
    
    // call ~wxFontDialog
    ((wxFontDialog *)wMe)->~wxFontDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxFontData& GetFontData()
void wxFontDialog_GetFontData()
{
    wxFontData *returns;
    
    // call GetFontData
    returns = &((wxFontDialog *)wMe)->GetFontData();

    wPushNumber( wAddObject( _wxFontData, (int)returns ) );
}

// int ShowModal()
void wxFontDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxFontDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxPageSetupDialog_del()
{
    delete (wxPageSetupDialog *)wMe;
}

// wxPageSetupDialog(wxWindow* parent, wxPageSetupDialogData* data = NULL)
void wxPageSetupDialog_new()
{
    wxPageSetupDialog *returns;
    // wxPageSetupDialogData* data = NULL
    wxPageSetupDialogData *data = (wArgCount > 1 ? (wxPageSetupDialogData *)wPopPointer( _wxPageSetupDialogData) : NULL);
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxPageSetupDialog
    returns = new wxPageSetupDialog(parent, data);

    wPushNumber( wAddObject( _wxPageSetupDialog, (int)returns ) );
}

// ~wxPageSetupDialog()
void wxPageSetupDialog_dtor()
{
    
    // call ~wxPageSetupDialog
    ((wxPageSetupDialog *)wMe)->~wxPageSetupDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxPageSetupDialogData& GetPageSetupData()
void wxPageSetupDialog_GetPageSetupData()
{
    wxPageSetupDialogData *returns;
    
    // call GetPageSetupData
    returns = &((wxPageSetupDialog *)wMe)->GetPageSetupData();

    wPushNumber( wAddObject( _wxPageSetupDialogData, (int)returns ) );
}

// int ShowModal()
void wxPageSetupDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxPageSetupDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxPrintDialog_del()
{
    delete (wxPrintDialog *)wMe;
}

// wxPrintDialog(wxWindow* parent, wxPrintDialogData* data = NULL)
void wxPrintDialog_new()
{
    wxPrintDialog *returns;
    // wxPrintDialogData* data = NULL
    wxPrintDialogData *data = (wArgCount > 1 ? (wxPrintDialogData *)wPopPointer( _wxPrintDialogData) : NULL);
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxPrintDialog
    returns = new wxPrintDialog(parent, data);

    wPushNumber( wAddObject( _wxPrintDialog, (int)returns ) );
}

// ~wxPrintDialog()
void wxPrintDialog_dtor()
{
    
    // call ~wxPrintDialog
    ((wxPrintDialog *)wMe)->~wxPrintDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxPrintDialogData& GetPrintDialogData()
void wxPrintDialog_GetPrintDialogData()
{
    wxPrintDialogData *returns;
    
    // call GetPrintDialogData
    returns = &((wxPrintDialog *)wMe)->GetPrintDialogData();

    wPushNumber( wAddObject( _wxPrintDialogData, (int)returns ) );
}

// wxDC* GetPrintDC()
void wxPrintDialog_GetPrintDC()
{
    wxDC *returns;
    
    // call GetPrintDC
    returns = ((wxPrintDialog *)wMe)->GetPrintDC();

    wPushNumber( wAddObject( _wxDC, (int)returns ) );
}

// int ShowModal()
void wxPrintDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxPrintDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxMessageDialog_del()
{
    delete (wxMessageDialog *)wMe;
}

// wxMessageDialog(wxWindow* parent, const wxString& message, const wxString& caption = "Message box", long style = wxOK | wxCANCEL | wxCENTRE, const wxPoint& pos = wxDefaultPosition)
void wxMessageDialog_new()
{
    wxMessageDialog *returns;
    // const wxPoint& pos = wxDefaultPosition
    const wxPoint *pos = (wArgCount > 4 ? (wxPoint *)wPopPointer( _wxPoint) : &wxDefaultPosition);
    // long style = wxOK | wxCANCEL | wxCENTRE
    long style = (wArgCount > 3 ? (long)wPopNumber() : wxOK | wxCANCEL | wxCENTRE);
    // const wxString& caption = "Message box"
    wxString caption = (wArgCount > 2 ? wPopString() : "Message box");
    // const wxString& message
    wxString message = wPopString();
    // wxWindow* parent
    wxWindow *parent = (wxWindow *)wPopPointer( _wxWindow);
    
    // call wxMessageDialog
    returns = new wxMessageDialog(parent, message, caption, style, *pos);

    wPushNumber( wAddObject( _wxMessageDialog, (int)returns ) );
}

// ~wxMessageDialog()
void wxMessageDialog_dtor()
{
    
    // call ~wxMessageDialog
    ((wxMessageDialog *)wMe)->~wxMessageDialog();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int ShowModal()
void wxMessageDialog_ShowModal()
{
    int returns;
    
    // call ShowModal
    returns = ((wxMessageDialog *)wMe)->ShowModal();

    wPushNumber( (wNumber)returns);
}


void wxMenu_del()
{
    delete (wxMenu *)wMe;
}

// wxMenu(const wxString& title = "", long style = 0)
void wxMenu_new()
{
    wxMenu *returns;
    // long style = 0
    long style = (wArgCount > 1 ? (long)wPopNumber() : 0);
    // const wxString& title = ""
    wxString title = (wArgCount > 0 ? wPopString() : "");
    
    // call wxMenu
    returns = new wxMenu(title, style);

    wPushNumber( wAddObject( _wxMenu, (int)returns ) );
}

// ~wxMenu()
void wxMenu_dtor()
{
    
    // call ~wxMenu
    ((wxMenu *)wMe)->~wxMenu();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Append(int id, const wxString& item, const wxString& helpString = "", const bool checkable = FALSE)
void wxMenu_Append()
{
    // const bool checkable = FALSE
    const bool checkable = (wArgCount > 3 ? (bool)wPopNumber() : FALSE);
    // const wxString& helpString = ""
    wxString helpString = (wArgCount > 2 ? wPopString() : "");
    // const wxString& item
    wxString item = wPopString();
    // int id
    int id = (int)wPopNumber();
    
    // call Append
    ((wxMenu *)wMe)->Append(id, item, helpString, checkable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename AppendMenu void Append(int id, const wxString& item, wxMenu *subMenu, const wxString& helpString = "")
void wxMenu_AppendMenu()
{
    // const wxString& helpString = ""
    wxString helpString = (wArgCount > 3 ? wPopString() : "");
    // wxMenu *subMenu
    wxMenu *subMenu = (wxMenu *)wPopPointer( _wxMenu);
    // const wxString& item
    wxString item = wPopString();
    // int id
    int id = (int)wPopNumber();
    
    // call Append
    ((wxMenu *)wMe)->Append(id, item, subMenu, helpString);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename AppendItem void Append(wxMenuItem* menuItem)
void wxMenu_AppendItem()
{
    // wxMenuItem* menuItem
    wxMenuItem *menuItem = (wxMenuItem *)wPopPointer( _wxMenuItem);
    
    // call Append
    ((wxMenu *)wMe)->Append(menuItem);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void AppendSeparator()
void wxMenu_AppendSeparator()
{
    
    // call AppendSeparator
    ((wxMenu *)wMe)->AppendSeparator();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Break()
void wxMenu_Break()
{
    
    // call Break
    ((wxMenu *)wMe)->Break();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Check(int id, const bool check)
void wxMenu_Check()
{
    // const bool check
    bool check = (bool)wPopNumber();
    // int id
    int id = (int)wPopNumber();
    
    // call Check
    ((wxMenu *)wMe)->Check(id, check);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Delete(int id)
void wxMenu_Delete()
{
    // int id
    int id = (int)wPopNumber();
    
    // call Delete
    ((wxMenu *)wMe)->Delete(id);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename DeleteItem void Delete(wxMenuItem *item)
void wxMenu_DeleteItem()
{
    // wxMenuItem *item
    wxMenuItem *item = (wxMenuItem *)wPopPointer( _wxMenuItem);
    
    // call Delete
    ((wxMenu *)wMe)->Delete(item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Destroy(int id)
void wxMenu_Destroy()
{
    // int id
    int id = (int)wPopNumber();
    
    // call Destroy
    ((wxMenu *)wMe)->Destroy(id);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename DestroyMenuItem void Destroy(wxMenuItem *item)
void wxMenu_DestroyMenuItem()
{
    // wxMenuItem *item
    wxMenuItem *item = (wxMenuItem *)wPopPointer( _wxMenuItem);
    
    // call Destroy
    ((wxMenu *)wMe)->Destroy(item);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Enable(int id, const bool enable)
void wxMenu_Enable()
{
    // const bool enable
    bool enable = (bool)wPopNumber();
    // int id
    int id = (int)wPopNumber();
    
    // call Enable
    ((wxMenu *)wMe)->Enable(id, enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int FindItem(const wxString& itemString) const
void wxMenu_FindItem()
{
    int returns;
    // const wxString& itemString
    wxString itemString = wPopString();
    
    // call FindItem
    returns = ((wxMenu *)wMe)->FindItem(itemString);

    wPushNumber( (wNumber)returns);
}

// wxString GetHelpString(int id) const
void wxMenu_GetHelpString()
{
    wxString returns;
    // int id
    int id = (int)wPopNumber();
    
    // call GetHelpString
    returns = ((wxMenu *)wMe)->GetHelpString(id);

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetLabel(int id) const
void wxMenu_GetLabel()
{
    wxString returns;
    // int id
    int id = (int)wPopNumber();
    
    // call GetLabel
    returns = ((wxMenu *)wMe)->GetLabel(id);

    wPushString( (char *)(returns.c_str()) );
}

// size_t GetMenuItemCount() const
void wxMenu_GetMenuItemCount()
{
    size_t returns;
    
    // call GetMenuItemCount
    returns = ((wxMenu *)wMe)->GetMenuItemCount();

    wPushNumber( (wNumber)returns);
}

// wxMenuItemList& GetMenuItems() const
void wxMenu_GetMenuItems()
{
    wxMenuItemList *returns;
    
    // call GetMenuItems
    returns = &((wxMenu *)wMe)->GetMenuItems();

    wPushNumber( wAddObject( _wxMenuItemList, (int)returns ) );
}

// wxString GetTitle() const
void wxMenu_GetTitle()
{
    wxString returns;
    
    // call GetTitle
    returns = ((wxMenu *)wMe)->GetTitle();

    wPushString( (char *)(returns.c_str()) );
}

// bool Insert(size_t pos, wxMenuItem *item)
void wxMenu_Insert()
{
    bool returns;
    // wxMenuItem *item
    wxMenuItem *item = (wxMenuItem *)wPopPointer( _wxMenuItem);
    // size_t pos
    size_t pos = (size_t)wPopNumber();
    
    // call Insert
    returns = ((wxMenu *)wMe)->Insert(pos, item);

    wPushNumber( (wNumber)returns);
}

// bool IsChecked(int id) const
void wxMenu_IsChecked()
{
    bool returns;
    // int id
    int id = (int)wPopNumber();
    
    // call IsChecked
    returns = ((wxMenu *)wMe)->IsChecked(id);

    wPushNumber( (wNumber)returns);
}

// bool IsEnabled(int id) const
void wxMenu_IsEnabled()
{
    bool returns;
    // int id
    int id = (int)wPopNumber();
    
    // call IsEnabled
    returns = ((wxMenu *)wMe)->IsEnabled(id);

    wPushNumber( (wNumber)returns);
}

// %rename RemoveById wxMenuItem * Remove(int id)
void wxMenu_RemoveById()
{
    wxMenuItem *returns;
    // int id
    int id = (int)wPopNumber();
    
    // call Remove
    returns = ((wxMenu *)wMe)->Remove(id);

    wPushNumber( wAddObject( _wxMenuItem, (int)returns ) );
}

// wxMenuItem * Remove(wxMenuItem *item)
void wxMenu_Remove()
{
    wxMenuItem *returns;
    // wxMenuItem *item
    wxMenuItem *item = (wxMenuItem *)wPopPointer( _wxMenuItem);
    
    // call Remove
    returns = ((wxMenu *)wMe)->Remove(item);

    wPushNumber( wAddObject( _wxMenuItem, (int)returns ) );
}

// void SetHelpString(int id, const wxString& helpString)
void wxMenu_SetHelpString()
{
    // const wxString& helpString
    wxString helpString = wPopString();
    // int id
    int id = (int)wPopNumber();
    
    // call SetHelpString
    ((wxMenu *)wMe)->SetHelpString(id, helpString);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetLabel(int id, const wxString& label)
void wxMenu_SetLabel()
{
    // const wxString& label
    wxString label = wPopString();
    // int id
    int id = (int)wPopNumber();
    
    // call SetLabel
    ((wxMenu *)wMe)->SetLabel(id, label);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetTitle(const wxString& title)
void wxMenu_SetTitle()
{
    // const wxString& title
    wxString title = wPopString();
    
    // call SetTitle
    ((wxMenu *)wMe)->SetTitle(title);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void UpdateUI(wxEvtHandler* source = NULL) const
void wxMenu_UpdateUI()
{
    // wxEvtHandler* source = NULL
    wxEvtHandler *source = (wArgCount > 0 ? (wxEvtHandler *)wPopPointer( _wxEvtHandler) : NULL);
    
    // call UpdateUI
    ((wxMenu *)wMe)->UpdateUI(source);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxMenuBar_del()
{
    delete (wxMenuBar *)wMe;
}

// wxMenuBar(long style = 0)
void wxMenuBar_new()
{
    wxMenuBar *returns;
    // long style = 0
    long style = (wArgCount > 0 ? (long)wPopNumber() : 0);
    
    // call wxMenuBar
    returns = new wxMenuBar(style);

    wPushNumber( wAddObject( _wxMenuBar, (int)returns ) );
}

// ~wxMenuBar()
void wxMenuBar_dtor()
{
    
    // call ~wxMenuBar
    ((wxMenuBar *)wMe)->~wxMenuBar();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Append(wxMenu *menu, const wxString& title)
void wxMenuBar_Append()
{
    bool returns;
    // const wxString& title
    wxString title = wPopString();
    // wxMenu *menu
    wxMenu *menu = (wxMenu *)wPopPointer( _wxMenu);
    
    // call Append
    returns = ((wxMenuBar *)wMe)->Append(menu, title);

    wPushNumber( (wNumber)returns);
}

// void Check(int id, const bool check)
void wxMenuBar_Check()
{
    // const bool check
    bool check = (bool)wPopNumber();
    // int id
    int id = (int)wPopNumber();
    
    // call Check
    ((wxMenuBar *)wMe)->Check(id, check);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Enable(int id, const bool enable)
void wxMenuBar_Enable()
{
    // const bool enable
    bool enable = (bool)wPopNumber();
    // int id
    int id = (int)wPopNumber();
    
    // call Enable
    ((wxMenuBar *)wMe)->Enable(id, enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void EnableTop(int pos, const bool enable)
void wxMenuBar_EnableTop()
{
    // const bool enable
    bool enable = (bool)wPopNumber();
    // int pos
    int pos = (int)wPopNumber();
    
    // call EnableTop
    ((wxMenuBar *)wMe)->EnableTop(pos, enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// int FindMenu(const wxString& title) const
void wxMenuBar_FindMenu()
{
    int returns;
    // const wxString& title
    wxString title = wPopString();
    
    // call FindMenu
    returns = ((wxMenuBar *)wMe)->FindMenu(title);

    wPushNumber( (wNumber)returns);
}

// int FindMenuItem(const wxString& menuString, const wxString& itemString) const
void wxMenuBar_FindMenuItem()
{
    int returns;
    // const wxString& itemString
    wxString itemString = wPopString();
    // const wxString& menuString
    wxString menuString = wPopString();
    
    // call FindMenuItem
    returns = ((wxMenuBar *)wMe)->FindMenuItem(menuString, itemString);

    wPushNumber( (wNumber)returns);
}

// wxString GetHelpString(int id) const
void wxMenuBar_GetHelpString()
{
    wxString returns;
    // int id
    int id = (int)wPopNumber();
    
    // call GetHelpString
    returns = ((wxMenuBar *)wMe)->GetHelpString(id);

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetLabel(int id) const
void wxMenuBar_GetLabel()
{
    wxString returns;
    // int id
    int id = (int)wPopNumber();
    
    // call GetLabel
    returns = ((wxMenuBar *)wMe)->GetLabel(id);

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetLabelTop(int pos) const
void wxMenuBar_GetLabelTop()
{
    wxString returns;
    // int pos
    int pos = (int)wPopNumber();
    
    // call GetLabelTop
    returns = ((wxMenuBar *)wMe)->GetLabelTop(pos);

    wPushString( (char *)(returns.c_str()) );
}

// wxMenu* GetMenu(int menuIndex) const
void wxMenuBar_GetMenu()
{
    wxMenu *returns;
    // int menuIndex
    int menuIndex = (int)wPopNumber();
    
    // call GetMenu
    returns = ((wxMenuBar *)wMe)->GetMenu(menuIndex);

    wPushNumber( wAddObject( _wxMenu, (int)returns ) );
}

// int GetMenuCount() const
void wxMenuBar_GetMenuCount()
{
    int returns;
    
    // call GetMenuCount
    returns = ((wxMenuBar *)wMe)->GetMenuCount();

    wPushNumber( (wNumber)returns);
}

// bool Insert(size_t pos, wxMenu *menu, const wxString& title)
void wxMenuBar_Insert()
{
    bool returns;
    // const wxString& title
    wxString title = wPopString();
    // wxMenu *menu
    wxMenu *menu = (wxMenu *)wPopPointer( _wxMenu);
    // size_t pos
    size_t pos = (size_t)wPopNumber();
    
    // call Insert
    returns = ((wxMenuBar *)wMe)->Insert(pos, menu, title);

    wPushNumber( (wNumber)returns);
}

// bool IsChecked(int id) const
void wxMenuBar_IsChecked()
{
    bool returns;
    // int id
    int id = (int)wPopNumber();
    
    // call IsChecked
    returns = ((wxMenuBar *)wMe)->IsChecked(id);

    wPushNumber( (wNumber)returns);
}

// bool IsEnabled(int id) const
void wxMenuBar_IsEnabled()
{
    bool returns;
    // int id
    int id = (int)wPopNumber();
    
    // call IsEnabled
    returns = ((wxMenuBar *)wMe)->IsEnabled(id);

    wPushNumber( (wNumber)returns);
}

// void Refresh()
void wxMenuBar_Refresh()
{
    
    // call Refresh
    ((wxMenuBar *)wMe)->Refresh();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxMenu * Remove(size_t pos)
void wxMenuBar_Remove()
{
    wxMenu *returns;
    // size_t pos
    size_t pos = (size_t)wPopNumber();
    
    // call Remove
    returns = ((wxMenuBar *)wMe)->Remove(pos);

    wPushNumber( wAddObject( _wxMenu, (int)returns ) );
}

// wxMenu * Replace(size_t pos, wxMenu *menu, const wxString& title)
void wxMenuBar_Replace()
{
    wxMenu *returns;
    // const wxString& title
    wxString title = wPopString();
    // wxMenu *menu
    wxMenu *menu = (wxMenu *)wPopPointer( _wxMenu);
    // size_t pos
    size_t pos = (size_t)wPopNumber();
    
    // call Replace
    returns = ((wxMenuBar *)wMe)->Replace(pos, menu, title);

    wPushNumber( wAddObject( _wxMenu, (int)returns ) );
}

// void SetHelpString(int id, const wxString& helpString)
void wxMenuBar_SetHelpString()
{
    // const wxString& helpString
    wxString helpString = wPopString();
    // int id
    int id = (int)wPopNumber();
    
    // call SetHelpString
    ((wxMenuBar *)wMe)->SetHelpString(id, helpString);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetLabel(int id, const wxString& label)
void wxMenuBar_SetLabel()
{
    // const wxString& label
    wxString label = wPopString();
    // int id
    int id = (int)wPopNumber();
    
    // call SetLabel
    ((wxMenuBar *)wMe)->SetLabel(id, label);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetLabelTop(int pos, const wxString& label)
void wxMenuBar_SetLabelTop()
{
    // const wxString& label
    wxString label = wPopString();
    // int pos
    int pos = (int)wPopNumber();
    
    // call SetLabelTop
    ((wxMenuBar *)wMe)->SetLabelTop(pos, label);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxMenuItem_del()
{
    delete (wxMenuItem *)wMe;
}

// wxMenuItem(wxMenu *parentMenu = NULL, int id = wxID_SEPARATOR, const wxString& text = wxEmptyString, const wxString& help = wxEmptyString, bool isCheckable = FALSE, wxMenu *subMenu = NULL)
void wxMenuItem_new()
{
    wxMenuItem *returns;
    // wxMenu *subMenu = NULL
    wxMenu *subMenu = (wArgCount > 5 ? (wxMenu *)wPopPointer( _wxMenu) : NULL);
    // bool isCheckable = FALSE
    bool isCheckable = (wArgCount > 4 ? (bool)wPopNumber() : FALSE);
    // const wxString& help = wxEmptyString
    wxString help = (wArgCount > 3 ? wPopString() : wxEmptyString);
    // const wxString& text = wxEmptyString
    wxString text = (wArgCount > 2 ? wPopString() : wxEmptyString);
    // int id = wxID_SEPARATOR
    int id = (wArgCount > 1 ? (int)wPopNumber() : wxID_SEPARATOR);
    // wxMenu *parentMenu = NULL
    wxMenu *parentMenu = (wArgCount > 0 ? (wxMenu *)wPopPointer( _wxMenu) : NULL);
    
    // call wxMenuItem
    returns = new wxMenuItem(parentMenu, id, text, help, isCheckable, subMenu);

    wPushNumber( wAddObject( _wxMenuItem, (int)returns ) );
}

// ~wxMenuItem()
void wxMenuItem_dtor()
{
    
    // call ~wxMenuItem
    ((wxMenuItem *)wMe)->~wxMenuItem();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Check(bool check)
void wxMenuItem_Check()
{
    // bool check
    bool check = (bool)wPopNumber();
    
    // call Check
    ((wxMenuItem *)wMe)->Check(check);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Enable(bool enable)
void wxMenuItem_Enable()
{
    // bool enable
    bool enable = (bool)wPopNumber();
    
    // call Enable
    ((wxMenuItem *)wMe)->Enable(enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxString GetHelp() const
void wxMenuItem_GetHelp()
{
    wxString returns;
    
    // call GetHelp
    returns = ((wxMenuItem *)wMe)->GetHelp();

    wPushString( (char *)(returns.c_str()) );
}

// int GetId() const
void wxMenuItem_GetId()
{
    int returns;
    
    // call GetId
    returns = ((wxMenuItem *)wMe)->GetId();

    wPushNumber( (wNumber)returns);
}

// wxString GetLabel() const
void wxMenuItem_GetLabel()
{
    wxString returns;
    
    // call GetLabel
    returns = ((wxMenuItem *)wMe)->GetLabel();

    wPushString( (char *)(returns.c_str()) );
}

// static wxString GetLabelFromText(const wxString& text)
void wxMenuItem_GetLabelFromText()
{
    wxString returns;
    // const wxString& text
    wxString text = wPopString();
    
    // call GetLabelFromText
    returns = ((wxMenuItem *)wMe)->GetLabelFromText(text);

    wPushString( (char *)(returns.c_str()) );
}

// wxString GetText() const
void wxMenuItem_GetText()
{
    wxString returns;
    
    // call GetText
    returns = ((wxMenuItem *)wMe)->GetText();

    wPushString( (char *)(returns.c_str()) );
}

// wxMenu* GetSubMenu() const
void wxMenuItem_GetSubMenu()
{
    wxMenu *returns;
    
    // call GetSubMenu
    returns = ((wxMenuItem *)wMe)->GetSubMenu();

    wPushNumber( wAddObject( _wxMenu, (int)returns ) );
}

// bool IsCheckable() const
void wxMenuItem_IsCheckable()
{
    bool returns;
    
    // call IsCheckable
    returns = ((wxMenuItem *)wMe)->IsCheckable();

    wPushNumber( (wNumber)returns);
}

// bool IsChecked() const
void wxMenuItem_IsChecked()
{
    bool returns;
    
    // call IsChecked
    returns = ((wxMenuItem *)wMe)->IsChecked();

    wPushNumber( (wNumber)returns);
}

// bool IsEnabled() const
void wxMenuItem_IsEnabled()
{
    bool returns;
    
    // call IsEnabled
    returns = ((wxMenuItem *)wMe)->IsEnabled();

    wPushNumber( (wNumber)returns);
}

// bool IsSeparator() const
void wxMenuItem_IsSeparator()
{
    bool returns;
    
    // call IsSeparator
    returns = ((wxMenuItem *)wMe)->IsSeparator();

    wPushNumber( (wNumber)returns);
}

// void SetHelp(const wxString& helpString) const
void wxMenuItem_SetHelp()
{
    // const wxString& helpString
    wxString helpString = wPopString();
    
    // call SetHelp
    ((wxMenuItem *)wMe)->SetHelp(helpString);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxEvent_del()
{
    delete (wxEvent *)wMe;
}

// wxObject* GetEventObject()
void wxEvent_GetEventObject()
{
    wxObject *returns;
    
    // call GetEventObject
    returns = ((wxEvent *)wMe)->GetEventObject();

    wPushNumber( wAddObject( _wxObject, (int)returns ) );
}

// WXTYPE GetEventType()
void wxEvent_GetEventType()
{
    WXTYPE returns;
    
    // call GetEventType
    returns = ((wxEvent *)wMe)->GetEventType();

    wPushNumber( (wNumber)returns);
}

// int GetId()
void wxEvent_GetId()
{
    int returns;
    
    // call GetId
    returns = ((wxEvent *)wMe)->GetId();

    wPushNumber( (wNumber)returns);
}

// bool GetSkipped()
void wxEvent_GetSkipped()
{
    bool returns;
    
    // call GetSkipped
    returns = ((wxEvent *)wMe)->GetSkipped();

    wPushNumber( (wNumber)returns);
}

// long GetTimestamp()
void wxEvent_GetTimestamp()
{
    long returns;
    
    // call GetTimestamp
    returns = ((wxEvent *)wMe)->GetTimestamp();

    wPushNumber( (wNumber)returns);
}

// void SetEventObject(wxObject* object)
void wxEvent_SetEventObject()
{
    // wxObject* object
    wxObject *object = (wxObject *)wPopPointer( _wxObject);
    
    // call SetEventObject
    ((wxEvent *)wMe)->SetEventObject(object);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetEventType(WXTYPE typ)
void wxEvent_SetEventType()
{
    // WXTYPE typ
    WXTYPE typ = (WXTYPE)wPopNumber();
    
    // call SetEventType
    ((wxEvent *)wMe)->SetEventType(typ);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetId(int id)
void wxEvent_SetId()
{
    // int id
    int id = (int)wPopNumber();
    
    // call SetId
    ((wxEvent *)wMe)->SetId(id);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetTimestamp(long timeStamp)
void wxEvent_SetTimestamp()
{
    // long timeStamp
    long timeStamp = (long)wPopNumber();
    
    // call SetTimestamp
    ((wxEvent *)wMe)->SetTimestamp(timeStamp);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Skip(bool skip = TRUE)
void wxEvent_Skip()
{
    // bool skip = TRUE
    bool skip = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call Skip
    ((wxEvent *)wMe)->Skip(skip);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxTimerEvent_del()
{
    delete (wxTimerEvent *)wMe;
}

// int GetInterval() const
void wxTimerEvent_GetInterval()
{
    int returns;
    
    // call GetInterval
    returns = ((wxTimerEvent *)wMe)->GetInterval();

    wPushNumber( (wNumber)returns);
}


void wxCommandEvent_del()
{
    delete (wxCommandEvent *)wMe;
}

// wxCommandEvent(WXTYPE commandEventType = 0, int id = 0)
void wxCommandEvent_new()
{
    wxCommandEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // WXTYPE commandEventType = 0
    WXTYPE commandEventType = (wArgCount > 0 ? (WXTYPE)wPopNumber() : 0);
    
    // call wxCommandEvent
    returns = new wxCommandEvent(commandEventType, id);

    wPushNumber( wAddObject( _wxCommandEvent, (int)returns ) );
}

// void* GetClientData()
void wxCommandEvent_GetClientData()
{
    
    // call GetClientData
    ((wxCommandEvent *)wMe)->GetClientData();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// long GetExtraLong()
void wxCommandEvent_GetExtraLong()
{
    long returns;
    
    // call GetExtraLong
    returns = ((wxCommandEvent *)wMe)->GetExtraLong();

    wPushNumber( (wNumber)returns);
}

// int GetInt()
void wxCommandEvent_GetInt()
{
    int returns;
    
    // call GetInt
    returns = ((wxCommandEvent *)wMe)->GetInt();

    wPushNumber( (wNumber)returns);
}

// int GetSelection()
void wxCommandEvent_GetSelection()
{
    int returns;
    
    // call GetSelection
    returns = ((wxCommandEvent *)wMe)->GetSelection();

    wPushNumber( (wNumber)returns);
}

// wxString GetString()
void wxCommandEvent_GetString()
{
    wxString returns;
    
    // call GetString
    returns = ((wxCommandEvent *)wMe)->GetString();

    wPushString( (char *)(returns.c_str()) );
}

// bool IsChecked() const
void wxCommandEvent_IsChecked()
{
    bool returns;
    
    // call IsChecked
    returns = ((wxCommandEvent *)wMe)->IsChecked();

    wPushNumber( (wNumber)returns);
}

// bool IsSelection()
void wxCommandEvent_IsSelection()
{
    bool returns;
    
    // call IsSelection
    returns = ((wxCommandEvent *)wMe)->IsSelection();

    wPushNumber( (wNumber)returns);
}

// void SetClientData(void* clientData)
void wxCommandEvent_SetClientData()
{
    // void* clientData
    void *clientData = (void *)wPopPointer( 0 );
    
    // call SetClientData
    ((wxCommandEvent *)wMe)->SetClientData(clientData);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetExtraLong(int extraLong)
void wxCommandEvent_SetExtraLong()
{
    // int extraLong
    int extraLong = (int)wPopNumber();
    
    // call SetExtraLong
    ((wxCommandEvent *)wMe)->SetExtraLong(extraLong);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetInt(int intCommand)
void wxCommandEvent_SetInt()
{
    // int intCommand
    int intCommand = (int)wPopNumber();
    
    // call SetInt
    ((wxCommandEvent *)wMe)->SetInt(intCommand);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetString(char* string)
void wxCommandEvent_SetString()
{
    // char* string
    char *string = (char *)wPopPointer( 0 );
    
    // call SetString
    ((wxCommandEvent *)wMe)->SetString(string);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxNotifyEvent_del()
{
    delete (wxNotifyEvent *)wMe;
}

// wxNotifyEvent(wxEventType eventType = wxEVT_NULL, int id = 0)
void wxNotifyEvent_new()
{
    wxNotifyEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxEventType eventType = wxEVT_NULL
    wxEventType eventType = (wArgCount > 0 ? (wxEventType)wPopNumber() : wxEVT_NULL);
    
    // call wxNotifyEvent
    returns = new wxNotifyEvent(eventType, id);

    wPushNumber( wAddObject( _wxNotifyEvent, (int)returns ) );
}

// bool IsAllowed() const
void wxNotifyEvent_IsAllowed()
{
    bool returns;
    
    // call IsAllowed
    returns = ((wxNotifyEvent *)wMe)->IsAllowed();

    wPushNumber( (wNumber)returns);
}

// void Veto()
void wxNotifyEvent_Veto()
{
    
    // call Veto
    ((wxNotifyEvent *)wMe)->Veto();

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxActivateEvent_del()
{
    delete (wxActivateEvent *)wMe;
}

// wxActivateEvent(WXTYPE eventType = 0, bool active = TRUE, int id = 0)
void wxActivateEvent_new()
{
    wxActivateEvent *returns;
    // int id = 0
    int id = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // bool active = TRUE
    bool active = (wArgCount > 1 ? (bool)wPopNumber() : TRUE);
    // WXTYPE eventType = 0
    WXTYPE eventType = (wArgCount > 0 ? (WXTYPE)wPopNumber() : 0);
    
    // call wxActivateEvent
    returns = new wxActivateEvent(eventType, active, id);

    wPushNumber( wAddObject( _wxActivateEvent, (int)returns ) );
}

// bool GetActive() const
void wxActivateEvent_GetActive()
{
    bool returns;
    
    // call GetActive
    returns = ((wxActivateEvent *)wMe)->GetActive();

    wPushNumber( (wNumber)returns);
}


void wxCalendarEvent_del()
{
    delete (wxCalendarEvent *)wMe;
}

// wxCalendarEvent(wxCalendarCtrl *cal, wxEventType type)
void wxCalendarEvent_new()
{
    wxCalendarEvent *returns;
    // wxEventType type
    wxEventType type = (wxEventType)wPopNumber();
    // wxCalendarCtrl *cal
    wxCalendarCtrl *cal = (wxCalendarCtrl *)wPopPointer( _wxCalendarCtrl);
    
    // call wxCalendarEvent
    returns = new wxCalendarEvent(cal, type);

    wPushNumber( wAddObject( _wxCalendarEvent, (int)returns ) );
}

// const wxDateTime& GetDate() const
void wxCalendarEvent_GetDate()
{
    const wxDateTime *returns;
    
    // call GetDate
    returns = &((wxCalendarEvent *)wMe)->GetDate();

    wPushNumber( wAddObject( _wxDateTime, (int)returns ) );
}

// wxDateTime::WeekDay GetWeekDay() const
void wxCalendarEvent_GetWeekDay()
{
    wxDateTime::WeekDay returns;
    
    // call GetWeekDay
    returns = ((wxCalendarEvent *)wMe)->GetWeekDay();

    wPushNumber( (wNumber)returns);
}


void wxCalculateLayoutEvent_del()
{
    delete (wxCalculateLayoutEvent *)wMe;
}

// wxCalculateLayoutEvent(wxWindowID id = 0)
void wxCalculateLayoutEvent_new()
{
    wxCalculateLayoutEvent *returns;
    // wxWindowID id = 0
    wxWindowID id = (wArgCount > 0 ? (wxWindowID)wPopNumber() : 0);
    
    // call wxCalculateLayoutEvent
    returns = new wxCalculateLayoutEvent(id);

    wPushNumber( wAddObject( _wxCalculateLayoutEvent, (int)returns ) );
}

// int GetFlags() const
void wxCalculateLayoutEvent_GetFlags()
{
    int returns;
    
    // call GetFlags
    returns = ((wxCalculateLayoutEvent *)wMe)->GetFlags();

    wPushNumber( (wNumber)returns);
}

// wxRect GetRect() const
void wxCalculateLayoutEvent_GetRect()
{
    wxRect *returns;
    
    // call GetRect
    returns = &((wxCalculateLayoutEvent *)wMe)->GetRect();

    wPushNumber( wAddObject( _wxRect, (int)(&returns) ) );
}

// void SetFlags(int flags)
void wxCalculateLayoutEvent_SetFlags()
{
    // int flags
    int flags = (int)wPopNumber();
    
    // call SetFlags
    ((wxCalculateLayoutEvent *)wMe)->SetFlags(flags);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetRect(const wxRect& rect)
void wxCalculateLayoutEvent_SetRect()
{
    // const wxRect& rect
    wxRect *rect = (wxRect *)wPopPointer( _wxRect);
    
    // call SetRect
    ((wxCalculateLayoutEvent *)wMe)->SetRect(*rect);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxCloseEvent_del()
{
    delete (wxCloseEvent *)wMe;
}

// wxCloseEvent(WXTYPE commandEventType = 0, int id = 0)
void wxCloseEvent_new()
{
    wxCloseEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // WXTYPE commandEventType = 0
    WXTYPE commandEventType = (wArgCount > 0 ? (WXTYPE)wPopNumber() : 0);
    
    // call wxCloseEvent
    returns = new wxCloseEvent(commandEventType, id);

    wPushNumber( wAddObject( _wxCloseEvent, (int)returns ) );
}

// bool CanVeto()
void wxCloseEvent_CanVeto()
{
    bool returns;
    
    // call CanVeto
    returns = ((wxCloseEvent *)wMe)->CanVeto();

    wPushNumber( (wNumber)returns);
}

// bool GetLoggingOff() const
void wxCloseEvent_GetLoggingOff()
{
    bool returns;
    
    // call GetLoggingOff
    returns = ((wxCloseEvent *)wMe)->GetLoggingOff();

    wPushNumber( (wNumber)returns);
}

// void SetCanVeto(bool canVeto)
void wxCloseEvent_SetCanVeto()
{
    // bool canVeto
    bool canVeto = (bool)wPopNumber();
    
    // call SetCanVeto
    ((wxCloseEvent *)wMe)->SetCanVeto(canVeto);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetLoggingOff(bool loggingOff) const
void wxCloseEvent_SetLoggingOff()
{
    // bool loggingOff
    bool loggingOff = (bool)wPopNumber();
    
    // call SetLoggingOff
    ((wxCloseEvent *)wMe)->SetLoggingOff(loggingOff);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Veto(bool veto = TRUE)
void wxCloseEvent_Veto()
{
    // bool veto = TRUE
    bool veto = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call Veto
    ((wxCloseEvent *)wMe)->Veto(veto);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxDialUpEvent_del()
{
    delete (wxDialUpEvent *)wMe;
}

// wxDialUpEvent(bool isConnected, bool isOwnEvent)
void wxDialUpEvent_new()
{
    wxDialUpEvent *returns;
    // bool isOwnEvent
    bool isOwnEvent = (bool)wPopNumber();
    // bool isConnected
    bool isConnected = (bool)wPopNumber();
    
    // call wxDialUpEvent
    returns = new wxDialUpEvent(isConnected, isOwnEvent);

    wPushNumber( wAddObject( _wxDialUpEvent, (int)returns ) );
}

// bool IsConnectedEvent() const
void wxDialUpEvent_IsConnectedEvent()
{
    bool returns;
    
    // call IsConnectedEvent
    returns = ((wxDialUpEvent *)wMe)->IsConnectedEvent();

    wPushNumber( (wNumber)returns);
}

// bool IsOwnEvent() const
void wxDialUpEvent_IsOwnEvent()
{
    bool returns;
    
    // call IsOwnEvent
    returns = ((wxDialUpEvent *)wMe)->IsOwnEvent();

    wPushNumber( (wNumber)returns);
}


void wxDropFilesEvent_del()
{
    delete (wxDropFilesEvent *)wMe;
}

// wxString* GetFiles() const
void wxDropFilesEvent_GetFiles()
{
    wxString *returns;
    
    // call GetFiles
    returns = ((wxDropFilesEvent *)wMe)->GetFiles();

    wPushString( (char *)(returns->c_str()) );
}

// int GetNumberOfFiles() const
void wxDropFilesEvent_GetNumberOfFiles()
{
    int returns;
    
    // call GetNumberOfFiles
    returns = ((wxDropFilesEvent *)wMe)->GetNumberOfFiles();

    wPushNumber( (wNumber)returns);
}

// wxPoint GetPosition() const
void wxDropFilesEvent_GetPosition()
{
    wxPoint *returns;
    
    // call GetPosition
    returns = &((wxDropFilesEvent *)wMe)->GetPosition();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}


void wxEraseEvent_del()
{
    delete (wxEraseEvent *)wMe;
}

// wxEraseEvent(int id = 0, wxDC* dc = NULL)
void wxEraseEvent_new()
{
    wxEraseEvent *returns;
    // wxDC* dc = NULL
    wxDC *dc = (wArgCount > 1 ? (wxDC *)wPopPointer( _wxDC) : NULL);
    // int id = 0
    int id = (wArgCount > 0 ? (int)wPopNumber() : 0);
    
    // call wxEraseEvent
    returns = new wxEraseEvent(id, dc);

    wPushNumber( wAddObject( _wxEraseEvent, (int)returns ) );
}

// wxDC* GetDC() const
void wxEraseEvent_GetDC()
{
    wxDC *returns;
    
    // call GetDC
    returns = ((wxEraseEvent *)wMe)->GetDC();

    wPushNumber( wAddObject( _wxDC, (int)returns ) );
}


void wxFocusEvent_del()
{
    delete (wxFocusEvent *)wMe;
}

// wxFocusEvent(WXTYPE eventType = 0, int id = 0)
void wxFocusEvent_new()
{
    wxFocusEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // WXTYPE eventType = 0
    WXTYPE eventType = (wArgCount > 0 ? (WXTYPE)wPopNumber() : 0);
    
    // call wxFocusEvent
    returns = new wxFocusEvent(eventType, id);

    wPushNumber( wAddObject( _wxFocusEvent, (int)returns ) );
}


void wxKeyEvent_del()
{
    delete (wxKeyEvent *)wMe;
}

// wxKeyEvent(WXTYPE keyEventType)
void wxKeyEvent_new()
{
    wxKeyEvent *returns;
    // WXTYPE keyEventType
    WXTYPE keyEventType = (WXTYPE)wPopNumber();
    
    // call wxKeyEvent
    returns = new wxKeyEvent(keyEventType);

    wPushNumber( wAddObject( _wxKeyEvent, (int)returns ) );
}

// bool AltDown() const
void wxKeyEvent_AltDown()
{
    bool returns;
    
    // call AltDown
    returns = ((wxKeyEvent *)wMe)->AltDown();

    wPushNumber( (wNumber)returns);
}

// bool ControlDown() const
void wxKeyEvent_ControlDown()
{
    bool returns;
    
    // call ControlDown
    returns = ((wxKeyEvent *)wMe)->ControlDown();

    wPushNumber( (wNumber)returns);
}

// int GetKeyCode() const
void wxKeyEvent_GetKeyCode()
{
    int returns;
    
    // call GetKeyCode
    returns = ((wxKeyEvent *)wMe)->GetKeyCode();

    wPushNumber( (wNumber)returns);
}

// long GetX()
void wxKeyEvent_GetX()
{
    long returns;
    
    // call GetX
    returns = ((wxKeyEvent *)wMe)->GetX();

    wPushNumber( (wNumber)returns);
}

// long GetY() const
void wxKeyEvent_GetY()
{
    long returns;
    
    // call GetY
    returns = ((wxKeyEvent *)wMe)->GetY();

    wPushNumber( (wNumber)returns);
}

// bool MetaDown() const
void wxKeyEvent_MetaDown()
{
    bool returns;
    
    // call MetaDown
    returns = ((wxKeyEvent *)wMe)->MetaDown();

    wPushNumber( (wNumber)returns);
}

// wxPoint GetPosition() const
void wxKeyEvent_GetPosition()
{
    wxPoint *returns;
    
    // call GetPosition
    returns = &((wxKeyEvent *)wMe)->GetPosition();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

    void wxKeyEvent_GetPositionX()
    {
        long x, y;
        ((wxKeyEvent *)wMe)->GetPosition(&x, &y);
        wPushNumber( (wNumber)x );
    }

    void wxKeyEvent_GetPositionY()
    {
        long x, y;
        ((wxKeyEvent *)wMe)->GetPosition(&x, &y);
        wPushNumber( (wNumber)y );
    }
// bool HasModifiers() const
void wxKeyEvent_HasModifiers()
{
    bool returns;
    
    // call HasModifiers
    returns = ((wxKeyEvent *)wMe)->HasModifiers();

    wPushNumber( (wNumber)returns);
}

// bool ShiftDown() const
void wxKeyEvent_ShiftDown()
{
    bool returns;
    
    // call ShiftDown
    returns = ((wxKeyEvent *)wMe)->ShiftDown();

    wPushNumber( (wNumber)returns);
}


void wxIdleEvent_del()
{
    delete (wxIdleEvent *)wMe;
}

// wxIdleEvent()
void wxIdleEvent_new()
{
    wxIdleEvent *returns;
    
    // call wxIdleEvent
    returns = new wxIdleEvent();

    wPushNumber( wAddObject( _wxIdleEvent, (int)returns ) );
}

// void RequestMore(bool needMore = TRUE)
void wxIdleEvent_RequestMore()
{
    // bool needMore = TRUE
    bool needMore = (wArgCount > 0 ? (bool)wPopNumber() : TRUE);
    
    // call RequestMore
    ((wxIdleEvent *)wMe)->RequestMore(needMore);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool MoreRequested() const
void wxIdleEvent_MoreRequested()
{
    bool returns;
    
    // call MoreRequested
    returns = ((wxIdleEvent *)wMe)->MoreRequested();

    wPushNumber( (wNumber)returns);
}


void wxInitDialogEvent_del()
{
    delete (wxInitDialogEvent *)wMe;
}

// wxInitDialogEvent(int id = 0)
void wxInitDialogEvent_new()
{
    wxInitDialogEvent *returns;
    // int id = 0
    int id = (wArgCount > 0 ? (int)wPopNumber() : 0);
    
    // call wxInitDialogEvent
    returns = new wxInitDialogEvent(id);

    wPushNumber( wAddObject( _wxInitDialogEvent, (int)returns ) );
}


void wxJoystickEvent_del()
{
    delete (wxJoystickEvent *)wMe;
}

// wxJoystickEvent(WXTYPE eventType = 0, int state = 0, int joystick = wxJOYSTICK1, int change = 0)
void wxJoystickEvent_new()
{
    wxJoystickEvent *returns;
    // int change = 0
    int change = (wArgCount > 3 ? (int)wPopNumber() : 0);
    // int joystick = wxJOYSTICK1
    int joystick = (wArgCount > 2 ? (int)wPopNumber() : wxJOYSTICK1);
    // int state = 0
    int state = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // WXTYPE eventType = 0
    WXTYPE eventType = (wArgCount > 0 ? (WXTYPE)wPopNumber() : 0);
    
    // call wxJoystickEvent
    returns = new wxJoystickEvent(eventType, state, joystick, change);

    wPushNumber( wAddObject( _wxJoystickEvent, (int)returns ) );
}

// bool ButtonDown(int button = wxJOY_BUTTON_ANY) const
void wxJoystickEvent_ButtonDown()
{
    bool returns;
    // int button = wxJOY_BUTTON_ANY
    int button = (wArgCount > 0 ? (int)wPopNumber() : wxJOY_BUTTON_ANY);
    
    // call ButtonDown
    returns = ((wxJoystickEvent *)wMe)->ButtonDown(button);

    wPushNumber( (wNumber)returns);
}

// bool ButtonIsDown(int button = wxJOY_BUTTON_ANY) const
void wxJoystickEvent_ButtonIsDown()
{
    bool returns;
    // int button = wxJOY_BUTTON_ANY
    int button = (wArgCount > 0 ? (int)wPopNumber() : wxJOY_BUTTON_ANY);
    
    // call ButtonIsDown
    returns = ((wxJoystickEvent *)wMe)->ButtonIsDown(button);

    wPushNumber( (wNumber)returns);
}

// bool ButtonUp(int button = wxJOY_BUTTON_ANY) const
void wxJoystickEvent_ButtonUp()
{
    bool returns;
    // int button = wxJOY_BUTTON_ANY
    int button = (wArgCount > 0 ? (int)wPopNumber() : wxJOY_BUTTON_ANY);
    
    // call ButtonUp
    returns = ((wxJoystickEvent *)wMe)->ButtonUp(button);

    wPushNumber( (wNumber)returns);
}

// int GetButtonChange() const
void wxJoystickEvent_GetButtonChange()
{
    int returns;
    
    // call GetButtonChange
    returns = ((wxJoystickEvent *)wMe)->GetButtonChange();

    wPushNumber( (wNumber)returns);
}

// int GetButtonState() const
void wxJoystickEvent_GetButtonState()
{
    int returns;
    
    // call GetButtonState
    returns = ((wxJoystickEvent *)wMe)->GetButtonState();

    wPushNumber( (wNumber)returns);
}

// int GetJoystick() const
void wxJoystickEvent_GetJoystick()
{
    int returns;
    
    // call GetJoystick
    returns = ((wxJoystickEvent *)wMe)->GetJoystick();

    wPushNumber( (wNumber)returns);
}

// wxPoint GetPosition() const
void wxJoystickEvent_GetPosition()
{
    wxPoint *returns;
    
    // call GetPosition
    returns = &((wxJoystickEvent *)wMe)->GetPosition();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

// int GetZPosition() const
void wxJoystickEvent_GetZPosition()
{
    int returns;
    
    // call GetZPosition
    returns = ((wxJoystickEvent *)wMe)->GetZPosition();

    wPushNumber( (wNumber)returns);
}

// bool IsButton() const
void wxJoystickEvent_IsButton()
{
    bool returns;
    
    // call IsButton
    returns = ((wxJoystickEvent *)wMe)->IsButton();

    wPushNumber( (wNumber)returns);
}

// bool IsMove() const
void wxJoystickEvent_IsMove()
{
    bool returns;
    
    // call IsMove
    returns = ((wxJoystickEvent *)wMe)->IsMove();

    wPushNumber( (wNumber)returns);
}

// bool IsZMove() const
void wxJoystickEvent_IsZMove()
{
    bool returns;
    
    // call IsZMove
    returns = ((wxJoystickEvent *)wMe)->IsZMove();

    wPushNumber( (wNumber)returns);
}


void wxListEvent_del()
{
    delete (wxListEvent *)wMe;
}

// wxListEvent(WXTYPE commandType = 0, int id = 0)
void wxListEvent_new()
{
    wxListEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // WXTYPE commandType = 0
    WXTYPE commandType = (wArgCount > 0 ? (WXTYPE)wPopNumber() : 0);
    
    // call wxListEvent
    returns = new wxListEvent(commandType, id);

    wPushNumber( wAddObject( _wxListEvent, (int)returns ) );
}

// int GetCode() const
void wxListEvent_GetCode()
{
    int returns;
    
    // call GetCode
    returns = ((wxListEvent *)wMe)->GetCode();

    wPushNumber( (wNumber)returns);
}

// long GetIndex() const
void wxListEvent_GetIndex()
{
    long returns;
    
    // call GetIndex
    returns = ((wxListEvent *)wMe)->GetIndex();

    wPushNumber( (wNumber)returns);
}

// int GetColumn() const
void wxListEvent_GetColumn()
{
    int returns;
    
    // call GetColumn
    returns = ((wxListEvent *)wMe)->GetColumn();

    wPushNumber( (wNumber)returns);
}

// wxPoint GetPoint() const
void wxListEvent_GetPoint()
{
    wxPoint *returns;
    
    // call GetPoint
    returns = &((wxListEvent *)wMe)->GetPoint();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

// const wxString& GetLabel() const
void wxListEvent_GetLabel()
{
    const wxString *returns;
    
    // call GetLabel
    returns = &((wxListEvent *)wMe)->GetLabel();

    wPushString( (char *)(returns->c_str()) );
}

// const wxString& GetText() const
void wxListEvent_GetText()
{
    const wxString *returns;
    
    // call GetText
    returns = &((wxListEvent *)wMe)->GetText();

    wPushString( (char *)(returns->c_str()) );
}

// int GetImage() const
void wxListEvent_GetImage()
{
    int returns;
    
    // call GetImage
    returns = ((wxListEvent *)wMe)->GetImage();

    wPushNumber( (wNumber)returns);
}

// long GetData() const
void wxListEvent_GetData()
{
    long returns;
    
    // call GetData
    returns = ((wxListEvent *)wMe)->GetData();

    wPushNumber( (wNumber)returns);
}

// long GetMask() const
void wxListEvent_GetMask()
{
    long returns;
    
    // call GetMask
    returns = ((wxListEvent *)wMe)->GetMask();

    wPushNumber( (wNumber)returns);
}

// const wxListItem& GetItem() const
void wxListEvent_GetItem()
{
    const wxListItem *returns;
    
    // call GetItem
    returns = &((wxListEvent *)wMe)->GetItem();

    wPushNumber( wAddObject( _wxListItem, (int)returns ) );
}


void wxMenuEvent_del()
{
    delete (wxMenuEvent *)wMe;
}

// wxMenuEvent(wxEventType type = wxEVT_NULL, int id = 0)
void wxMenuEvent_new()
{
    wxMenuEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxEventType type = wxEVT_NULL
    wxEventType type = (wArgCount > 0 ? (wxEventType)wPopNumber() : wxEVT_NULL);
    
    // call wxMenuEvent
    returns = new wxMenuEvent(type, id);

    wPushNumber( wAddObject( _wxMenuEvent, (int)returns ) );
}

// int GetMenuId() const
void wxMenuEvent_GetMenuId()
{
    int returns;
    
    // call GetMenuId
    returns = ((wxMenuEvent *)wMe)->GetMenuId();

    wPushNumber( (wNumber)returns);
}


void wxMouseEvent_del()
{
    delete (wxMouseEvent *)wMe;
}

// bool AltDown()
void wxMouseEvent_AltDown()
{
    bool returns;
    
    // call AltDown
    returns = ((wxMouseEvent *)wMe)->AltDown();

    wPushNumber( (wNumber)returns);
}

// bool Button(int button)
void wxMouseEvent_Button()
{
    bool returns;
    // int button
    int button = (int)wPopNumber();
    
    // call Button
    returns = ((wxMouseEvent *)wMe)->Button(button);

    wPushNumber( (wNumber)returns);
}

// bool ButtonDClick(int but = -1)
void wxMouseEvent_ButtonDClick()
{
    bool returns;
    // int but = -1
    int but = (wArgCount > 0 ? (int)wPopNumber() : -1);
    
    // call ButtonDClick
    returns = ((wxMouseEvent *)wMe)->ButtonDClick(but);

    wPushNumber( (wNumber)returns);
}

// bool ButtonDown(int but = -1)
void wxMouseEvent_ButtonDown()
{
    bool returns;
    // int but = -1
    int but = (wArgCount > 0 ? (int)wPopNumber() : -1);
    
    // call ButtonDown
    returns = ((wxMouseEvent *)wMe)->ButtonDown(but);

    wPushNumber( (wNumber)returns);
}

// bool ButtonUp(int but = -1)
void wxMouseEvent_ButtonUp()
{
    bool returns;
    // int but = -1
    int but = (wArgCount > 0 ? (int)wPopNumber() : -1);
    
    // call ButtonUp
    returns = ((wxMouseEvent *)wMe)->ButtonUp(but);

    wPushNumber( (wNumber)returns);
}

// bool ControlDown()
void wxMouseEvent_ControlDown()
{
    bool returns;
    
    // call ControlDown
    returns = ((wxMouseEvent *)wMe)->ControlDown();

    wPushNumber( (wNumber)returns);
}

// bool Dragging()
void wxMouseEvent_Dragging()
{
    bool returns;
    
    // call Dragging
    returns = ((wxMouseEvent *)wMe)->Dragging();

    wPushNumber( (wNumber)returns);
}

// bool Entering()
void wxMouseEvent_Entering()
{
    bool returns;
    
    // call Entering
    returns = ((wxMouseEvent *)wMe)->Entering();

    wPushNumber( (wNumber)returns);
}

// wxPoint GetPosition() const
void wxMouseEvent_GetPosition()
{
    wxPoint *returns;
    
    // call GetPosition
    returns = &((wxMouseEvent *)wMe)->GetPosition();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

    void wxMouseEvent_GetPositionX()
    {
        long x, y;
        ((wxMouseEvent *)wMe)->GetPosition(&x, &y);
        wPushNumber( (wNumber)x );
    }

    void wxMouseEvent_GetPositionY()
    {
        long x, y;
        ((wxMouseEvent *)wMe)->GetPosition(&x, &y);
        wPushNumber( (wNumber)y );
    }


// wxPoint GetLogicalPosition(const wxDC& dc) const
void wxMouseEvent_GetLogicalPosition()
{
    wxPoint *returns;
    // const wxDC& dc
    wxDC *dc = (wxDC *)wPopPointer( _wxDC);
    
    // call GetLogicalPosition
    returns = &((wxMouseEvent *)wMe)->GetLogicalPosition(*dc);

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

// long GetX() const
void wxMouseEvent_GetX()
{
    long returns;
    
    // call GetX
    returns = ((wxMouseEvent *)wMe)->GetX();

    wPushNumber( (wNumber)returns);
}

// long GetY()
void wxMouseEvent_GetY()
{
    long returns;
    
    // call GetY
    returns = ((wxMouseEvent *)wMe)->GetY();

    wPushNumber( (wNumber)returns);
}

// bool IsButton() const
void wxMouseEvent_IsButton()
{
    bool returns;
    
    // call IsButton
    returns = ((wxMouseEvent *)wMe)->IsButton();

    wPushNumber( (wNumber)returns);
}

// bool Leaving() const
void wxMouseEvent_Leaving()
{
    bool returns;
    
    // call Leaving
    returns = ((wxMouseEvent *)wMe)->Leaving();

    wPushNumber( (wNumber)returns);
}

// bool LeftDClick() const
void wxMouseEvent_LeftDClick()
{
    bool returns;
    
    // call LeftDClick
    returns = ((wxMouseEvent *)wMe)->LeftDClick();

    wPushNumber( (wNumber)returns);
}

// bool LeftDown() const
void wxMouseEvent_LeftDown()
{
    bool returns;
    
    // call LeftDown
    returns = ((wxMouseEvent *)wMe)->LeftDown();

    wPushNumber( (wNumber)returns);
}

// bool LeftIsDown() const
void wxMouseEvent_LeftIsDown()
{
    bool returns;
    
    // call LeftIsDown
    returns = ((wxMouseEvent *)wMe)->LeftIsDown();

    wPushNumber( (wNumber)returns);
}

// bool LeftUp() const
void wxMouseEvent_LeftUp()
{
    bool returns;
    
    // call LeftUp
    returns = ((wxMouseEvent *)wMe)->LeftUp();

    wPushNumber( (wNumber)returns);
}

// bool MetaDown() const
void wxMouseEvent_MetaDown()
{
    bool returns;
    
    // call MetaDown
    returns = ((wxMouseEvent *)wMe)->MetaDown();

    wPushNumber( (wNumber)returns);
}

// bool MiddleDClick() const
void wxMouseEvent_MiddleDClick()
{
    bool returns;
    
    // call MiddleDClick
    returns = ((wxMouseEvent *)wMe)->MiddleDClick();

    wPushNumber( (wNumber)returns);
}

// bool MiddleDown() const
void wxMouseEvent_MiddleDown()
{
    bool returns;
    
    // call MiddleDown
    returns = ((wxMouseEvent *)wMe)->MiddleDown();

    wPushNumber( (wNumber)returns);
}

// bool MiddleIsDown() const
void wxMouseEvent_MiddleIsDown()
{
    bool returns;
    
    // call MiddleIsDown
    returns = ((wxMouseEvent *)wMe)->MiddleIsDown();

    wPushNumber( (wNumber)returns);
}

// bool MiddleUp() const
void wxMouseEvent_MiddleUp()
{
    bool returns;
    
    // call MiddleUp
    returns = ((wxMouseEvent *)wMe)->MiddleUp();

    wPushNumber( (wNumber)returns);
}

// bool Moving() const
void wxMouseEvent_Moving()
{
    bool returns;
    
    // call Moving
    returns = ((wxMouseEvent *)wMe)->Moving();

    wPushNumber( (wNumber)returns);
}

// bool RightDClick() const
void wxMouseEvent_RightDClick()
{
    bool returns;
    
    // call RightDClick
    returns = ((wxMouseEvent *)wMe)->RightDClick();

    wPushNumber( (wNumber)returns);
}

// bool RightDown() const
void wxMouseEvent_RightDown()
{
    bool returns;
    
    // call RightDown
    returns = ((wxMouseEvent *)wMe)->RightDown();

    wPushNumber( (wNumber)returns);
}

// bool RightIsDown() const
void wxMouseEvent_RightIsDown()
{
    bool returns;
    
    // call RightIsDown
    returns = ((wxMouseEvent *)wMe)->RightIsDown();

    wPushNumber( (wNumber)returns);
}

// bool RightUp() const
void wxMouseEvent_RightUp()
{
    bool returns;
    
    // call RightUp
    returns = ((wxMouseEvent *)wMe)->RightUp();

    wPushNumber( (wNumber)returns);
}

// bool ShiftDown() const
void wxMouseEvent_ShiftDown()
{
    bool returns;
    
    // call ShiftDown
    returns = ((wxMouseEvent *)wMe)->ShiftDown();

    wPushNumber( (wNumber)returns);
}


void wxMoveEvent_del()
{
    delete (wxMoveEvent *)wMe;
}

// wxMoveEvent(const wxPoint& pt, int id = 0)
void wxMoveEvent_new()
{
    wxMoveEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // const wxPoint& pt
    wxPoint *pt = (wxPoint *)wPopPointer( _wxPoint);
    
    // call wxMoveEvent
    returns = new wxMoveEvent(*pt, id);

    wPushNumber( wAddObject( _wxMoveEvent, (int)returns ) );
}

// wxPoint GetPosition() const
void wxMoveEvent_GetPosition()
{
    wxPoint *returns;
    
    // call GetPosition
    returns = &((wxMoveEvent *)wMe)->GetPosition();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}


void wxNotebookEvent_del()
{
    delete (wxNotebookEvent *)wMe;
}

// wxNotebookEvent(wxEventType eventType = wxEVT_NULL, int id = 0, int sel = -1, int oldSel = -1)
void wxNotebookEvent_new()
{
    wxNotebookEvent *returns;
    // int oldSel = -1
    int oldSel = (wArgCount > 3 ? (int)wPopNumber() : -1);
    // int sel = -1
    int sel = (wArgCount > 2 ? (int)wPopNumber() : -1);
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxEventType eventType = wxEVT_NULL
    wxEventType eventType = (wArgCount > 0 ? (wxEventType)wPopNumber() : wxEVT_NULL);
    
    // call wxNotebookEvent
    returns = new wxNotebookEvent(eventType, id, sel, oldSel);

    wPushNumber( wAddObject( _wxNotebookEvent, (int)returns ) );
}

// int GetOldSelection() const
void wxNotebookEvent_GetOldSelection()
{
    int returns;
    
    // call GetOldSelection
    returns = ((wxNotebookEvent *)wMe)->GetOldSelection();

    wPushNumber( (wNumber)returns);
}

// int GetSelection() const
void wxNotebookEvent_GetSelection()
{
    int returns;
    
    // call GetSelection
    returns = ((wxNotebookEvent *)wMe)->GetSelection();

    wPushNumber( (wNumber)returns);
}

// void SetOldSelection(int page)
void wxNotebookEvent_SetOldSelection()
{
    // int page
    int page = (int)wPopNumber();
    
    // call SetOldSelection
    ((wxNotebookEvent *)wMe)->SetOldSelection(page);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSelection(int page)
void wxNotebookEvent_SetSelection()
{
    // int page
    int page = (int)wPopNumber();
    
    // call SetSelection
    ((wxNotebookEvent *)wMe)->SetSelection(page);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxPaintEvent_del()
{
    delete (wxPaintEvent *)wMe;
}

// wxPaintEvent(int id = 0)
void wxPaintEvent_new()
{
    wxPaintEvent *returns;
    // int id = 0
    int id = (wArgCount > 0 ? (int)wPopNumber() : 0);
    
    // call wxPaintEvent
    returns = new wxPaintEvent(id);

    wPushNumber( wAddObject( _wxPaintEvent, (int)returns ) );
}


void wxProcessEvent_del()
{
    delete (wxProcessEvent *)wMe;
}

// wxProcessEvent(int id = 0, int pid = 0)
void wxProcessEvent_new()
{
    wxProcessEvent *returns;
    // int pid = 0
    int pid = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // int id = 0
    int id = (wArgCount > 0 ? (int)wPopNumber() : 0);
    
    // call wxProcessEvent
    returns = new wxProcessEvent(id, pid);

    wPushNumber( wAddObject( _wxProcessEvent, (int)returns ) );
}

// int GetPid() const
void wxProcessEvent_GetPid()
{
    int returns;
    
    // call GetPid
    returns = ((wxProcessEvent *)wMe)->GetPid();

    wPushNumber( (wNumber)returns);
}


void wxQueryLayoutInfoEvent_del()
{
    delete (wxQueryLayoutInfoEvent *)wMe;
}

// wxQueryLayoutInfoEvent(wxWindowID id = 0)
void wxQueryLayoutInfoEvent_new()
{
    wxQueryLayoutInfoEvent *returns;
    // wxWindowID id = 0
    wxWindowID id = (wArgCount > 0 ? (wxWindowID)wPopNumber() : 0);
    
    // call wxQueryLayoutInfoEvent
    returns = new wxQueryLayoutInfoEvent(id);

    wPushNumber( wAddObject( _wxQueryLayoutInfoEvent, (int)returns ) );
}

// int GetFlags() const
void wxQueryLayoutInfoEvent_GetFlags()
{
    int returns;
    
    // call GetFlags
    returns = ((wxQueryLayoutInfoEvent *)wMe)->GetFlags();

    wPushNumber( (wNumber)returns);
}

// int GetOrientation()
void wxQueryLayoutInfoEvent_GetOrientation()
{
    int returns;
    
    // call GetOrientation
    returns = ((wxQueryLayoutInfoEvent *)wMe)->GetOrientation();

    wPushNumber( (wNumber)returns);
}

// int GetRequestedLength() const
void wxQueryLayoutInfoEvent_GetRequestedLength()
{
    int returns;
    
    // call GetRequestedLength
    returns = ((wxQueryLayoutInfoEvent *)wMe)->GetRequestedLength();

    wPushNumber( (wNumber)returns);
}

// wxSize GetSize() const
void wxQueryLayoutInfoEvent_GetSize()
{
    wxSize *returns;
    
    // call GetSize
    returns = &((wxQueryLayoutInfoEvent *)wMe)->GetSize();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// void SetAlignment(wxLayoutAlignment alignment)
void wxQueryLayoutInfoEvent_SetAlignment()
{
    // wxLayoutAlignment alignment
    wxLayoutAlignment alignment = (wxLayoutAlignment)(int)wPopNumber();
    
    // call SetAlignment
    ((wxQueryLayoutInfoEvent *)wMe)->SetAlignment((wxLayoutAlignment)alignment);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetFlags(int flags)
void wxQueryLayoutInfoEvent_SetFlags()
{
    // int flags
    int flags = (int)wPopNumber();
    
    // call SetFlags
    ((wxQueryLayoutInfoEvent *)wMe)->SetFlags(flags);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetOrientation(wxLayoutOrientation orientation)
void wxQueryLayoutInfoEvent_SetOrientation()
{
    // wxLayoutOrientation orientation
    wxLayoutOrientation orientation = (wxLayoutOrientation)(int)wPopNumber();
    
    // call SetOrientation
    ((wxQueryLayoutInfoEvent *)wMe)->SetOrientation((wxLayoutOrientation)orientation);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetRequestedLength(int length)
void wxQueryLayoutInfoEvent_SetRequestedLength()
{
    // int length
    int length = (int)wPopNumber();
    
    // call SetRequestedLength
    ((wxQueryLayoutInfoEvent *)wMe)->SetRequestedLength(length);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSize(const wxSize& size)
void wxQueryLayoutInfoEvent_SetSize()
{
    // const wxSize& size
    wxSize *size = (wxSize *)wPopPointer( _wxSize);
    
    // call SetSize
    ((wxQueryLayoutInfoEvent *)wMe)->SetSize(*size);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxScrollEvent_del()
{
    delete (wxScrollEvent *)wMe;
}

// wxScrollEvent(WXTYPE commandType = 0, int id = 0, int pos = 0, int orientation = 0)
void wxScrollEvent_new()
{
    wxScrollEvent *returns;
    // int orientation = 0
    int orientation = (wArgCount > 3 ? (int)wPopNumber() : 0);
    // int pos = 0
    int pos = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // WXTYPE commandType = 0
    WXTYPE commandType = (wArgCount > 0 ? (WXTYPE)wPopNumber() : 0);
    
    // call wxScrollEvent
    returns = new wxScrollEvent(commandType, id, pos, orientation);

    wPushNumber( wAddObject( _wxScrollEvent, (int)returns ) );
}

// int GetOrientation() const
void wxScrollEvent_GetOrientation()
{
    int returns;
    
    // call GetOrientation
    returns = ((wxScrollEvent *)wMe)->GetOrientation();

    wPushNumber( (wNumber)returns);
}

// int GetPosition() const
void wxScrollEvent_GetPosition()
{
    int returns;
    
    // call GetPosition
    returns = ((wxScrollEvent *)wMe)->GetPosition();

    wPushNumber( (wNumber)returns);
}


void wxScrollWinEvent_del()
{
    delete (wxScrollWinEvent *)wMe;
}

// int GetOrientation() const
void wxScrollWinEvent_GetOrientation()
{
    int returns;
    
    // call GetOrientation
    returns = ((wxScrollWinEvent *)wMe)->GetOrientation();

    wPushNumber( (wNumber)returns);
}

// int GetPosition() const
void wxScrollWinEvent_GetPosition()
{
    int returns;
    
    // call GetPosition
    returns = ((wxScrollWinEvent *)wMe)->GetPosition();

    wPushNumber( (wNumber)returns);
}


void wxSizeEvent_del()
{
    delete (wxSizeEvent *)wMe;
}

// wxSizeEvent(const wxSize& sz, int id = 0)
void wxSizeEvent_new()
{
    wxSizeEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // const wxSize& sz
    wxSize *sz = (wxSize *)wPopPointer( _wxSize);
    
    // call wxSizeEvent
    returns = new wxSizeEvent(*sz, id);

    wPushNumber( wAddObject( _wxSizeEvent, (int)returns ) );
}

// wxSize GetSize() const
void wxSizeEvent_GetSize()
{
    wxSize *returns;
    
    // call GetSize
    returns = &((wxSizeEvent *)wMe)->GetSize();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}


void wxSocketEvent_del()
{
    delete (wxSocketEvent *)wMe;
}

// wxSocketEvent(int id = 0)
void wxSocketEvent_new()
{
    wxSocketEvent *returns;
    // int id = 0
    int id = (wArgCount > 0 ? (int)wPopNumber() : 0);
    
    // call wxSocketEvent
    returns = new wxSocketEvent(id);

    wPushNumber( wAddObject( _wxSocketEvent, (int)returns ) );
}

// void * GetClientData()
void wxSocketEvent_GetClientData()
{
    
    // call GetClientData
    ((wxSocketEvent *)wMe)->GetClientData();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxSocketBase * GetSocket() const
void wxSocketEvent_GetSocket()
{
    wxSocketBase *returns;
    
    // call GetSocket
    returns = ((wxSocketEvent *)wMe)->GetSocket();

    wPushNumber( wAddObject( _wxSocketBase, (int)returns ) );
}

// wxSocketNotify GetSocketEvent() const
void wxSocketEvent_GetSocketEvent()
{
    wxSocketNotify returns;
    
    // call GetSocketEvent
    returns = ((wxSocketEvent *)wMe)->GetSocketEvent();

    wPushNumber( (wNumber)returns);
}


void wxSpinEvent_del()
{
    delete (wxSpinEvent *)wMe;
}

// wxSpinEvent(wxEventType commandType = wxEVT_NULL, int id = 0)
void wxSpinEvent_new()
{
    wxSpinEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxEventType commandType = wxEVT_NULL
    wxEventType commandType = (wArgCount > 0 ? (wxEventType)wPopNumber() : wxEVT_NULL);
    
    // call wxSpinEvent
    returns = new wxSpinEvent(commandType, id);

    wPushNumber( wAddObject( _wxSpinEvent, (int)returns ) );
}

// int GetPosition() const
void wxSpinEvent_GetPosition()
{
    int returns;
    
    // call GetPosition
    returns = ((wxSpinEvent *)wMe)->GetPosition();

    wPushNumber( (wNumber)returns);
}

// void SetPosition(int pos)
void wxSpinEvent_SetPosition()
{
    // int pos
    int pos = (int)wPopNumber();
    
    // call SetPosition
    ((wxSpinEvent *)wMe)->SetPosition(pos);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxSysColourChangedEvent_del()
{
    delete (wxSysColourChangedEvent *)wMe;
}

// wxSysColourChangedEvent()
void wxSysColourChangedEvent_new()
{
    wxSysColourChangedEvent *returns;
    
    // call wxSysColourChangedEvent
    returns = new wxSysColourChangedEvent();

    wPushNumber( wAddObject( _wxSysColourChangedEvent, (int)returns ) );
}


void wxTreeEvent_del()
{
    delete (wxTreeEvent *)wMe;
}

// wxTreeEvent(WXTYPE commandType = 0, int id = 0)
void wxTreeEvent_new()
{
    wxTreeEvent *returns;
    // int id = 0
    int id = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // WXTYPE commandType = 0
    WXTYPE commandType = (wArgCount > 0 ? (WXTYPE)wPopNumber() : 0);
    
    // call wxTreeEvent
    returns = new wxTreeEvent(commandType, id);

    wPushNumber( wAddObject( _wxTreeEvent, (int)returns ) );
}

// wxTreeItemId GetItem() const
void wxTreeEvent_GetItem()
{
    wxTreeItemId *returns;
    
    // call GetItem
    returns = &((wxTreeEvent *)wMe)->GetItem();

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxTreeItemId GetOldItem() const
void wxTreeEvent_GetOldItem()
{
    wxTreeItemId *returns;
    
    // call GetOldItem
    returns = &((wxTreeEvent *)wMe)->GetOldItem();

    wPushNumber( wAddObject( _wxTreeItemId, (int)(&returns) ) );
}

// wxPoint GetPoint() const
void wxTreeEvent_GetPoint()
{
    wxPoint *returns;
    
    // call GetPoint
    returns = &((wxTreeEvent *)wMe)->GetPoint();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

// int GetCode() const
void wxTreeEvent_GetCode()
{
    int returns;
    
    // call GetCode
    returns = ((wxTreeEvent *)wMe)->GetCode();

    wPushNumber( (wNumber)returns);
}

// const wxString& GetLabel() const
void wxTreeEvent_GetLabel()
{
    const wxString *returns;
    
    // call GetLabel
    returns = &((wxTreeEvent *)wMe)->GetLabel();

    wPushString( (char *)(returns->c_str()) );
}


void wxUpdateUIEvent_del()
{
    delete (wxUpdateUIEvent *)wMe;
}

// wxUpdateUIEvent(wxWindowID commandId = 0)
void wxUpdateUIEvent_new()
{
    wxUpdateUIEvent *returns;
    // wxWindowID commandId = 0
    wxWindowID commandId = (wArgCount > 0 ? (wxWindowID)wPopNumber() : 0);
    
    // call wxUpdateUIEvent
    returns = new wxUpdateUIEvent(commandId);

    wPushNumber( wAddObject( _wxUpdateUIEvent, (int)returns ) );
}

// void Check(bool check)
void wxUpdateUIEvent_Check()
{
    // bool check
    bool check = (bool)wPopNumber();
    
    // call Check
    ((wxUpdateUIEvent *)wMe)->Check(check);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Enable(bool enable)
void wxUpdateUIEvent_Enable()
{
    // bool enable
    bool enable = (bool)wPopNumber();
    
    // call Enable
    ((wxUpdateUIEvent *)wMe)->Enable(enable);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool GetChecked() const
void wxUpdateUIEvent_GetChecked()
{
    bool returns;
    
    // call GetChecked
    returns = ((wxUpdateUIEvent *)wMe)->GetChecked();

    wPushNumber( (wNumber)returns);
}

// bool GetEnabled() const
void wxUpdateUIEvent_GetEnabled()
{
    bool returns;
    
    // call GetEnabled
    returns = ((wxUpdateUIEvent *)wMe)->GetEnabled();

    wPushNumber( (wNumber)returns);
}

// bool GetSetChecked() const
void wxUpdateUIEvent_GetSetChecked()
{
    bool returns;
    
    // call GetSetChecked
    returns = ((wxUpdateUIEvent *)wMe)->GetSetChecked();

    wPushNumber( (wNumber)returns);
}

// bool GetSetEnabled() const
void wxUpdateUIEvent_GetSetEnabled()
{
    bool returns;
    
    // call GetSetEnabled
    returns = ((wxUpdateUIEvent *)wMe)->GetSetEnabled();

    wPushNumber( (wNumber)returns);
}

// bool GetSetText() const
void wxUpdateUIEvent_GetSetText()
{
    bool returns;
    
    // call GetSetText
    returns = ((wxUpdateUIEvent *)wMe)->GetSetText();

    wPushNumber( (wNumber)returns);
}

// wxString GetText() const
void wxUpdateUIEvent_GetText()
{
    wxString returns;
    
    // call GetText
    returns = ((wxUpdateUIEvent *)wMe)->GetText();

    wPushString( (char *)(returns.c_str()) );
}

// void SetText(const wxString& text)
void wxUpdateUIEvent_SetText()
{
    // const wxString& text
    wxString text = wPopString();
    
    // call SetText
    ((wxUpdateUIEvent *)wMe)->SetText(text);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxWizardEvent_del()
{
    delete (wxWizardEvent *)wMe;
}

// wxWizardEvent(wxEventType type = wxEVT_NULL, int id = -1, bool direction = TRUE)
void wxWizardEvent_new()
{
    wxWizardEvent *returns;
    // bool direction = TRUE
    bool direction = (wArgCount > 2 ? (bool)wPopNumber() : TRUE);
    // int id = -1
    int id = (wArgCount > 1 ? (int)wPopNumber() : -1);
    // wxEventType type = wxEVT_NULL
    wxEventType type = (wArgCount > 0 ? (wxEventType)wPopNumber() : wxEVT_NULL);
    
    // call wxWizardEvent
    returns = new wxWizardEvent(type, id, direction);

    wPushNumber( wAddObject( _wxWizardEvent, (int)returns ) );
}

// bool GetDirection() const
void wxWizardEvent_GetDirection()
{
    bool returns;
    
    // call GetDirection
    returns = ((wxWizardEvent *)wMe)->GetDirection();

    wPushNumber( (wNumber)returns);
}


void wxSizer_del()
{
    delete (wxSizer *)wMe;
}

// ~wxSizer()
void wxSizer_dtor()
{
    
    // call ~wxSizer
    ((wxSizer *)wMe)->~wxSizer();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename AddWindow void Add(wxWindow* window, int option = 0,int flag = 0, int border = 0, wxObject* userData = NULL)
void wxSizer_AddWindow()
{
    // wxObject* userData = NULL
    wxObject *userData = (wArgCount > 4 ? (wxObject *)wPopPointer( _wxObject) : NULL);
    // int border = 0
    int border = (wArgCount > 3 ? (int)wPopNumber() : 0);
    // int flag = 0
    int flag = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // int option = 0
    int option = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Add
    ((wxSizer *)wMe)->Add(window, option, flag, border, userData);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename AddSizer void Add(wxSizer* sizer, int option = 0, int flag = 0, int border = 0, wxObject* userData = NULL)
void wxSizer_AddSizer()
{
    // wxObject* userData = NULL
    wxObject *userData = (wArgCount > 4 ? (wxObject *)wPopPointer( _wxObject) : NULL);
    // int border = 0
    int border = (wArgCount > 3 ? (int)wPopNumber() : 0);
    // int flag = 0
    int flag = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // int option = 0
    int option = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxSizer* sizer
    wxSizer *sizer = (wxSizer *)wPopPointer( _wxSizer);
    
    // call Add
    ((wxSizer *)wMe)->Add(sizer, option, flag, border, userData);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Add(int width, int height, int option = 0, int flag = 0, int border = 0, wxObject* userData = NULL)
void wxSizer_Add()
{
    // wxObject* userData = NULL
    wxObject *userData = (wArgCount > 5 ? (wxObject *)wPopPointer( _wxObject) : NULL);
    // int border = 0
    int border = (wArgCount > 4 ? (int)wPopNumber() : 0);
    // int flag = 0
    int flag = (wArgCount > 3 ? (int)wPopNumber() : 0);
    // int option = 0
    int option = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call Add
    ((wxSizer *)wMe)->Add(width, height, option, flag, border, userData);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxSize CalcMin()
void wxSizer_CalcMin()
{
    wxSize *returns;
    
    // call CalcMin
    returns = &((wxSizer *)wMe)->CalcMin();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// void Fit(wxWindow* window)
void wxSizer_Fit()
{
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Fit
    ((wxSizer *)wMe)->Fit(window);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxSize GetSize()
void wxSizer_GetSize()
{
    wxSize *returns;
    
    // call GetSize
    returns = &((wxSizer *)wMe)->GetSize();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// wxPoint GetPosition()
void wxSizer_GetPosition()
{
    wxPoint *returns;
    
    // call GetPosition
    returns = &((wxSizer *)wMe)->GetPosition();

    wPushNumber( wAddObject( _wxPoint, (int)(&returns) ) );
}

// wxSize GetMinSize()
void wxSizer_GetMinSize()
{
    wxSize *returns;
    
    // call GetMinSize
    returns = &((wxSizer *)wMe)->GetMinSize();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// void Layout()
void wxSizer_Layout()
{
    
    // call Layout
    ((wxSizer *)wMe)->Layout();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename PrependWindow void Prepend(wxWindow* window, int option = 0, int flag = 0, int border = 0, wxObject* userData = NULL)
void wxSizer_PrependWindow()
{
    // wxObject* userData = NULL
    wxObject *userData = (wArgCount > 4 ? (wxObject *)wPopPointer( _wxObject) : NULL);
    // int border = 0
    int border = (wArgCount > 3 ? (int)wPopNumber() : 0);
    // int flag = 0
    int flag = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // int option = 0
    int option = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Prepend
    ((wxSizer *)wMe)->Prepend(window, option, flag, border, userData);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename PrependSizer void Prepend(wxSizer* sizer, int option = 0, int flag = 0, int border = 0, wxObject* userData = NULL)
void wxSizer_PrependSizer()
{
    // wxObject* userData = NULL
    wxObject *userData = (wArgCount > 4 ? (wxObject *)wPopPointer( _wxObject) : NULL);
    // int border = 0
    int border = (wArgCount > 3 ? (int)wPopNumber() : 0);
    // int flag = 0
    int flag = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // int option = 0
    int option = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxSizer* sizer
    wxSizer *sizer = (wxSizer *)wPopPointer( _wxSizer);
    
    // call Prepend
    ((wxSizer *)wMe)->Prepend(sizer, option, flag, border, userData);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Prepend(int width, int height, int option = 0, int flag = 0, int border= 0, wxObject* userData = NULL)
void wxSizer_Prepend()
{
    // wxObject* userData = NULL
    wxObject *userData = (wArgCount > 5 ? (wxObject *)wPopPointer( _wxObject) : NULL);
    // int border= 0
    int border = (wArgCount > 4 ? (int)wPopNumber() : 0);
    // int flag = 0
    int flag = (wArgCount > 3 ? (int)wPopNumber() : 0);
    // int option = 0
    int option = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call Prepend
    ((wxSizer *)wMe)->Prepend(width, height, option, flag, border, userData);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void RecalcSizes()
void wxSizer_RecalcSizes()
{
    
    // call RecalcSizes
    ((wxSizer *)wMe)->RecalcSizes();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename RemoveWindow bool Remove(wxWindow* window)
void wxSizer_RemoveWindow()
{
    bool returns;
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Remove
    returns = ((wxSizer *)wMe)->Remove(window);

    wPushNumber( (wNumber)returns);
}

// %rename RemoveSizer bool Remove(wxSizer* sizer)
void wxSizer_RemoveSizer()
{
    bool returns;
    // wxSizer* sizer
    wxSizer *sizer = (wxSizer *)wPopPointer( _wxSizer);
    
    // call Remove
    returns = ((wxSizer *)wMe)->Remove(sizer);

    wPushNumber( (wNumber)returns);
}

// bool Remove(int nth)
void wxSizer_Remove()
{
    bool returns;
    // int nth
    int nth = (int)wPopNumber();
    
    // call Remove
    returns = ((wxSizer *)wMe)->Remove(nth);

    wPushNumber( (wNumber)returns);
}

// void SetDimension(int x, int y, int width, int height)
void wxSizer_SetDimension()
{
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    // int y
    int y = (int)wPopNumber();
    // int x
    int x = (int)wPopNumber();
    
    // call SetDimension
    ((wxSizer *)wMe)->SetDimension(x, y, width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetMinSize(int width, int height)
void wxSizer_SetMinSize()
{
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    
    // call SetMinSize
    ((wxSizer *)wMe)->SetMinSize(width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetWindowMinSize void SetItemMinSize(wxWindow* window, int width, int height)
void wxSizer_SetWindowMinSize()
{
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call SetItemMinSize
    ((wxSizer *)wMe)->SetItemMinSize(window, width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// %rename SetSizerMinSize void SetItemMinSize(wxSizer* sizer, int width, int height)
void wxSizer_SetSizerMinSize()
{
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    // wxSizer* sizer
    wxSizer *sizer = (wxSizer *)wPopPointer( _wxSizer);
    
    // call SetItemMinSize
    ((wxSizer *)wMe)->SetItemMinSize(sizer, width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetItemMinSize(int pos, int width, int height)
void wxSizer_SetItemMinSize()
{
    // int height
    int height = (int)wPopNumber();
    // int width
    int width = (int)wPopNumber();
    // int pos
    int pos = (int)wPopNumber();
    
    // call SetItemMinSize
    ((wxSizer *)wMe)->SetItemMinSize(pos, width, height);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetSizeHints(wxWindow* window)
void wxSizer_SetSizeHints()
{
    // wxWindow* window
    wxWindow *window = (wxWindow *)wPopPointer( _wxWindow);
    
    // call SetSizeHints
    ((wxSizer *)wMe)->SetSizeHints(window);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxGridSizer_del()
{
    delete (wxGridSizer *)wMe;
}

// wxGridSizer(int cols, int rows, int vgap, int hgap)
void wxGridSizer_new()
{
    wxGridSizer *returns;
    // int hgap
    int hgap = (int)wPopNumber();
    // int vgap
    int vgap = (int)wPopNumber();
    // int rows
    int rows = (int)wPopNumber();
    // int cols
    int cols = (int)wPopNumber();
    
    // call wxGridSizer
    returns = new wxGridSizer(cols, rows, vgap, hgap);

    wPushNumber( wAddObject( _wxGridSizer, (int)returns ) );
}


void wxFlexGridSizer_del()
{
    delete (wxFlexGridSizer *)wMe;
}

// wxFlexGridSizer(int rows, int cols, int vgap, int hgap)
void wxFlexGridSizer_new()
{
    wxFlexGridSizer *returns;
    // int hgap
    int hgap = (int)wPopNumber();
    // int vgap
    int vgap = (int)wPopNumber();
    // int cols
    int cols = (int)wPopNumber();
    // int rows
    int rows = (int)wPopNumber();
    
    // call wxFlexGridSizer
    returns = new wxFlexGridSizer(rows, cols, vgap, hgap);

    wPushNumber( wAddObject( _wxFlexGridSizer, (int)returns ) );
}


void wxBoxSizer_del()
{
    delete (wxBoxSizer *)wMe;
}

// wxBoxSizer(int orient)
void wxBoxSizer_new()
{
    wxBoxSizer *returns;
    // int orient
    int orient = (int)wPopNumber();
    
    // call wxBoxSizer
    returns = new wxBoxSizer(orient);

    wPushNumber( wAddObject( _wxBoxSizer, (int)returns ) );
}

// void RecalcSizes()
void wxBoxSizer_RecalcSizes()
{
    
    // call RecalcSizes
    ((wxBoxSizer *)wMe)->RecalcSizes();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wxSize CalcMin()
void wxBoxSizer_CalcMin()
{
    wxSize *returns;
    
    // call CalcMin
    returns = &((wxBoxSizer *)wMe)->CalcMin();

    wPushNumber( wAddObject( _wxSize, (int)(&returns) ) );
}

// int GetOrientation()
void wxBoxSizer_GetOrientation()
{
    int returns;
    
    // call GetOrientation
    returns = ((wxBoxSizer *)wMe)->GetOrientation();

    wPushNumber( (wNumber)returns);
}


void wxStaticBoxSizer_del()
{
    delete (wxStaticBoxSizer *)wMe;
}

// wxStaticBoxSizer(wxStaticBox* box, int orient)
void wxStaticBoxSizer_new()
{
    wxStaticBoxSizer *returns;
    // int orient
    int orient = (int)wPopNumber();
    // wxStaticBox* box
    wxStaticBox *box = (wxStaticBox *)wPopPointer( _wxStaticBox);
    
    // call wxStaticBoxSizer
    returns = new wxStaticBoxSizer(box, orient);

    wPushNumber( wAddObject( _wxStaticBoxSizer, (int)returns ) );
}

// wxStaticBox* GetStaticBox()
void wxStaticBoxSizer_GetStaticBox()
{
    wxStaticBox *returns;
    
    // call GetStaticBox
    returns = ((wxStaticBoxSizer *)wMe)->GetStaticBox();

    wPushNumber( wAddObject( _wxStaticBox, (int)returns ) );
}


void wxNotebookSizer_del()
{
    delete (wxNotebookSizer *)wMe;
}

// wxNotebookSizer(wxNotebook* notebook)
void wxNotebookSizer_new()
{
    wxNotebookSizer *returns;
    // wxNotebook* notebook
    wxNotebook *notebook = (wxNotebook *)wPopPointer( _wxNotebook);
    
    // call wxNotebookSizer
    returns = new wxNotebookSizer(notebook);

    wPushNumber( wAddObject( _wxNotebookSizer, (int)returns ) );
}

// wxNotebook* GetNotebook()
void wxNotebookSizer_GetNotebook()
{
    wxNotebook *returns;
    
    // call GetNotebook
    returns = ((wxNotebookSizer *)wMe)->GetNotebook();

    wPushNumber( wAddObject( _wxNotebook, (int)returns ) );
}


void wxIndividualLayoutConstraint_del()
{
    delete (wxIndividualLayoutConstraint *)wMe;
}

// wxIndividualLayoutConstraint()
void wxIndividualLayoutConstraint_new()
{
    wxIndividualLayoutConstraint *returns;
    
    // call wxIndividualLayoutConstraint
    returns = new wxIndividualLayoutConstraint();

    wPushNumber( wAddObject( _wxIndividualLayoutConstraint, (int)returns ) );
}

// void Above(wxWindow *otherWin, int margin = 0)
void wxIndividualLayoutConstraint_Above()
{
    // int margin = 0
    int margin = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxWindow *otherWin
    wxWindow *otherWin = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Above
    ((wxIndividualLayoutConstraint *)wMe)->Above(otherWin, margin);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Absolute(int value)
void wxIndividualLayoutConstraint_Absolute()
{
    // int value
    int value = (int)wPopNumber();
    
    // call Absolute
    ((wxIndividualLayoutConstraint *)wMe)->Absolute(value);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void AsIs()
void wxIndividualLayoutConstraint_AsIs()
{
    
    // call AsIs
    ((wxIndividualLayoutConstraint *)wMe)->AsIs();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Below(wxWindow *otherWin, int margin = 0)
void wxIndividualLayoutConstraint_Below()
{
    // int margin = 0
    int margin = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxWindow *otherWin
    wxWindow *otherWin = (wxWindow *)wPopPointer( _wxWindow);
    
    // call Below
    ((wxIndividualLayoutConstraint *)wMe)->Below(otherWin, margin);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Unconstrained()
void wxIndividualLayoutConstraint_Unconstrained()
{
    
    // call Unconstrained
    ((wxIndividualLayoutConstraint *)wMe)->Unconstrained();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void LeftOf(wxWindow *otherWin, int margin = 0)
void wxIndividualLayoutConstraint_LeftOf()
{
    // int margin = 0
    int margin = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxWindow *otherWin
    wxWindow *otherWin = (wxWindow *)wPopPointer( _wxWindow);
    
    // call LeftOf
    ((wxIndividualLayoutConstraint *)wMe)->LeftOf(otherWin, margin);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void PercentOf(wxWindow *otherWin, wxEdge edge, int per)
void wxIndividualLayoutConstraint_PercentOf()
{
    // int per
    int per = (int)wPopNumber();
    // wxEdge edge
    wxEdge edge = (wxEdge)(int)wPopNumber();
    // wxWindow *otherWin
    wxWindow *otherWin = (wxWindow *)wPopPointer( _wxWindow);
    
    // call PercentOf
    ((wxIndividualLayoutConstraint *)wMe)->PercentOf(otherWin, (wxEdge)edge, per);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void RightOf(wxWindow *otherWin, int margin = 0)
void wxIndividualLayoutConstraint_RightOf()
{
    // int margin = 0
    int margin = (wArgCount > 1 ? (int)wPopNumber() : 0);
    // wxWindow *otherWin
    wxWindow *otherWin = (wxWindow *)wPopPointer( _wxWindow);
    
    // call RightOf
    ((wxIndividualLayoutConstraint *)wMe)->RightOf(otherWin, margin);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SameAs(wxWindow *otherWin, wxEdge edge, int margin = 0)
void wxIndividualLayoutConstraint_SameAs()
{
    // int margin = 0
    int margin = (wArgCount > 2 ? (int)wPopNumber() : 0);
    // wxEdge edge
    wxEdge edge = (wxEdge)(int)wPopNumber();
    // wxWindow *otherWin
    wxWindow *otherWin = (wxWindow *)wPopPointer( _wxWindow);
    
    // call SameAs
    ((wxIndividualLayoutConstraint *)wMe)->SameAs(otherWin, (wxEdge)edge, margin);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void Set(wxRelationship rel, wxWindow *otherWin, wxEdge otherEdge, int value = 0, int margin = 0)
void wxIndividualLayoutConstraint_Set()
{
    // int margin = 0
    int margin = (wArgCount > 4 ? (int)wPopNumber() : 0);
    // int value = 0
    int value = (wArgCount > 3 ? (int)wPopNumber() : 0);
    // wxEdge otherEdge
    wxEdge otherEdge = (wxEdge)(int)wPopNumber();
    // wxWindow *otherWin
    wxWindow *otherWin = (wxWindow *)wPopPointer( _wxWindow);
    // wxRelationship rel
    wxRelationship rel = (wxRelationship)(int)wPopNumber();
    
    // call Set
    ((wxIndividualLayoutConstraint *)wMe)->Set((wxRelationship)rel, otherWin, (wxEdge)otherEdge, value, margin);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxLayoutConstraints_del()
{
    delete (wxLayoutConstraints *)wMe;
}

// wxLayoutConstraints()
void wxLayoutConstraints_new()
{
    wxLayoutConstraints *returns;
    
    // call wxLayoutConstraints
    returns = new wxLayoutConstraints();

    wPushNumber( wAddObject( _wxLayoutConstraints, (int)returns ) );
}


void wxFont_del()
{
    delete (wxFont *)wMe;
}

// wxFont(int pointSize, int family, int style, int weight, const bool underline = FALSE, const wxString& faceName = "", wxFontEncoding encoding = wxFONTENCODING_DEFAULT)
void wxFont_new()
{
    wxFont *returns;
    // wxFontEncoding encoding = wxFONTENCODING_DEFAULT
    wxFontEncoding encoding = (wArgCount > 6 ? (wxFontEncoding)(int)wPopNumber() : wxFONTENCODING_DEFAULT);
    // const wxString& faceName = ""
    wxString faceName = (wArgCount > 5 ? wPopString() : "");
    // const bool underline = FALSE
    const bool underline = (wArgCount > 4 ? (bool)wPopNumber() : FALSE);
    // int weight
    int weight = (int)wPopNumber();
    // int style
    int style = (int)wPopNumber();
    // int family
    int family = (int)wPopNumber();
    // int pointSize
    int pointSize = (int)wPopNumber();
    
    // call wxFont
    returns = new wxFont(pointSize, family, style, weight, underline, faceName, (wxFontEncoding)encoding);

    wPushNumber( wAddObject( _wxFont, (int)returns ) );
}

// ~wxFont()
void wxFont_dtor()
{
    
    // call ~wxFont
    ((wxFont *)wMe)->~wxFont();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// static wxFontEncoding GetDefaultEncoding()
void wxFont_GetDefaultEncoding()
{
    wxFontEncoding returns;
    
    // call GetDefaultEncoding
    returns = ((wxFont *)wMe)->GetDefaultEncoding();

    wPushNumber( (wNumber)returns);
}

// wxString GetFaceName() const
void wxFont_GetFaceName()
{
    wxString returns;
    
    // call GetFaceName
    returns = ((wxFont *)wMe)->GetFaceName();

    wPushString( (char *)(returns.c_str()) );
}

// int GetFamily() const
void wxFont_GetFamily()
{
    int returns;
    
    // call GetFamily
    returns = ((wxFont *)wMe)->GetFamily();

    wPushNumber( (wNumber)returns);
}

// int GetPointSize() const
void wxFont_GetPointSize()
{
    int returns;
    
    // call GetPointSize
    returns = ((wxFont *)wMe)->GetPointSize();

    wPushNumber( (wNumber)returns);
}

// int GetStyle() const
void wxFont_GetStyle()
{
    int returns;
    
    // call GetStyle
    returns = ((wxFont *)wMe)->GetStyle();

    wPushNumber( (wNumber)returns);
}

// bool GetUnderlined() const
void wxFont_GetUnderlined()
{
    bool returns;
    
    // call GetUnderlined
    returns = ((wxFont *)wMe)->GetUnderlined();

    wPushNumber( (wNumber)returns);
}

// int GetWeight() const
void wxFont_GetWeight()
{
    int returns;
    
    // call GetWeight
    returns = ((wxFont *)wMe)->GetWeight();

    wPushNumber( (wNumber)returns);
}

// static void SetDefaultEncoding(wxFontEncoding encoding)
void wxFont_SetDefaultEncoding()
{
    // wxFontEncoding encoding
    wxFontEncoding encoding = (wxFontEncoding)(int)wPopNumber();
    
    // call SetDefaultEncoding
    ((wxFont *)wMe)->SetDefaultEncoding((wxFontEncoding)encoding);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetFaceName(const wxString& faceName)
void wxFont_SetFaceName()
{
    // const wxString& faceName
    wxString faceName = wPopString();
    
    // call SetFaceName
    ((wxFont *)wMe)->SetFaceName(faceName);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetFamily(int family)
void wxFont_SetFamily()
{
    // int family
    int family = (int)wPopNumber();
    
    // call SetFamily
    ((wxFont *)wMe)->SetFamily(family);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetPointSize(int pointSize)
void wxFont_SetPointSize()
{
    // int pointSize
    int pointSize = (int)wPopNumber();
    
    // call SetPointSize
    ((wxFont *)wMe)->SetPointSize(pointSize);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetStyle(int style)
void wxFont_SetStyle()
{
    // int style
    int style = (int)wPopNumber();
    
    // call SetStyle
    ((wxFont *)wMe)->SetStyle(style);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetUnderlined(const bool underlined)
void wxFont_SetUnderlined()
{
    // const bool underlined
    bool underlined = (bool)wPopNumber();
    
    // call SetUnderlined
    ((wxFont *)wMe)->SetUnderlined(underlined);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetWeight(int weight)
void wxFont_SetWeight()
{
    // int weight
    int weight = (int)wPopNumber();
    
    // call SetWeight
    ((wxFont *)wMe)->SetWeight(weight);

    // result is ignored
    wPushNumber( (wNumber)0 );
}


void wxTimer_del()
{
    delete (wxTimer *)wMe;
}

// wxTimer(wxEvtHandler *owner, int id = -1)
void wxTimer_new()
{
    wxTimer *returns;
    // int id = -1
    int id = (wArgCount > 1 ? (int)wPopNumber() : -1);
    // wxEvtHandler *owner
    wxEvtHandler *owner = (wxEvtHandler *)wPopPointer( _wxEvtHandler);
    
    // call wxTimer
    returns = new wxTimer(owner, id);

    wPushNumber( wAddObject( _wxTimer, (int)returns ) );
}

// ~wxTimer()
void wxTimer_dtor()
{
    
    // call ~wxTimer
    ((wxTimer *)wMe)->~wxTimer();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool IsOneShot() const
void wxTimer_IsOneShot()
{
    bool returns;
    
    // call IsOneShot
    returns = ((wxTimer *)wMe)->IsOneShot();

    wPushNumber( (wNumber)returns);
}

// bool IsRunning() const
void wxTimer_IsRunning()
{
    bool returns;
    
    // call IsRunning
    returns = ((wxTimer *)wMe)->IsRunning();

    wPushNumber( (wNumber)returns);
}

// void Notify()
void wxTimer_Notify()
{
    
    // call Notify
    ((wxTimer *)wMe)->Notify();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// void SetOwner(wxEvtHandler *owner, int id = -1)
void wxTimer_SetOwner()
{
    // int id = -1
    int id = (wArgCount > 1 ? (int)wPopNumber() : -1);
    // wxEvtHandler *owner
    wxEvtHandler *owner = (wxEvtHandler *)wPopPointer( _wxEvtHandler);
    
    // call SetOwner
    ((wxTimer *)wMe)->SetOwner(owner, id);

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// bool Start(int milliseconds = -1, bool oneShot=FALSE)
void wxTimer_Start()
{
    bool returns;
    // bool oneShot=FALSE
    bool oneShot = (wArgCount > 1 ? (bool)wPopNumber() : FALSE);
    // int milliseconds = -1
    int milliseconds = (wArgCount > 0 ? (int)wPopNumber() : -1);
    
    // call Start
    returns = ((wxTimer *)wMe)->Start(milliseconds, oneShot);

    wPushNumber( (wNumber)returns);
}

// void Stop()
void wxTimer_Stop()
{
    
    // call Stop
    ((wxTimer *)wMe)->Stop();

    // result is ignored
    wPushNumber( (wNumber)0 );
}

// wInitWrappers: link methods to classes
void wInitWrappers()
{
    wAddMethod( _wxAcceleratorTable, "del", wxAcceleratorTable_del, 0, 0 );
    wAddMethod( _wxArrayInt, "del", wxArrayInt_del, 0, 0 );
    wAddMethod( _wxArrayTreeItemIds, "del", wxArrayTreeItemIds_del, 0, 0 );
    wAddMethod( _wxCalendarDateAttr, "del", wxCalendarDateAttr_del, 0, 0 );
    wAddMethod( _wxCaret, "del", wxCaret_del, 0, 0 );
    wAddMethod( _wxClassInfo, "del", wxClassInfo_del, 0, 0 );
    wAddMethod( _wxDateTime, "del", wxDateTime_del, 0, 0 );
    wAddMethod( _wxDropTarget, "del", wxDropTarget_del, 0, 0 );
    wAddMethod( _wxFontData, "del", wxFontData_del, 0, 0 );
    wAddMethod( _wxIcon, "del", wxIcon_del, 0, 0 );
    wAddMethod( _wxImageList, "del", wxImageList_del, 0, 0 );
    wAddMethod( _wxListItem, "del", wxListItem_del, 0, 0 );
    wAddMethod( _wxLog, "del", wxLog_del, 0, 0 );
    wAddMethod( _wxMDIClientWindow, "del", wxMDIClientWindow_del, 0, 0 );
    wAddMethod( _wxMenuItemList, "del", wxMenuItemList_del, 0, 0 );
    wAddMethod( _wxObjectRefData, "del", wxObjectRefData_del, 0, 0 );
    wAddMethod( _wxPrintDialogData, "del", wxPrintDialogData_del, 0, 0 );
    wAddMethod( _wxRegion, "del", wxRegion_del, 0, 0 );
    wAddMethod( _wxRect, "del", wxRect_del, 0, 0 );
    wAddMethod( _wxPageSetupDialogData, "del", wxPageSetupDialogData_del, 0, 0 );
    wAddMethod( _wxSocketBase, "del", wxSocketBase_del, 0, 0 );
    wAddMethod( _wxToolTip, "del", wxToolTip_del, 0, 0 );
    wAddMethod( _wxTreeItemData, "del", wxTreeItemData_del, 0, 0 );
    wAddMethod( _wxTreeItemId, "del", wxTreeItemId_del, 0, 0 );
    wAddMethod( _wxValidator, "del", wxValidator_del, 0, 0 );
    wAddMethod( _wxWindowList, "del", wxWindowList_del, 0, 0 );
    wAddMethod( _wxList, "del", wxList_del, 0, 0 );
    wAddMethod( _wxPrintData, "del", wxPrintData_del, 0, 0 );
    wAddMethod( _wxMask, "del", wxMask_del, 0, 0 );
    wAddMethod( _wxProcess, "del", wxProcess_del, 0, 0 );
    wAddMethod( _wxImageHandler, "del", wxImageHandler_del, 0, 0 );
    wAddMethod( _wxGridTableBase, "del", wxGridTableBase_del, 0, 0 );
    wAddBuiltin( "wxMessageBox", builtin_wxMessageBox,  1,  6 );
    wAddBuiltin( "wxNewId", builtin_wxNewId,  0,  0 );
    wAddBuiltin( "wxRegisterId", builtin_wxRegisterId,  1,  1 );
    wAddBuiltin( "wxBeginBusyCursor", builtin_wxBeginBusyCursor,  0,  1 );
    wAddBuiltin( "wxBell", builtin_wxBell,  0,  0 );
    wAddBuiltin( "wxCreateDynamicObject", builtin_wxCreateDynamicObject,  1,  1 );
    wAddBuiltin( "wxDisplaySize", builtin_wxDisplaySize,  2,  2 );
    wAddBuiltin( "wxEnableTopLevelWindows", builtin_wxEnableTopLevelWindows,  0,  1 );
    wAddBuiltin( "wxEndBusyCursor", builtin_wxEndBusyCursor,  0,  0 );
    wAddBuiltin( "wxError", builtin_wxError,  1,  2 );
    wAddBuiltin( "wxExecute", builtin_wxExecute,  1,  3 );
    wAddBuiltin( "wxExit", builtin_wxExit,  0,  0 );
    wAddBuiltin( "wxFatalError", builtin_wxFatalError,  1,  2 );
    wAddBuiltin( "wxFindMenuItemId", builtin_wxFindMenuItemId,  3,  3 );
    wAddBuiltin( "wxFindWindowByLabel", builtin_wxFindWindowByLabel,  1,  2 );
    wAddBuiltin( "wxFindWindowByName", builtin_wxFindWindowByName,  1,  2 );
    wAddBuiltin( "wxFindWindowAtPoint", builtin_wxFindWindowAtPoint,  1,  1 );
    wAddBuiltin( "wxFindWindowAtPointer", builtin_wxFindWindowAtPointer,  1,  1 );
    wAddBuiltin( "wxGetHomeDir", builtin_wxGetHomeDir,  0,  0 );
    wAddBuiltin( "wxGetMousePosition", builtin_wxGetMousePosition,  0,  0 );
    wAddBuiltin( "wxGetOsDescription", builtin_wxGetOsDescription,  0,  0 );
    wAddBuiltin( "wxGetOsVersion", builtin_wxGetOsVersion,  0,  2 );
    wAddBuiltin( "wxHandleFatalExceptions", builtin_wxHandleFatalExceptions,  0,  1 );
    wAddBuiltin( "wxIsBusy", builtin_wxIsBusy,  0,  0 );
    wAddBuiltin( "wxNow", builtin_wxNow,  0,  0 );
    wAddBuiltin( "wxPostEvent", builtin_wxPostEvent,  2,  2 );
    wAddBuiltin( "wxSafeYield", builtin_wxSafeYield,  0,  1 );
    wAddBuiltin( "wxShell", builtin_wxShell,  0,  1 );
    wAddBuiltin( "wxSleep", builtin_wxSleep,  1,  1 );
    wAddBuiltin( "wxTrap", builtin_wxTrap,  0,  0 );
    wAddBuiltin( "wxUsleep", builtin_wxUsleep,  1,  1 );
    wAddBuiltin( "wxYield", builtin_wxYield,  0,  0 );
    wAddBuiltin( "wxWakeUpIdle", builtin_wxWakeUpIdle,  0,  0 );
    wAddBuiltin( "builtin_getEnvValue", builtin_builtin_getEnvValue,  1,  1 );
    wAddBuiltin( "wxGetEnvValue", builtin_builtin_getEnvValue,  1,  1 );
    wAddBuiltin( "wxSetEnv", builtin_wxSetEnv,  2,  2 );
    wAddBuiltin( "wxUnsetEnv", builtin_wxUnsetEnv,  1,  1 );
    wAddMethod( _wxPoint, "del", wxPoint_del, 0, 0 );
    wAddMethod( _wxPoint, "new", wxPoint_new,  2,  2 );
    wAddMethod( _wxPoint, "dtor", wxPoint_dtor,  0,  0 );
    wAddMethod( _wxSize, "del", wxSize_del, 0, 0 );
    wAddMethod( _wxSize, "new", wxSize_new,  2,  2 );
    wAddMethod( _wxSize, "dtor", wxSize_dtor,  0,  0 );
    wAddMethod( _wxSize, "GetWidth", wxSize_GetWidth,  0,  0 );
    wAddMethod( _wxSize, "GetHeight", wxSize_GetHeight,  0,  0 );
    wAddMethod( _wxSize, "Set", wxSize_Set,  2,  2 );
    wAddMethod( _wxSize, "SetHeight", wxSize_SetHeight,  1,  1 );
    wAddMethod( _wxSize, "SetWidth", wxSize_SetWidth,  1,  1 );
    wAddMethod( _wxObject, "del", wxObject_del, 0, 0 );
    wAddMethod( _wxObject, "new", wxObject_new,  0,  0 );
    wAddMethod( _wxObject, "dtor", wxObject_dtor,  0,  0 );
    wAddMethod( _wxObject, "GetClassInfo", wxObject_GetClassInfo,  0,  0 );
    wAddMethod( _wxObject, "GetRefData", wxObject_GetRefData,  0,  0 );
    wAddMethod( _wxObject, "IsKindOf", wxObject_IsKindOf,  1,  1 );
    wAddMethod( _wxObject, "Ref", wxObject_Ref,  1,  1 );
    wAddMethod( _wxObject, "SetRefData", wxObject_SetRefData,  1,  1 );
    wAddMethod( _wxObject, "UnRef", wxObject_UnRef,  0,  0 );
    wAddMethod( _wxColourData, "del", wxColourData_del, 0, 0 );
    wAddMethod( _wxColourData, "new", wxColourData_new,  0,  0 );
    wAddMethod( _wxColourData, "wxColorData", wxColourData_new,  0,  0 );
    wAddMethod( _wxColourData, "dtor", wxColourData_dtor,  0,  0 );
    wAddMethod( _wxColourData, "GetChooseFull", wxColourData_GetChooseFull,  0,  0 );
    wAddMethod( _wxColourData, "GetColour", wxColourData_GetColour,  0,  0 );
    wAddMethod( _wxColourData, "GetColor", wxColourData_GetColour,  0,  0 );
    wAddMethod( _wxColourData, "GetCustomColour", wxColourData_GetCustomColour,  1,  1 );
    wAddMethod( _wxColourData, "GetCustomColor", wxColourData_GetCustomColour,  1,  1 );
    wAddMethod( _wxColourData, "SetChooseFull", wxColourData_SetChooseFull,  1,  1 );
    wAddMethod( _wxColourData, "SetColour", wxColourData_SetColour,  1,  1 );
    wAddMethod( _wxColourData, "SetColor", wxColourData_SetColour,  1,  1 );
    wAddMethod( _wxColourData, "SetCustomColour", wxColourData_SetCustomColour,  2,  2 );
    wAddMethod( _wxColourData, "SetCustomColor", wxColourData_SetCustomColour,  2,  2 );
    wAddMethod( _wxColour, "del", wxColour_del, 0, 0 );
    wAddMethod( _wxColour, "new", wxColour_new,  3,  3 );
    wAddMethod( _wxColour, "Blue", wxColour_Blue,  0,  0 );
    wAddMethod( _wxColour, "GetPixel", wxColour_GetPixel,  0,  0 );
    wAddMethod( _wxColour, "Green", wxColour_Green,  0,  0 );
    wAddMethod( _wxColour, "Ok", wxColour_Ok,  0,  0 );
    wAddMethod( _wxColour, "Red", wxColour_Red,  0,  0 );
    wAddMethod( _wxColour, "Set", wxColour_Set,  3,  3 );
    wAddMethod( _wxGDIObject, "del", wxGDIObject_del, 0, 0 );
    wAddMethod( _wxGDIObject, "new", wxGDIObject_new,  0,  0 );
    wAddMethod( _wxPen, "del", wxPen_del, 0, 0 );
    wAddMethod( _wxPen, "new", wxPen_new,  0,  0 );
    wAddMethod( _wxPen, "dtor", wxPen_dtor,  0,  0 );
    wAddMethod( _wxPen, "GetCap", wxPen_GetCap,  0,  0 );
    wAddMethod( _wxPen, "GetColour", wxPen_GetColour,  0,  0 );
    wAddMethod( _wxPen, "GetJoin", wxPen_GetJoin,  0,  0 );
    wAddMethod( _wxPen, "GetStyle", wxPen_GetStyle,  0,  0 );
    wAddMethod( _wxPen, "GetWidth", wxPen_GetWidth,  0,  0 );
    wAddMethod( _wxPen, "Ok", wxPen_Ok,  0,  0 );
    wAddMethod( _wxPen, "SetCap", wxPen_SetCap,  1,  1 );
    wAddMethod( _wxPen, "SetColour", wxPen_SetColour,  1,  1 );
    wAddMethod( _wxPen, "SetColor", wxPen_SetColour,  1,  1 );
    wAddMethod( _wxPen, "SetColourString", wxPen_SetColourString,  1,  1 );
    wAddMethod( _wxPen, "SetColorString", wxPen_SetColourString,  1,  1 );
    wAddMethod( _wxPen, "SetColourRGB", wxPen_SetColourRGB,  3,  3 );
    wAddMethod( _wxPen, "SetColorRGB", wxPen_SetColourRGB,  3,  3 );
    wAddMethod( _wxPen, "SetJoin", wxPen_SetJoin,  1,  1 );
    wAddMethod( _wxPen, "SetStyle", wxPen_SetStyle,  1,  1 );
    wAddMethod( _wxPen, "SetWidth", wxPen_SetWidth,  1,  1 );
    wAddMethod( _wxPenFromColour, "new", wxPenFromColour_new,  3,  3 );
    wAddMethod( _wxPenFromColor, "new", wxPenFromColor_new,  3,  3 );
    wAddMethod( _wxPenFromColourName, "new", wxPenFromColourName_new,  3,  3 );
    wAddMethod( _wxPenFromColorName, "new", wxPenFromColorName_new,  3,  3 );
    wAddMethod( _wxPenCopy, "new", wxPenCopy_new,  1,  1 );
    wAddMethod( _wxPalette, "del", wxPalette_del, 0, 0 );
    wAddMethod( _wxPalette, "new", wxPalette_new,  4,  4 );
    wAddMethod( _wxPalette, "dtor", wxPalette_dtor,  0,  0 );
    wAddMethod( _wxPalette, "Create", wxPalette_Create,  4,  4 );
    wAddMethod( _wxPalette, "GetPixel", wxPalette_GetPixel,  3,  3 );
    wAddMethod( _wxPalette, "Ok", wxPalette_Ok,  0,  0 );
    wAddMethod( _wxBrush, "del", wxBrush_del, 0, 0 );
    wAddMethod( _wxBrush, "new", wxBrush_new,  2,  2 );
    wAddMethod( _wxBrushFromColourName, "new", wxBrushFromColourName_new,  2,  2 );
    wAddMethod( _wxBrushFromColorName, "new", wxBrushFromColorName_new,  2,  2 );
    wAddMethod( _wxBrushFromBitmap, "new", wxBrushFromBitmap_new,  1,  1 );
    wAddMethod( _Copy, "new", Copy_new,  1,  1 );
    wAddMethod( _wxBrush, "dtor", wxBrush_dtor,  0,  0 );
    wAddMethod( _wxBrush, "GetColour", wxBrush_GetColour,  0,  0 );
    wAddMethod( _wxBrush, "GetColor", wxBrush_GetColour,  0,  0 );
    wAddMethod( _wxBrush, "GetStipple", wxBrush_GetStipple,  0,  0 );
    wAddMethod( _wxBrush, "GetStyle", wxBrush_GetStyle,  0,  0 );
    wAddMethod( _wxBrush, "Ok", wxBrush_Ok,  0,  0 );
    wAddMethod( _wxBrush, "SetColour", wxBrush_SetColour,  1,  1 );
    wAddMethod( _wxBrush, "SetColor", wxBrush_SetColour,  1,  1 );
    wAddMethod( _wxBrush, "SetColourString", wxBrush_SetColourString,  1,  1 );
    wAddMethod( _wxBrush, "SetColorString", wxBrush_SetColourString,  1,  1 );
    wAddMethod( _wxBrush, "SetColourRGB", wxBrush_SetColourRGB,  3,  3 );
    wAddMethod( _wxBrush, "SetColorRGB", wxBrush_SetColourRGB,  3,  3 );
    wAddMethod( _wxBrush, "SetStipple", wxBrush_SetStipple,  1,  1 );
    wAddMethod( _wxBrush, "SetStyle", wxBrush_SetStyle,  1,  1 );
    wAddMethod( _wxBrushList, "del", wxBrushList_del, 0, 0 );
    wAddMethod( _wxBrushList, "new", wxBrushList_new,  0,  0 );
    wAddMethod( _wxBrushList, "FindOrCreateBrush", wxBrushList_FindOrCreateBrush,  2,  2 );
    wAddMethod( _wxDC, "del", wxDC_del, 0, 0 );
    wAddMethod( _wxDC, "dtor", wxDC_dtor,  0,  0 );
    wAddMethod( _wxDC, "BeginDrawing", wxDC_BeginDrawing,  0,  0 );
    wAddMethod( _wxDC, "Blit", wxDC_Blit,  7,  9 );
    wAddMethod( _wxDC, "CalcBoundingBox", wxDC_CalcBoundingBox,  2,  2 );
    wAddMethod( _wxDC, "Clear", wxDC_Clear,  0,  0 );
    wAddMethod( _wxDC, "CrossHair", wxDC_CrossHair,  2,  2 );
    wAddMethod( _wxDC, "DestroyClippingRegion", wxDC_DestroyClippingRegion,  0,  0 );
    wAddMethod( _wxDC, "DeviceToLogicalX", wxDC_DeviceToLogicalX,  1,  1 );
    wAddMethod( _wxDC, "DeviceToLogicalXRel", wxDC_DeviceToLogicalXRel,  1,  1 );
    wAddMethod( _wxDC, "DeviceToLogicalY", wxDC_DeviceToLogicalY,  1,  1 );
    wAddMethod( _wxDC, "DeviceToLogicalYRel", wxDC_DeviceToLogicalYRel,  1,  1 );
    wAddMethod( _wxDC, "DrawArc", wxDC_DrawArc,  6,  6 );
    wAddMethod( _wxDC, "DrawBitmap", wxDC_DrawBitmap,  4,  4 );
    wAddMethod( _wxDC, "DrawCheckMark", wxDC_DrawCheckMark,  4,  4 );
    wAddMethod( _wxDC, "DrawCheckMarkRect", wxDC_DrawCheckMarkRect,  1,  1 );
    wAddMethod( _wxDC, "DrawEllipse", wxDC_DrawEllipse,  4,  4 );
    wAddMethod( _wxDC, "DrawEllipticArc", wxDC_DrawEllipticArc,  6,  6 );
    wAddMethod( _wxDC, "DrawIcon", wxDC_DrawIcon,  3,  3 );
    wAddMethod( _wxDC, "DrawLine", wxDC_DrawLine,  4,  4 );
    wAddMethod( _wxDC, "DrawLines", wxDC_DrawLines,  2,  4 );
    wAddMethod( _wxDC, "DrawLinesList", wxDC_DrawLinesList,  1,  3 );
    wAddMethod( _wxDC, "DrawPolygon", wxDC_DrawPolygon,  2,  5 );
    wAddMethod( _wxDC, "DrawPolygonList", wxDC_DrawPolygonList,  1,  4 );
    wAddMethod( _wxDC, "DrawPoint", wxDC_DrawPoint,  2,  2 );
    wAddMethod( _wxDC, "DrawRectangle", wxDC_DrawRectangle,  4,  4 );
    wAddMethod( _wxDC, "DrawRotatedText", wxDC_DrawRotatedText,  4,  4 );
    wAddMethod( _wxDC, "DrawRoundedRectangle", wxDC_DrawRoundedRectangle,  4,  5 );
    wAddMethod( _wxDC, "DrawText", wxDC_DrawText,  3,  3 );
    wAddMethod( _wxDC, "EndDoc", wxDC_EndDoc,  0,  0 );
    wAddMethod( _wxDC, "EndDrawing", wxDC_EndDrawing,  0,  0 );
    wAddMethod( _wxDC, "EndPage", wxDC_EndPage,  0,  0 );
    wAddMethod( _wxDC, "FloodFill", wxDC_FloodFill,  3,  4 );
    wAddMethod( _wxDC, "GetBackground", wxDC_GetBackground,  0,  0 );
    wAddMethod( _wxDC, "GetBackgroundMode", wxDC_GetBackgroundMode,  0,  0 );
    wAddMethod( _wxDC, "GetBrush", wxDC_GetBrush,  0,  0 );
    wAddMethod( _wxDC, "GetCharHeight", wxDC_GetCharHeight,  0,  0 );
    wAddMethod( _wxDC, "GetCharWidth", wxDC_GetCharWidth,  0,  0 );
    wAddMethod( _wxDC, "GetPixelBoxX", wxDC_GetClippingBoxX,  0 , 0 );
    wAddMethod( _wxDC, "GetPixelBoxY", wxDC_GetClippingBoxY,  0 , 0 );
    wAddMethod( _wxDC, "GetPixelBoxWidth", wxDC_GetClippingBoxWidth,  0 , 0 );
    wAddMethod( _wxDC, "GetPixelBoxHeight", wxDC_GetClippingBoxHeight,  0 , 0 );
    wAddMethod( _wxDC, "GetFont", wxDC_GetFont,  0,  0 );
    wAddMethod( _wxDC, "GetLogicalFunction", wxDC_GetLogicalFunction,  0,  0 );
    wAddMethod( _wxDC, "GetMapMode", wxDC_GetMapMode,  0,  0 );
    wAddMethod( _wxDC, "GetOptimization", wxDC_GetOptimization,  0,  0 );
    wAddMethod( _wxDC, "GetPen", wxDC_GetPen,  0,  0 );
    wAddMethod( _wxDC, "GetPixel", wxDC_GetPixel,  3,  3 );
    wAddMethod( _wxDC, "GetSizeX", wxDC_GetSizeX,  0 , 0 );
    wAddMethod( _wxDC, "GetSizeY", wxDC_GetSizeY,  0 , 0 );
    wAddMethod( _wxDC, "GetTextBackground", wxDC_GetTextBackground,  0,  0 );
    wAddMethod( _wxDC, "GetTextExtent", wxDC_GetTextExtent,  3,  6 );
    wAddMethod( _wxDC, "GetTextForeground", wxDC_GetTextForeground,  0,  0 );
    wAddMethod( _wxDC, "GetUserScaleX", wxDC_GetUserScaleX,  0 , 0 );
    wAddMethod( _wxDC, "GetUserScaleY", wxDC_GetUserScaleY,  0 , 0 );
    wAddMethod( _wxDC, "LogicalToDeviceX", wxDC_LogicalToDeviceX,  1,  1 );
    wAddMethod( _wxDC, "LogicalToDeviceXRel", wxDC_LogicalToDeviceXRel,  1,  1 );
    wAddMethod( _wxDC, "LogicalToDeviceY", wxDC_LogicalToDeviceY,  1,  1 );
    wAddMethod( _wxDC, "LogicalToDeviceYRel", wxDC_LogicalToDeviceYRel,  1,  1 );
    wAddMethod( _wxDC, "MaxX", wxDC_MaxX,  0,  0 );
    wAddMethod( _wxDC, "MaxY", wxDC_MaxY,  0,  0 );
    wAddMethod( _wxDC, "MinX", wxDC_MinX,  0,  0 );
    wAddMethod( _wxDC, "MinY", wxDC_MinY,  0,  0 );
    wAddMethod( _wxDC, "Ok", wxDC_Ok,  0,  0 );
    wAddMethod( _wxDC, "ResetBoundingBox", wxDC_ResetBoundingBox,  0,  0 );
    wAddMethod( _wxDC, "SetDeviceOrigin", wxDC_SetDeviceOrigin,  2,  2 );
    wAddMethod( _wxDC, "SetBackground", wxDC_SetBackground,  1,  1 );
    wAddMethod( _wxDC, "SetBackgroundMode", wxDC_SetBackgroundMode,  1,  1 );
    wAddMethod( _wxDC, "SetClippingRegionXY", wxDC_SetClippingRegionXY,  4,  4 );
    wAddMethod( _wxDC, "SetClippingRegion", wxDC_SetClippingRegion,  1,  1 );
    wAddMethod( _wxDC, "SetPalette", wxDC_SetPalette,  1,  1 );
    wAddMethod( _wxDC, "SetBrush", wxDC_SetBrush,  1,  1 );
    wAddMethod( _wxDC, "SetFont", wxDC_SetFont,  1,  1 );
    wAddMethod( _wxDC, "SetOptimization", wxDC_SetOptimization,  1,  1 );
    wAddMethod( _wxDC, "SetPen", wxDC_SetPen,  1,  1 );
    wAddMethod( _wxDC, "SetTextBackground", wxDC_SetTextBackground,  1,  1 );
    wAddMethod( _wxDC, "SetTextForeground", wxDC_SetTextForeground,  1,  1 );
    wAddMethod( _wxDC, "SetUserScale", wxDC_SetUserScale,  2,  2 );
    wAddMethod( _wxDC, "StartDoc", wxDC_StartDoc,  1,  1 );
    wAddMethod( _wxDC, "StartPage", wxDC_StartPage,  0,  0 );
    wAddMethod( _wxMemoryDC, "del", wxMemoryDC_del, 0, 0 );
    wAddMethod( _wxMemoryDC, "new", wxMemoryDC_new,  0,  0 );
    wAddMethod( _wxMemoryDC, "SelectObject", wxMemoryDC_SelectObject,  1,  1 );
    wAddMethod( _wxWindowDC, "del", wxWindowDC_del, 0, 0 );
    wAddMethod( _wxWindowDC, "new", wxWindowDC_new,  1,  1 );
    wAddMethod( _wxClientDC, "del", wxClientDC_del, 0, 0 );
    wAddMethod( _wxClientDC, "new", wxClientDC_new,  1,  1 );
    wAddMethod( _wxPaintDC, "del", wxPaintDC_del, 0, 0 );
    wAddMethod( _wxPaintDC, "new", wxPaintDC_new,  1,  1 );
    wAddMethod( _wxScreenDC, "del", wxScreenDC_del, 0, 0 );
    wAddMethod( _wxScreenDC, "new", wxScreenDC_new,  0,  0 );
    wAddMethod( _wxScreenDC, "StartDrawingOnTop", wxScreenDC_StartDrawingOnTop,  1,  1 );
    wAddMethod( _wxScreenDC, "StartDrawingOnTopRect", wxScreenDC_StartDrawingOnTopRect,  0,  1 );
    wAddMethod( _wxScreenDC, "EndDrawingOnTop", wxScreenDC_EndDrawingOnTop,  0,  0 );
    wAddMethod( _wxBitmap, "del", wxBitmap_del, 0, 0 );
    wAddMethod( _wxBitmapCopy, "new", wxBitmapCopy_new,  1,  1 );
    wAddMethod( _wxEmptyBitmap, "new", wxEmptyBitmap_new,  2,  3 );
    wAddMethod( _wxBitmap, "dtor", wxBitmap_dtor,  0,  0 );
    wAddMethod( _wxBitmap, "Create", wxBitmap_Create,  2,  3 );
    wAddMethod( _wxBitmap, "GetDepth", wxBitmap_GetDepth,  0,  0 );
    wAddMethod( _wxBitmap, "GetHeight", wxBitmap_GetHeight,  0,  0 );
    wAddMethod( _wxBitmap, "GetPalette", wxBitmap_GetPalette,  0,  0 );
    wAddMethod( _wxBitmap, "GetMask", wxBitmap_GetMask,  0,  0 );
    wAddMethod( _wxBitmap, "GetWidth", wxBitmap_GetWidth,  0,  0 );
    wAddMethod( _wxBitmap, "GetSubBitmap", wxBitmap_GetSubBitmap,  1,  1 );
    wAddMethod( _wxBitmap, "LoadFile", wxBitmap_LoadFile,  2,  2 );
    wAddMethod( _wxBitmap, "Ok", wxBitmap_Ok,  0,  0 );
    wAddMethod( _wxBitmap, "SaveFile", wxBitmap_SaveFile,  2,  3 );
    wAddMethod( _wxBitmap, "SetDepth", wxBitmap_SetDepth,  1,  1 );
    wAddMethod( _wxBitmap, "SetHeight", wxBitmap_SetHeight,  1,  1 );
    wAddMethod( _wxBitmap, "SetMask", wxBitmap_SetMask,  1,  1 );
    wAddMethod( _wxBitmap, "SetWidth", wxBitmap_SetWidth,  1,  1 );
    wAddMethod( _wxImage, "del", wxImage_del, 0, 0 );
    wAddMethod( _wxImage, "new", wxImage_new,  1,  1 );
    wAddMethod( _wxNullImage, "new", wxNullImage_new,  0,  0 );
    wAddMethod( _wxImageFromBitmap, "new", wxImageFromBitmap_new,  1,  1 );
    wAddMethod( _wxEmptyImage, "new", wxEmptyImage_new,  2,  2 );
    wAddMethod( _wxImageFromData, "new", wxImageFromData_new,  3,  4 );
    wAddMethod( _wxImageFromFile, "new", wxImageFromFile_new,  1,  2 );
    wAddMethod( _wxImage, "dtor", wxImage_dtor,  0,  0 );
    wAddMethod( _wxImage, "AddHandler", wxImage_AddHandler,  1,  1 );
    wAddMethod( _wxImage, "CleanUpHandlers", wxImage_CleanUpHandlers,  0,  0 );
    wAddMethod( _wxImage, "ConvertToBitmap", wxImage_ConvertToBitmap,  0,  0 );
    wAddMethod( _wxImage, "Copy", wxImage_Copy,  0,  0 );
    wAddMethod( _wxImage, "GetBlue", wxImage_GetBlue,  2,  2 );
    wAddMethod( _wxImage, "GetData", wxImage_GetData,  0,  0 );
    wAddMethod( _wxImage, "GetGreen", wxImage_GetGreen,  2,  2 );
    wAddMethod( _wxImage, "GetRed", wxImage_GetRed,  2,  2 );
    wAddMethod( _wxImage, "GetHandlers", wxImage_GetHandlers,  0,  0 );
    wAddMethod( _wxImage, "GetHeight", wxImage_GetHeight,  0,  0 );
    wAddMethod( _wxImage, "GetMaskBlue", wxImage_GetMaskBlue,  0,  0 );
    wAddMethod( _wxImage, "GetMaskGreen", wxImage_GetMaskGreen,  0,  0 );
    wAddMethod( _wxImage, "GetMaskRed", wxImage_GetMaskRed,  0,  0 );
    wAddMethod( _wxImage, "GetPalette", wxImage_GetPalette,  0,  0 );
    wAddMethod( _wxImage, "GetSubImage", wxImage_GetSubImage,  1,  1 );
    wAddMethod( _wxImage, "GetWidth", wxImage_GetWidth,  0,  0 );
    wAddMethod( _wxImage, "HasMask", wxImage_HasMask,  0,  0 );
    wAddMethod( _wxImage, "InitStandardHandlers", wxImage_InitStandardHandlers,  0,  0 );
    wAddMethod( _wxImage, "InsertHandler", wxImage_InsertHandler,  1,  1 );
    wAddMethod( _wxImage, "LoadFile", wxImage_LoadFile,  1,  2 );
    wAddMethod( _wxImage, "LoadMimeFile", wxImage_LoadMimeFile,  2,  2 );
    wAddMethod( _wxImage, "Ok", wxImage_Ok,  0,  0 );
    wAddMethod( _wxImage, "RemoveHandler", wxImage_RemoveHandler,  1,  1 );
    wAddMethod( _wxImage, "SaveFile", wxImage_SaveFile,  2,  2 );
    wAddMethod( _wxImage, "SaveMimeFile", wxImage_SaveMimeFile,  2,  2 );
    wAddMethod( _wxImage, "Mirror", wxImage_Mirror,  0,  1 );
    wAddMethod( _wxImage, "Replace", wxImage_Replace,  6,  6 );
    wAddMethod( _wxImage, "Rotate", wxImage_Rotate,  2,  4 );
    wAddMethod( _wxImage, "Rotate90", wxImage_Rotate90,  0,  1 );
    wAddMethod( _wxImage, "Scale", wxImage_Scale,  2,  2 );
    wAddMethod( _wxImage, "SetData", wxImage_SetData,  1,  1 );
    wAddMethod( _wxImage, "SetMask", wxImage_SetMask,  0,  1 );
    wAddMethod( _wxImage, "SetMaskColour", wxImage_SetMaskColour,  3,  3 );
    wAddMethod( _wxImage, "SetPalette", wxImage_SetPalette,  1,  1 );
    wAddMethod( _wxImage, "SetRGB", wxImage_SetRGB,  5,  5 );
    wAddMethod( _wxCursor, "del", wxCursor_del, 0, 0 );
    wAddMethod( _wxEvtHandler, "del", wxEvtHandler_del, 0, 0 );
    wAddMethod( _wxEvtHandler, "new", wxEvtHandler_new,  0,  0 );
    wAddMethod( _wxEvtHandler, "dtor", wxEvtHandler_dtor,  0,  0 );
    wAddMethod( _wxApp, "del", wxApp_del, 0, 0 );
    wAddMethod( _wxApp, "CreateLogTarget", wxApp_CreateLogTarget,  0,  0 );
    wAddMethod( _wxApp, "Dispatch", wxApp_Dispatch,  0,  0 );
    wAddMethod( _wxApp, "GetAppName", wxApp_GetAppName,  0,  0 );
    wAddMethod( _wxApp, "GetClassName", wxApp_GetClassName,  0,  0 );
    wAddMethod( _wxApp, "GetTopWindow", wxApp_GetTopWindow,  0,  0 );
    wAddMethod( _wxApp, "GetUseBestVisual", wxApp_GetUseBestVisual,  0,  0 );
    wAddMethod( _wxApp, "GetVendorName", wxApp_GetVendorName,  0,  0 );
    wAddMethod( _wxApp, "ExitMainLoop", wxApp_ExitMainLoop,  0,  0 );
    wAddMethod( _wxApp, "Initialized", wxApp_Initialized,  0,  0 );
    wAddMethod( _wxApp, "MainLoop", wxApp_MainLoop,  0,  0 );
    wAddMethod( _wxApp, "Pending", wxApp_Pending,  0,  0 );
    wAddMethod( _wxApp, "SendIdleEvents", wxApp_SendIdleEvents,  0,  0 );
    wAddMethod( _wxApp, "SetAppName", wxApp_SetAppName,  1,  1 );
    wAddMethod( _wxApp, "SetClassName", wxApp_SetClassName,  1,  1 );
    wAddMethod( _wxApp, "SetExitOnFrameDelete", wxApp_SetExitOnFrameDelete,  1,  1 );
    wAddMethod( _wxApp, "SetTopWindow", wxApp_SetTopWindow,  1,  1 );
    wAddMethod( _wxApp, "SetVendorName", wxApp_SetVendorName,  1,  1 );
    wAddMethod( _wxApp, "GetStdIcon", wxApp_GetStdIcon,  1,  1 );
    wAddMethod( _wxApp, "SetUseBestVisual", wxApp_SetUseBestVisual,  1,  1 );
    wAddMethod( _wxWindow, "del", wxWindow_del, 0, 0 );
    wAddMethod( _wxWindow, "new", wxWindow_new,  2,  6 );
    wAddMethod( _wxWindow, "dtor", wxWindow_dtor,  0,  0 );
    wAddMethod( _wxWindow, "AddChild", wxWindow_AddChild,  1,  1 );
    wAddMethod( _wxWindow, "CaptureMouse", wxWindow_CaptureMouse,  0,  0 );
    wAddMethod( _wxWindow, "Center", wxWindow_Center,  0,  1 );
    wAddMethod( _wxWindow, "CenterOnParent", wxWindow_CenterOnParent,  0,  1 );
    wAddMethod( _wxWindow, "CenterOnScreen", wxWindow_CenterOnScreen,  0,  1 );
    wAddMethod( _wxWindow, "Centre", wxWindow_Centre,  0,  1 );
    wAddMethod( _wxWindow, "CentreOnParent", wxWindow_CentreOnParent,  0,  1 );
    wAddMethod( _wxWindow, "CentreOnScreen", wxWindow_CentreOnScreen,  0,  1 );
    wAddMethod( _wxWindow, "Clear", wxWindow_Clear,  0,  0 );
    wAddMethod( _wxWindow, "ClientToScreen", wxWindow_ClientToScreen,  2,  2 );
    wAddMethod( _wxWindow, "Close", wxWindow_Close,  0,  1 );
    wAddMethod( _wxWindow, "ConvertDialogPointToPixels", wxWindow_ConvertDialogPointToPixels,  1,  1 );
    wAddMethod( _wxWindow, "ConvertDialogSizeToPixels", wxWindow_ConvertDialogSizeToPixels,  1,  1 );
    wAddMethod( _wxWindow, "Destroy", wxWindow_Destroy,  0,  0 );
    wAddMethod( _wxWindow, "DestroyChildren", wxWindow_DestroyChildren,  0,  0 );
    wAddMethod( _wxWindow, "Enable", wxWindow_Enable,  1,  1 );
    wAddMethod( _wxWindow, "FindFocus", wxWindow_FindFocus,  0,  0 );
    wAddMethod( _wxWindow, "FindWindow", wxWindow_FindWindow,  1,  1 );
    wAddMethod( _wxWindow, "Fit", wxWindow_Fit,  0,  0 );
    wAddMethod( _wxWindow, "GetBackgroundColour", wxWindow_GetBackgroundColour,  0,  0 );
    wAddMethod( _wxWindow, "GetBackgroundColor", wxWindow_GetBackgroundColour,  0,  0 );
    wAddMethod( _wxWindow, "GetBestSize", wxWindow_GetBestSize,  0,  0 );
    wAddMethod( _wxWindow, "GetCaret", wxWindow_GetCaret,  0,  0 );
    wAddMethod( _wxWindow, "GetCharHeight", wxWindow_GetCharHeight,  0,  0 );
    wAddMethod( _wxWindow, "GetCharWidth", wxWindow_GetCharWidth,  0,  0 );
    wAddMethod( _wxWindow, "GetChildren", wxWindow_GetChildren,  0,  0 );
    wAddMethod( _wxWindow, "GetClientSizeWidth", wxWindow_GetClientSizeWidth,  0 , 0 );
    wAddMethod( _wxWindow, "GetClientSizeHeight", wxWindow_GetClientSizeHeight,  0 , 0 );
    wAddMethod( _wxWindow, "GetClientSize", wxWindow_GetClientSize,  0,  0 );
    wAddMethod( _wxWindow, "GetConstraints", wxWindow_GetConstraints,  0,  0 );
    wAddMethod( _wxWindow, "GetDropTarget", wxWindow_GetDropTarget,  0,  0 );
    wAddMethod( _wxWindow, "GetEventHandler", wxWindow_GetEventHandler,  0,  0 );
    wAddMethod( _wxWindow, "GetExtraStyle", wxWindow_GetExtraStyle,  0,  0 );
    wAddMethod( _wxWindow, "GetFont", wxWindow_GetFont,  0,  0 );
    wAddMethod( _wxWindow, "GetForegroundColour", wxWindow_GetForegroundColour,  0,  0 );
    wAddMethod( _wxWindow, "GetForegroundColor", wxWindow_GetForegroundColour,  0,  0 );
    wAddMethod( _wxWindow, "GetGrandParent", wxWindow_GetGrandParent,  0,  0 );
    wAddMethod( _wxWindow, "GetId", wxWindow_GetId,  0,  0 );
    wAddMethod( _wxWindow, "GetLabel", wxWindow_GetLabel,  0,  0 );
    wAddMethod( _wxWindow, "GetName", wxWindow_GetName,  0,  0 );
    wAddMethod( _wxWindow, "GetParent", wxWindow_GetParent,  0,  0 );
    wAddMethod( _wxWindow, "GetPositionX", wxWindow_GetPositionX,  0 , 0 );
    wAddMethod( _wxWindow, "GetPositionY", wxWindow_GetPositionY,  0 , 0 );
    wAddMethod( _wxWindow, "GetRect", wxWindow_GetRect,  0,  0 );
    wAddMethod( _wxWindow, "GetScrollThumb", wxWindow_GetScrollThumb,  1,  1 );
    wAddMethod( _wxWindow, "GetScrollPos", wxWindow_GetScrollPos,  1,  1 );
    wAddMethod( _wxWindow, "GetScrollRange", wxWindow_GetScrollRange,  1,  1 );
    wAddMethod( _wxWindow, "GetSizeWidth", wxWindow_GetSizeWidth,  0 , 0 );
    wAddMethod( _wxWindow, "GetSizeHeight", wxWindow_GetSizeHeight,  0 , 0 );
    wAddMethod( _wxWindow, "GetTextExtentX", wxWindow_GetTextExtentX,  1 , 0 );
    wAddMethod( _wxWindow, "GetTextExtentY", wxWindow_GetTextExtentY,  1 , 0 );
    wAddMethod( _wxWindow, "GetTextExtentDescent", wxWindow_GetTextExtentX,  1 , 0 );
    wAddMethod( _wxWindow, "GetTextExtentExternalLeading", wxWindow_GetTextExtentX,  1 , 0 );
    wAddMethod( _wxWindow, "GetTitle", wxWindow_GetTitle,  0,  0 );
    wAddMethod( _wxWindow, "GetUpdateRegion", wxWindow_GetUpdateRegion,  0,  0 );
    wAddMethod( _wxWindow, "GetValidator", wxWindow_GetValidator,  0,  0 );
    wAddMethod( _wxWindow, "GetWindowStyleFlag", wxWindow_GetWindowStyleFlag,  0,  0 );
    wAddMethod( _wxWindow, "InitDialog", wxWindow_InitDialog,  0,  0 );
    wAddMethod( _wxWindow, "IsEnabled", wxWindow_IsEnabled,  0,  0 );
    wAddMethod( _wxWindow, "IsExposed", wxWindow_IsExposed,  2,  2 );
    wAddMethod( _wxWindow, "IsExposedPoint", wxWindow_IsExposedPoint,  1,  1 );
    wAddMethod( _wxWindow, "IsExposedRect", wxWindow_IsExposedRect,  1,  1 );
    wAddMethod( _wxWindow, "IsRetained", wxWindow_IsRetained,  0,  0 );
    wAddMethod( _wxWindow, "IsShown", wxWindow_IsShown,  0,  0 );
    wAddMethod( _wxWindow, "IsTopLevel", wxWindow_IsTopLevel,  0,  0 );
    wAddMethod( _wxWindow, "Layout", wxWindow_Layout,  0,  0 );
    wAddMethod( _wxWindow, "LoadFromResource", wxWindow_LoadFromResource,  2,  3 );
    wAddMethod( _wxWindow, "Lower", wxWindow_Lower,  0,  0 );
    wAddMethod( _wxWindow, "MakeModal", wxWindow_MakeModal,  1,  1 );
    wAddMethod( _wxWindow, "Move", wxWindow_Move,  2,  2 );
    wAddMethod( _wxWindow, "MoveXY", wxWindow_MoveXY,  1,  1 );
    wAddMethod( _wxWindow, "PopEventHandler", wxWindow_PopEventHandler,  0,  1 );
    wAddMethod( _wxWindow, "PopupMenu", wxWindow_PopupMenu,  2,  2 );
    wAddMethod( _wxWindow, "PopupMenuXY", wxWindow_PopupMenuXY,  3,  3 );
    wAddMethod( _wxWindow, "PushEventHandler", wxWindow_PushEventHandler,  1,  1 );
    wAddMethod( _wxWindow, "Raise", wxWindow_Raise,  0,  0 );
    wAddMethod( _wxWindow, "Refresh", wxWindow_Refresh,  0,  2 );
    wAddMethod( _wxWindow, "ReleaseMouse", wxWindow_ReleaseMouse,  0,  0 );
    wAddMethod( _wxWindow, "RemoveChild", wxWindow_RemoveChild,  1,  1 );
    wAddMethod( _wxWindow, "Reparent", wxWindow_Reparent,  1,  1 );
    wAddMethod( _wxWindow, "ScreenToClient", wxWindow_ScreenToClient,  1,  1 );
    wAddMethod( _wxWindow, "ScreenToClientXY", wxWindow_ScreenToClientXY,  2,  2 );
    wAddMethod( _wxWindow, "ScrollWindow", wxWindow_ScrollWindow,  2,  3 );
    wAddMethod( _wxWindow, "SetAcceleratorTable", wxWindow_SetAcceleratorTable,  1,  1 );
    wAddMethod( _wxWindow, "SetAutoLayout", wxWindow_SetAutoLayout,  1,  1 );
    wAddMethod( _wxWindow, "SetBackgroundColour", wxWindow_SetBackgroundColour,  1,  1 );
    wAddMethod( _wxWindow, "SetBackgroundColor", wxWindow_SetBackgroundColour,  1,  1 );
    wAddMethod( _wxWindow, "SetCaret", wxWindow_SetCaret,  1,  1 );
    wAddMethod( _wxWindow, "SetClientSize", wxWindow_SetClientSize,  1,  1 );
    wAddMethod( _wxWindow, "SetClientSizeWH", wxWindow_SetClientSizeWH,  2,  2 );
    wAddMethod( _wxWindow, "SetCursor", wxWindow_SetCursor,  1,  1 );
    wAddMethod( _wxWindow, "SetConstraints", wxWindow_SetConstraints,  1,  1 );
    wAddMethod( _wxWindow, "SetDropTarget", wxWindow_SetDropTarget,  1,  1 );
    wAddMethod( _wxWindow, "SetEventHandler", wxWindow_SetEventHandler,  1,  1 );
    wAddMethod( _wxWindow, "SetExtraStyle", wxWindow_SetExtraStyle,  1,  1 );
    wAddMethod( _wxWindow, "SetFocus", wxWindow_SetFocus,  0,  0 );
    wAddMethod( _wxWindow, "SetFont", wxWindow_SetFont,  1,  1 );
    wAddMethod( _wxWindow, "SetForegroundColour", wxWindow_SetForegroundColour,  1,  1 );
    wAddMethod( _wxWindow, "SetForegroundColor", wxWindow_SetForegroundColour,  1,  1 );
    wAddMethod( _wxWindow, "SetId", wxWindow_SetId,  1,  1 );
    wAddMethod( _wxWindow, "SetName", wxWindow_SetName,  1,  1 );
    wAddMethod( _wxWindow, "SetScrollbar", wxWindow_SetScrollbar,  4,  5 );
    wAddMethod( _wxWindow, "SetScrollPos", wxWindow_SetScrollPos,  2,  3 );
    wAddMethod( _wxWindow, "SetDimensions", wxWindow_SetDimensions,  4,  5 );
    wAddMethod( _wxWindow, "SetSize", wxWindow_SetSize,  2,  2 );
    wAddMethod( _wxWindow, "SetPosition", wxWindow_SetPosition,  1,  1 );
    wAddMethod( _wxWindow, "SetSizeHints", wxWindow_SetSizeHints,  0,  6 );
    wAddMethod( _wxWindow, "SetSizer", wxWindow_SetSizer,  1,  1 );
    wAddMethod( _wxWindow, "SetTitle", wxWindow_SetTitle,  1,  1 );
    wAddMethod( _wxWindow, "SetValidator", wxWindow_SetValidator,  1,  1 );
    wAddMethod( _wxWindow, "SetToolTip", wxWindow_SetToolTip,  1,  1 );
    wAddMethod( _wxWindow, "GetToolTip", wxWindow_GetToolTip,  0,  0 );
    wAddMethod( _wxWindow, "SetWindowStyle", wxWindow_SetWindowStyle,  1,  1 );
    wAddMethod( _wxWindow, "SetWindowStyleFlag", wxWindow_SetWindowStyleFlag,  1,  1 );
    wAddMethod( _wxWindow, "Show", wxWindow_Show,  1,  1 );
    wAddMethod( _wxWindow, "TransferDataFromWindow", wxWindow_TransferDataFromWindow,  0,  0 );
    wAddMethod( _wxWindow, "TransferDataToWindow", wxWindow_TransferDataToWindow,  0,  0 );
    wAddMethod( _wxWindow, "Validate", wxWindow_Validate,  0,  0 );
    wAddMethod( _wxWindow, "WarpPointer", wxWindow_WarpPointer,  2,  2 );
    wAddMethod( _wxPanel, "del", wxPanel_del, 0, 0 );
    wAddMethod( _wxPanel, "new", wxPanel_new,  2,  6 );
    wAddMethod( _wxPanel, "dtor", wxPanel_dtor,  0,  0 );
    wAddMethod( _wxPanel, "Create", wxPanel_Create,  2,  6 );
    wAddMethod( _wxPanel, "InitDialog", wxPanel_InitDialog,  0,  0 );
    wAddMethod( _wxPanel, "SetDefaultItem", wxPanel_SetDefaultItem,  1,  1 );
    wAddMethod( _wxDialog, "del", wxDialog_del, 0, 0 );
    wAddMethod( _wxDialog, "new", wxDialog_new,  3,  7 );
    wAddMethod( _wxDialog, "dtor", wxDialog_dtor,  0,  0 );
    wAddMethod( _wxDialog, "Centre", wxDialog_Centre,  0,  1 );
    wAddMethod( _wxDialog, "Create", wxDialog_Create,  3,  7 );
    wAddMethod( _wxDialog, "EndModal", wxDialog_EndModal,  1,  1 );
    wAddMethod( _wxDialog, "GetReturnCode", wxDialog_GetReturnCode,  0,  0 );
    wAddMethod( _wxDialog, "GetTitle", wxDialog_GetTitle,  0,  0 );
    wAddMethod( _wxDialog, "Iconize", wxDialog_Iconize,  1,  1 );
    wAddMethod( _wxDialog, "IsIconized", wxDialog_IsIconized,  0,  0 );
    wAddMethod( _wxDialog, "IsModal", wxDialog_IsModal,  0,  0 );
    wAddMethod( _wxDialog, "SetModal", wxDialog_SetModal,  1,  1 );
    wAddMethod( _wxDialog, "SetReturnCode", wxDialog_SetReturnCode,  1,  1 );
    wAddMethod( _wxDialog, "SetTitle", wxDialog_SetTitle,  1,  1 );
    wAddMethod( _wxDialog, "Show", wxDialog_Show,  1,  1 );
    wAddMethod( _wxDialog, "ShowModal", wxDialog_ShowModal,  0,  0 );
    wAddMethod( _wxFrame, "del", wxFrame_del, 0, 0 );
    wAddMethod( _wxFrame, "new", wxFrame_new,  3,  7 );
    wAddMethod( _wxFrame, "dtor", wxFrame_dtor,  0,  0 );
    wAddMethod( _wxFrame, "Centre", wxFrame_Centre,  0,  1 );
    wAddMethod( _wxFrame, "Command", wxFrame_Command,  1,  1 );
    wAddMethod( _wxFrame, "Create", wxFrame_Create,  3,  7 );
    wAddMethod( _wxFrame, "CreateStatusBar", wxFrame_CreateStatusBar,  0,  4 );
    wAddMethod( _wxFrame, "CreateToolBar", wxFrame_CreateToolBar,  0,  3 );
    wAddMethod( _wxFrame, "GetClientAreaOrigin", wxFrame_GetClientAreaOrigin,  0,  0 );
    wAddMethod( _wxFrame, "GetMenuBar", wxFrame_GetMenuBar,  0,  0 );
    wAddMethod( _wxFrame, "GetStatusBar", wxFrame_GetStatusBar,  0,  0 );
    wAddMethod( _wxFrame, "GetTitle", wxFrame_GetTitle,  0,  0 );
    wAddMethod( _wxFrame, "GetToolBar", wxFrame_GetToolBar,  0,  0 );
    wAddMethod( _wxFrame, "Iconize", wxFrame_Iconize,  1,  1 );
    wAddMethod( _wxFrame, "IsIconized", wxFrame_IsIconized,  0,  0 );
    wAddMethod( _wxFrame, "IsMaximized", wxFrame_IsMaximized,  0,  0 );
    wAddMethod( _wxFrame, "Maximize", wxFrame_Maximize,  1,  1 );
    wAddMethod( _wxFrame, "SetIcon", wxFrame_SetIcon,  1,  1 );
    wAddMethod( _wxFrame, "SetMenuBar", wxFrame_SetMenuBar,  1,  1 );
    wAddMethod( _wxFrame, "SetStatusBar", wxFrame_SetStatusBar,  1,  1 );
    wAddMethod( _wxFrame, "SetStatusText", wxFrame_SetStatusText,  1,  2 );
    wAddMethod( _wxFrame, "SetStatusWidths", wxFrame_SetStatusWidths,  2,  2 );
    wAddMethod( _wxFrame, "SetToolBar", wxFrame_SetToolBar,  1,  1 );
    wAddMethod( _wxFrame, "SetTitle", wxFrame_SetTitle,  1,  1 );
    wAddMethod( _wxMDIParentFrame, "del", wxMDIParentFrame_del, 0, 0 );
    wAddMethod( _wxMDIParentFrame, "new", wxMDIParentFrame_new,  3,  7 );
    wAddMethod( _wxMDIParentFrame, "dtor", wxMDIParentFrame_dtor,  0,  0 );
    wAddMethod( _wxMDIParentFrame, "ActivateNext", wxMDIParentFrame_ActivateNext,  0,  0 );
    wAddMethod( _wxMDIParentFrame, "ActivatePrevious", wxMDIParentFrame_ActivatePrevious,  0,  0 );
    wAddMethod( _wxMDIParentFrame, "ArrangeIcons", wxMDIParentFrame_ArrangeIcons,  0,  0 );
    wAddMethod( _wxMDIParentFrame, "Cascade", wxMDIParentFrame_Cascade,  0,  0 );
    wAddMethod( _wxMDIParentFrame, "Create", wxMDIParentFrame_Create,  3,  7 );
    wAddMethod( _wxMDIParentFrame, "GetClientSizeWidth", wxMDIParentFrame_GetClientSizeWidth,  0 , 0 );
    wAddMethod( _wxMDIParentFrame, "GetClientSizeHeight", wxMDIParentFrame_GetClientSizeHeight,  0 , 0 );
    wAddMethod( _wxMDIParentFrame, "GetActiveChild", wxMDIParentFrame_GetActiveChild,  0,  0 );
    wAddMethod( _wxMDIParentFrame, "GetClientWindow", wxMDIParentFrame_GetClientWindow,  0,  0 );
    wAddMethod( _wxMDIParentFrame, "GetToolBar", wxMDIParentFrame_GetToolBar,  0,  0 );
    wAddMethod( _wxMDIParentFrame, "SetToolBar", wxMDIParentFrame_SetToolBar,  1,  1 );
    wAddMethod( _wxMDIParentFrame, "Tile", wxMDIParentFrame_Tile,  0,  0 );
    wAddMethod( _wxMDIChildFrame, "del", wxMDIChildFrame_del, 0, 0 );
    wAddMethod( _wxMDIChildFrame, "new", wxMDIChildFrame_new,  3,  7 );
    wAddMethod( _wxMDIChildFrame, "dtor", wxMDIChildFrame_dtor,  0,  0 );
    wAddMethod( _wxMDIChildFrame, "Activate", wxMDIChildFrame_Activate,  0,  0 );
    wAddMethod( _wxMDIChildFrame, "Create", wxMDIChildFrame_Create,  3,  7 );
    wAddMethod( _wxMDIChildFrame, "Restore", wxMDIChildFrame_Restore,  0,  0 );
    wAddMethod( _wxMiniFrame, "del", wxMiniFrame_del, 0, 0 );
    wAddMethod( _wxMiniFrame, "new", wxMiniFrame_new,  3,  7 );
    wAddMethod( _wxMiniFrame, "dtor", wxMiniFrame_dtor,  0,  0 );
    wAddMethod( _wxMiniFrame, "Create", wxMiniFrame_Create,  3,  7 );
    wAddMethod( _wxScrolledWindow, "del", wxScrolledWindow_del, 0, 0 );
    wAddMethod( _wxScrolledWindow, "new", wxScrolledWindow_new,  1,  6 );
    wAddMethod( _wxScrolledWindow, "dtor", wxScrolledWindow_dtor,  0,  0 );
    wAddMethod( _wxScrolledWindow, "CalcScrolledPosition", wxScrolledWindow_CalcScrolledPosition,  4,  4 );
    wAddMethod( _wxScrolledWindow, "CalcUnscrolledPosition", wxScrolledWindow_CalcUnscrolledPosition,  4,  4 );
    wAddMethod( _wxScrolledWindow, "Create", wxScrolledWindow_Create,  1,  6 );
    wAddMethod( _wxScrolledWindow, "EnableScrolling", wxScrolledWindow_EnableScrolling,  2,  2 );
    wAddMethod( _wxScrolledWindow, "GetScrollPixelsPerUnitX", wxScrolledWindow_GetScrollPixelsPerUnitX,  0 , 0 );
    wAddMethod( _wxScrolledWindow, "GetScrollPixelsPerUnitY", wxScrolledWindow_GetScrollPixelsPerUnitY,  0 , 0 );
    wAddMethod( _wxScrolledWindow, "GetVirtualSizeX", wxScrolledWindow_GetVirtualSizeX,  0 , 0 );
    wAddMethod( _wxScrolledWindow, "GetVirtualSizeY", wxScrolledWindow_GetVirtualSizeY,  0 , 0 );
    wAddMethod( _wxScrolledWindow, "IsRetained", wxScrolledWindow_IsRetained,  0,  0 );
    wAddMethod( _wxScrolledWindow, "PrepareDC", wxScrolledWindow_PrepareDC,  1,  1 );
    wAddMethod( _wxScrolledWindow, "Scroll", wxScrolledWindow_Scroll,  2,  2 );
    wAddMethod( _wxScrolledWindow, "SetScrollbars", wxScrolledWindow_SetScrollbars,  4,  7 );
    wAddMethod( _wxScrolledWindow, "SetTargetWindow", wxScrolledWindow_SetTargetWindow,  1,  1 );
    wAddMethod( _wxScrolledWindow, "GetViewStartX", wxScrolledWindow_GetViewStartX,  0 , 0 );
    wAddMethod( _wxScrolledWindow, "GetViewStartY", wxScrolledWindow_GetViewStartY,  0 , 0 );
    wAddMethod( _wxSplitterWindow, "del", wxSplitterWindow_del, 0, 0 );
    wAddMethod( _wxSplitterWindow, "new", wxSplitterWindow_new,  2,  6 );
    wAddMethod( _wxSplitterWindow, "dtor", wxSplitterWindow_dtor,  0,  0 );
    wAddMethod( _wxSplitterWindow, "Create", wxSplitterWindow_Create,  1,  6 );
    wAddMethod( _wxSplitterWindow, "GetMinimumPaneSize", wxSplitterWindow_GetMinimumPaneSize,  0,  0 );
    wAddMethod( _wxSplitterWindow, "GetSashPosition", wxSplitterWindow_GetSashPosition,  0,  0 );
    wAddMethod( _wxSplitterWindow, "GetSplitMode", wxSplitterWindow_GetSplitMode,  0,  0 );
    wAddMethod( _wxSplitterWindow, "GetWindow1", wxSplitterWindow_GetWindow1,  0,  0 );
    wAddMethod( _wxSplitterWindow, "GetWindow2", wxSplitterWindow_GetWindow2,  0,  0 );
    wAddMethod( _wxSplitterWindow, "Initialize", wxSplitterWindow_Initialize,  1,  1 );
    wAddMethod( _wxSplitterWindow, "IsSplit", wxSplitterWindow_IsSplit,  0,  0 );
    wAddMethod( _wxSplitterWindow, "ReplaceWindow", wxSplitterWindow_ReplaceWindow,  2,  2 );
    wAddMethod( _wxSplitterWindow, "SetSashPosition", wxSplitterWindow_SetSashPosition,  1,  2 );
    wAddMethod( _wxSplitterWindow, "SetMinimumPaneSize", wxSplitterWindow_SetMinimumPaneSize,  1,  1 );
    wAddMethod( _wxSplitterWindow, "SetSplitMode", wxSplitterWindow_SetSplitMode,  1,  1 );
    wAddMethod( _wxSplitterWindow, "SplitHorizontally", wxSplitterWindow_SplitHorizontally,  2,  3 );
    wAddMethod( _wxSplitterWindow, "SplitVertically", wxSplitterWindow_SplitVertically,  2,  3 );
    wAddMethod( _wxSplitterWindow, "Unsplit", wxSplitterWindow_Unsplit,  0,  1 );
    wAddMethod( _wxStatusBar, "del", wxStatusBar_del, 0, 0 );
    wAddMethod( _wxStatusBar, "dtor", wxStatusBar_dtor,  0,  0 );
    wAddMethod( _wxStatusBar, "Create", wxStatusBar_Create,  3,  4 );
    wAddMethod( _wxStatusBar, "GetFieldRect", wxStatusBar_GetFieldRect,  2,  2 );
    wAddMethod( _wxStatusBar, "GetFieldsCount", wxStatusBar_GetFieldsCount,  0,  0 );
    wAddMethod( _wxStatusBar, "GetStatusText", wxStatusBar_GetStatusText,  0,  1 );
    wAddMethod( _wxStatusBar, "SetFieldsCount", wxStatusBar_SetFieldsCount,  0,  2 );
    wAddMethod( _wxStatusBar, "SetMinHeight", wxStatusBar_SetMinHeight,  1,  1 );
    wAddMethod( _wxStatusBar, "SetStatusText", wxStatusBar_SetStatusText,  1,  2 );
    wAddMethod( _wxStatusBar, "SetStatusWidths", wxStatusBar_SetStatusWidths,  2,  2 );
    wAddMethod( _wxControl, "del", wxControl_del, 0, 0 );
    wAddMethod( _wxControl, "Command", wxControl_Command,  1,  1 );
    wAddMethod( _wxControl, "GetLabel", wxControl_GetLabel,  0,  0 );
    wAddMethod( _wxControl, "SetLabel", wxControl_SetLabel,  1,  1 );
    wAddMethod( _wxButton, "del", wxButton_del, 0, 0 );
    wAddMethod( _wxButton, "new", wxButton_new,  3,  8 );
    wAddMethod( _wxButton, "dtor", wxButton_dtor,  0,  0 );
    wAddMethod( _wxButton, "Create", wxButton_Create,  3,  8 );
    wAddMethod( _wxButton, "GetLabel", wxButton_GetLabel,  0,  0 );
    wAddMethod( _wxButton, "GetDefaultSize", wxButton_GetDefaultSize,  0,  0 );
    wAddMethod( _wxButton, "SetDefault", wxButton_SetDefault,  0,  0 );
    wAddMethod( _wxButton, "SetLabel", wxButton_SetLabel,  1,  1 );
    wAddMethod( _wxBitmapButton, "del", wxBitmapButton_del, 0, 0 );
    wAddMethod( _wxBitmapButton, "new", wxBitmapButton_new,  3,  8 );
    wAddMethod( _wxBitmapButton, "dtor", wxBitmapButton_dtor,  0,  0 );
    wAddMethod( _wxBitmapButton, "Create", wxBitmapButton_Create,  4,  8 );
    wAddMethod( _wxBitmapButton, "GetBitmapDisabled", wxBitmapButton_GetBitmapDisabled,  0,  0 );
    wAddMethod( _wxBitmapButton, "GetBitmapFocus", wxBitmapButton_GetBitmapFocus,  0,  0 );
    wAddMethod( _wxBitmapButton, "GetBitmapLabel", wxBitmapButton_GetBitmapLabel,  0,  0 );
    wAddMethod( _wxBitmapButton, "GetBitmapSelected", wxBitmapButton_GetBitmapSelected,  0,  0 );
    wAddMethod( _wxBitmapButton, "SetBitmapDisabled", wxBitmapButton_SetBitmapDisabled,  1,  1 );
    wAddMethod( _wxBitmapButton, "SetBitmapFocus", wxBitmapButton_SetBitmapFocus,  1,  1 );
    wAddMethod( _wxBitmapButton, "SetBitmapLabel", wxBitmapButton_SetBitmapLabel,  1,  1 );
    wAddMethod( _wxBitmapButton, "SetBitmapSelected", wxBitmapButton_SetBitmapSelected,  1,  1 );
    wAddMethod( _wxCalendarCtrl, "del", wxCalendarCtrl_del, 0, 0 );
    wAddMethod( _wxCalendarCtrl, "new", wxCalendarCtrl_new,  2,  7 );
    wAddMethod( _wxCalendarCtrl, "Create", wxCalendarCtrl_Create,  2,  7 );
    wAddMethod( _wxCalendarCtrl, "dtor", wxCalendarCtrl_dtor,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "SetDate", wxCalendarCtrl_SetDate,  1,  1 );
    wAddMethod( _wxCalendarCtrl, "EnableYearChange", wxCalendarCtrl_EnableYearChange,  0,  1 );
    wAddMethod( _wxCalendarCtrl, "EnableMonthChange", wxCalendarCtrl_EnableMonthChange,  0,  1 );
    wAddMethod( _wxCalendarCtrl, "EnableHolidayDisplay", wxCalendarCtrl_EnableHolidayDisplay,  0,  1 );
    wAddMethod( _wxCalendarCtrl, "SetHeaderColours", wxCalendarCtrl_SetHeaderColours,  2,  2 );
    wAddMethod( _wxCalendarCtrl, "SetHeaderColors", wxCalendarCtrl_SetHeaderColours,  2,  2 );
    wAddMethod( _wxCalendarCtrl, "GetHeaderColourFg", wxCalendarCtrl_GetHeaderColourFg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetHeaderColorFg", wxCalendarCtrl_GetHeaderColourFg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetHeaderColourBg", wxCalendarCtrl_GetHeaderColourBg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetHeaderColorBg", wxCalendarCtrl_GetHeaderColourBg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "SetHighlightColours", wxCalendarCtrl_SetHighlightColours,  2,  2 );
    wAddMethod( _wxCalendarCtrl, "SetHighlightColors", wxCalendarCtrl_SetHighlightColours,  2,  2 );
    wAddMethod( _wxCalendarCtrl, "GetHighlightColourFg", wxCalendarCtrl_GetHighlightColourFg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetHighlightColorFg", wxCalendarCtrl_GetHighlightColourFg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetHighlightColourBg", wxCalendarCtrl_GetHighlightColourBg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetHighlightColorBg", wxCalendarCtrl_GetHighlightColourBg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "SetHolidayColours", wxCalendarCtrl_SetHolidayColours,  2,  2 );
    wAddMethod( _wxCalendarCtrl, "SetHolidayColors", wxCalendarCtrl_SetHolidayColours,  2,  2 );
    wAddMethod( _wxCalendarCtrl, "GetHolidayColourFg", wxCalendarCtrl_GetHolidayColourFg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetHolidayColorFg", wxCalendarCtrl_GetHolidayColourFg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetHolidayColourBg", wxCalendarCtrl_GetHolidayColourBg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetHolidayColorBg", wxCalendarCtrl_GetHolidayColourBg,  0,  0 );
    wAddMethod( _wxCalendarCtrl, "GetAttr", wxCalendarCtrl_GetAttr,  1,  1 );
    wAddMethod( _wxCalendarCtrl, "SetAttr", wxCalendarCtrl_SetAttr,  2,  2 );
    wAddMethod( _wxCalendarCtrl, "SetHoliday", wxCalendarCtrl_SetHoliday,  1,  1 );
    wAddMethod( _wxCalendarCtrl, "ResetAttr", wxCalendarCtrl_ResetAttr,  1,  1 );
    wAddMethod( _wxCheckBox, "del", wxCheckBox_del, 0, 0 );
    wAddMethod( _wxCheckBox, "new", wxCheckBox_new,  3,  8 );
    wAddMethod( _wxCheckBox, "dtor", wxCheckBox_dtor,  0,  0 );
    wAddMethod( _wxCheckBox, "Create", wxCheckBox_Create,  3,  8 );
    wAddMethod( _wxCheckBox, "GetValue", wxCheckBox_GetValue,  0,  0 );
    wAddMethod( _wxCheckBox, "SetValue", wxCheckBox_SetValue,  1,  1 );
    wAddMethod( _wxChoice, "del", wxChoice_del, 0, 0 );
    wAddMethod( _wxChoice, "new", wxChoice_new,  2,  9 );
    wAddMethod( _wxChoice, "dtor", wxChoice_dtor,  0,  0 );
    wAddMethod( _wxChoice, "Append", wxChoice_Append,  1,  1 );
    wAddMethod( _wxChoice, "Clear", wxChoice_Clear,  0,  0 );
    wAddMethod( _wxChoice, "Create", wxChoice_Create,  2,  9 );
    wAddMethod( _wxChoice, "FindString", wxChoice_FindString,  1,  1 );
    wAddMethod( _wxChoice, "GetColumns", wxChoice_GetColumns,  0,  0 );
    wAddMethod( _wxChoice, "GetClientData", wxChoice_GetClientData,  1,  1 );
    wAddMethod( _wxChoice, "GetSelection", wxChoice_GetSelection,  0,  0 );
    wAddMethod( _wxChoice, "GetString", wxChoice_GetString,  1,  1 );
    wAddMethod( _wxChoice, "GetStringSelection", wxChoice_GetStringSelection,  0,  0 );
    wAddMethod( _wxChoice, "SetClientData", wxChoice_SetClientData,  2,  2 );
    wAddMethod( _wxChoice, "SetColumns", wxChoice_SetColumns,  0,  1 );
    wAddMethod( _wxChoice, "SetSelection", wxChoice_SetSelection,  1,  1 );
    wAddMethod( _wxChoice, "SetStringSelection", wxChoice_SetStringSelection,  1,  1 );
    wAddMethod( _wxComboBox, "del", wxComboBox_del, 0, 0 );
    wAddMethod( _wxComboBox, "new", wxComboBox_new,  2,  10 );
    wAddMethod( _wxComboBox, "dtor", wxComboBox_dtor,  0,  0 );
    wAddMethod( _wxComboBox, "Append", wxComboBox_Append,  1,  1 );
    wAddMethod( _wxComboBox, "Clear", wxComboBox_Clear,  0,  0 );
    wAddMethod( _wxComboBox, "Create", wxComboBox_Create,  2,  10 );
    wAddMethod( _wxComboBox, "Copy", wxComboBox_Copy,  0,  0 );
    wAddMethod( _wxComboBox, "Cut", wxComboBox_Cut,  0,  0 );
    wAddMethod( _wxComboBox, "Delete", wxComboBox_Delete,  1,  1 );
    wAddMethod( _wxComboBox, "FindString", wxComboBox_FindString,  1,  1 );
    wAddMethod( _wxComboBox, "GetClientData", wxComboBox_GetClientData,  1,  1 );
    wAddMethod( _wxComboBox, "GetInsertionPoint", wxComboBox_GetInsertionPoint,  0,  0 );
    wAddMethod( _wxComboBox, "GetLastPosition", wxComboBox_GetLastPosition,  0,  0 );
    wAddMethod( _wxComboBox, "GetSelection", wxComboBox_GetSelection,  0,  0 );
    wAddMethod( _wxComboBox, "GetString", wxComboBox_GetString,  1,  1 );
    wAddMethod( _wxComboBox, "GetStringSelection", wxComboBox_GetStringSelection,  0,  0 );
    wAddMethod( _wxComboBox, "GetValue", wxComboBox_GetValue,  0,  0 );
    wAddMethod( _wxComboBox, "Paste", wxComboBox_Paste,  0,  0 );
    wAddMethod( _wxComboBox, "Replace", wxComboBox_Replace,  3,  3 );
    wAddMethod( _wxComboBox, "Remove", wxComboBox_Remove,  2,  2 );
    wAddMethod( _wxComboBox, "SetClientData", wxComboBox_SetClientData,  2,  2 );
    wAddMethod( _wxComboBox, "SetInsertionPoint", wxComboBox_SetInsertionPoint,  1,  1 );
    wAddMethod( _wxComboBox, "SetInsertionPointEnd", wxComboBox_SetInsertionPointEnd,  0,  0 );
    wAddMethod( _wxComboBox, "SetSelection", wxComboBox_SetSelection,  1,  1 );
    wAddMethod( _wxComboBox, "SetMark", wxComboBox_SetMark,  2,  2 );
    wAddMethod( _wxComboBox, "SetValue", wxComboBox_SetValue,  1,  1 );
    wAddMethod( _wxGauge, "del", wxGauge_del, 0, 0 );
    wAddMethod( _wxGauge, "new", wxGauge_new,  3,  8 );
    wAddMethod( _wxGauge, "dtor", wxGauge_dtor,  0,  0 );
    wAddMethod( _wxGauge, "Create", wxGauge_Create,  3,  8 );
    wAddMethod( _wxGauge, "GetBezelFace", wxGauge_GetBezelFace,  0,  0 );
    wAddMethod( _wxGauge, "GetRange", wxGauge_GetRange,  0,  0 );
    wAddMethod( _wxGauge, "GetShadowWidth", wxGauge_GetShadowWidth,  0,  0 );
    wAddMethod( _wxGauge, "GetValue", wxGauge_GetValue,  0,  0 );
    wAddMethod( _wxGauge, "SetBezelFace", wxGauge_SetBezelFace,  1,  1 );
    wAddMethod( _wxGauge, "SetRange", wxGauge_SetRange,  1,  1 );
    wAddMethod( _wxGauge, "SetShadowWidth", wxGauge_SetShadowWidth,  1,  1 );
    wAddMethod( _wxGauge, "SetValue", wxGauge_SetValue,  1,  1 );
    wAddMethod( _wxStaticBox, "del", wxStaticBox_del, 0, 0 );
    wAddMethod( _wxStaticBox, "new", wxStaticBox_new,  3,  7 );
    wAddMethod( _wxStaticBox, "dtor", wxStaticBox_dtor,  0,  0 );
    wAddMethod( _wxStaticBox, "Create", wxStaticBox_Create,  3,  7 );
    wAddMethod( _wxListBox, "del", wxListBox_del, 0, 0 );
    wAddMethod( _wxListBox, "new", wxListBox_new,  2,  9 );
    wAddMethod( _wxListBox, "dtor", wxListBox_dtor,  0,  0 );
    wAddMethod( _wxListBox, "Append", wxListBox_Append,  1,  1 );
    wAddMethod( _wxListBox, "Clear", wxListBox_Clear,  0,  0 );
    wAddMethod( _wxListBox, "Create", wxListBox_Create,  2,  9 );
    wAddMethod( _wxListBox, "Delete", wxListBox_Delete,  1,  1 );
    wAddMethod( _wxListBox, "Deselect", wxListBox_Deselect,  1,  1 );
    wAddMethod( _wxListBox, "FindString", wxListBox_FindString,  1,  1 );
    wAddMethod( _wxListBox, "GetClientData", wxListBox_GetClientData,  1,  1 );
    wAddMethod( _wxListBox, "GetSelection", wxListBox_GetSelection,  0,  0 );
    wAddMethod( _wxListBox, "GetSelections", wxListBox_GetSelections,  1,  1 );
    wAddMethod( _wxListBox, "GetString", wxListBox_GetString,  1,  1 );
    wAddMethod( _wxListBox, "GetStringSelection", wxListBox_GetStringSelection,  0,  0 );
    wAddMethod( _wxListBox, "Selected", wxListBox_Selected,  1,  1 );
    wAddMethod( _wxListBox, "SetClientData", wxListBox_SetClientData,  2,  2 );
    wAddMethod( _wxListBox, "SetFirstItem", wxListBox_SetFirstItem,  1,  1 );
    wAddMethod( _wxListBox, "SetSelection", wxListBox_SetSelection,  1,  2 );
    wAddMethod( _wxListBox, "SetString", wxListBox_SetString,  2,  2 );
    wAddMethod( _wxListBox, "SetStringSelection", wxListBox_SetStringSelection,  1,  2 );
    wAddMethod( _wxCheckListBox, "del", wxCheckListBox_del, 0, 0 );
    wAddMethod( _wxCheckListBox, "new", wxCheckListBox_new,  2,  9 );
    wAddMethod( _wxCheckListBox, "dtor", wxCheckListBox_dtor,  0,  0 );
    wAddMethod( _wxCheckListBox, "Check", wxCheckListBox_Check,  1,  2 );
    wAddMethod( _wxCheckListBox, "IsChecked", wxCheckListBox_IsChecked,  1,  1 );
    wAddMethod( _wxListCtrl, "del", wxListCtrl_del, 0, 0 );
    wAddMethod( _wxListCtrl, "new", wxListCtrl_new,  2,  7 );
    wAddMethod( _wxListCtrl, "dtor", wxListCtrl_dtor,  0,  0 );
    wAddMethod( _wxListCtrl, "Arrange", wxListCtrl_Arrange,  0,  1 );
    wAddMethod( _wxListCtrl, "Create", wxListCtrl_Create,  2,  7 );
    wAddMethod( _wxListCtrl, "ClearAll", wxListCtrl_ClearAll,  0,  0 );
    wAddMethod( _wxListCtrl, "DeleteItem", wxListCtrl_DeleteItem,  1,  1 );
    wAddMethod( _wxListCtrl, "DeleteAllItems", wxListCtrl_DeleteAllItems,  0,  0 );
    wAddMethod( _wxListCtrl, "DeleteColumn", wxListCtrl_DeleteColumn,  1,  1 );
    wAddMethod( _wxListCtrl, "EditLabel", wxListCtrl_EditLabel,  1,  1 );
    wAddMethod( _wxListCtrl, "EnsureVisible", wxListCtrl_EnsureVisible,  1,  1 );
    wAddMethod( _wxListCtrl, "FindItem", wxListCtrl_FindItem,  2,  3 );
    wAddMethod( _wxListCtrl, "FindItemData", wxListCtrl_FindItemData,  2,  2 );
    wAddMethod( _wxListCtrl, "FindItemAtPos", wxListCtrl_FindItemAtPos,  3,  3 );
    wAddMethod( _wxListCtrl, "GetColumn", wxListCtrl_GetColumn,  2,  2 );
    wAddMethod( _wxListCtrl, "GetColumnWidth", wxListCtrl_GetColumnWidth,  1,  1 );
    wAddMethod( _wxListCtrl, "GetCountPerPage", wxListCtrl_GetCountPerPage,  0,  0 );
    wAddMethod( _wxListCtrl, "GetImageList", wxListCtrl_GetImageList,  1,  1 );
    wAddMethod( _wxListCtrl, "GetItem", wxListCtrl_GetItem,  1,  1 );
    wAddMethod( _wxListCtrl, "GetItemData", wxListCtrl_GetItemData,  1,  1 );
    wAddMethod( _wxListCtrl, "GetItemPosition", wxListCtrl_GetItemPosition,  2,  2 );
    wAddMethod( _wxListCtrl, "GetItemRect", wxListCtrl_GetItemRect,  2,  3 );
    wAddMethod( _wxListCtrl, "GetItemState", wxListCtrl_GetItemState,  2,  2 );
    wAddMethod( _wxListCtrl, "GetItemCount", wxListCtrl_GetItemCount,  0,  0 );
    wAddMethod( _wxListCtrl, "GetItemSpacing", wxListCtrl_GetItemSpacing,  1,  1 );
    wAddMethod( _wxListCtrl, "GetItemText", wxListCtrl_GetItemText,  1,  1 );
    wAddMethod( _wxListCtrl, "GetNextItem", wxListCtrl_GetNextItem,  1,  3 );
    wAddMethod( _wxListCtrl, "GetSelectedItemCount", wxListCtrl_GetSelectedItemCount,  0,  0 );
    wAddMethod( _wxListCtrl, "GetTextColour", wxListCtrl_GetTextColour,  0,  0 );
    wAddMethod( _wxListCtrl, "GetTextColor", wxListCtrl_GetTextColour,  0,  0 );
    wAddMethod( _wxListCtrl, "GetTopItem", wxListCtrl_GetTopItem,  0,  0 );
    wAddMethod( _wxListCtrl, "HitTest", wxListCtrl_HitTest,  2,  2 );
    wAddMethod( _wxListCtrl, "InsertColumn", wxListCtrl_InsertColumn,  2,  2 );
    wAddMethod( _wxListCtrl, "InsertColumnInfo", wxListCtrl_InsertColumnInfo,  2,  4 );
    wAddMethod( _wxListCtrl, "InsertItem", wxListCtrl_InsertItem,  1,  1 );
    wAddMethod( _wxListCtrl, "InsertStringItem", wxListCtrl_InsertStringItem,  2,  2 );
    wAddMethod( _wxListCtrl, "InsertImageItem", wxListCtrl_InsertImageItem,  2,  2 );
    wAddMethod( _wxListCtrl, "InsertImageStringItem", wxListCtrl_InsertImageStringItem,  3,  3 );
    wAddMethod( _wxListCtrl, "ScrollList", wxListCtrl_ScrollList,  2,  2 );
    wAddMethod( _wxListCtrl, "SetBackgroundColour", wxListCtrl_SetBackgroundColour,  1,  1 );
    wAddMethod( _wxListCtrl, "SetBackgroundColor", wxListCtrl_SetBackgroundColour,  1,  1 );
    wAddMethod( _wxListCtrl, "SetColumn", wxListCtrl_SetColumn,  2,  2 );
    wAddMethod( _wxListCtrl, "SetColumnWidth", wxListCtrl_SetColumnWidth,  2,  2 );
    wAddMethod( _wxListCtrl, "SetImageList", wxListCtrl_SetImageList,  2,  2 );
    wAddMethod( _wxListCtrl, "SetItem", wxListCtrl_SetItem,  1,  1 );
    wAddMethod( _wxListCtrl, "SetStringItem", wxListCtrl_SetStringItem,  3,  4 );
    wAddMethod( _wxListCtrl, "SetItemData", wxListCtrl_SetItemData,  2,  2 );
    wAddMethod( _wxListCtrl, "SetItemImage", wxListCtrl_SetItemImage,  3,  3 );
    wAddMethod( _wxListCtrl, "SetItemPosition", wxListCtrl_SetItemPosition,  2,  2 );
    wAddMethod( _wxListCtrl, "SetItemState", wxListCtrl_SetItemState,  3,  3 );
    wAddMethod( _wxListCtrl, "SetItemText", wxListCtrl_SetItemText,  2,  2 );
    wAddMethod( _wxListCtrl, "SetSingleStyle", wxListCtrl_SetSingleStyle,  1,  2 );
    wAddMethod( _wxListCtrl, "SetTextColour", wxListCtrl_SetTextColour,  1,  1 );
    wAddMethod( _wxListCtrl, "SetTextColor", wxListCtrl_SetTextColour,  1,  1 );
    wAddMethod( _wxListCtrl, "SetWindowStyleFlag", wxListCtrl_SetWindowStyleFlag,  1,  1 );
    wAddMethod( _wxTextCtrl, "del", wxTextCtrl_del, 0, 0 );
    wAddMethod( _wxTextCtrl, "new", wxTextCtrl_new,  2,  8 );
    wAddMethod( _wxTextCtrl, "dtor", wxTextCtrl_dtor,  0,  0 );
    wAddMethod( _wxTextCtrl, "AppendText", wxTextCtrl_AppendText,  1,  1 );
    wAddMethod( _wxTextCtrl, "CanCopy", wxTextCtrl_CanCopy,  0,  0 );
    wAddMethod( _wxTextCtrl, "CanCut", wxTextCtrl_CanCut,  0,  0 );
    wAddMethod( _wxTextCtrl, "CanPaste", wxTextCtrl_CanPaste,  0,  0 );
    wAddMethod( _wxTextCtrl, "CanRedo", wxTextCtrl_CanRedo,  0,  0 );
    wAddMethod( _wxTextCtrl, "CanUndo", wxTextCtrl_CanUndo,  0,  0 );
    wAddMethod( _wxTextCtrl, "Clear", wxTextCtrl_Clear,  0,  0 );
    wAddMethod( _wxTextCtrl, "Copy", wxTextCtrl_Copy,  0,  0 );
    wAddMethod( _wxTextCtrl, "Create", wxTextCtrl_Create,  2,  8 );
    wAddMethod( _wxTextCtrl, "Cut", wxTextCtrl_Cut,  0,  0 );
    wAddMethod( _wxTextCtrl, "DiscardEdits", wxTextCtrl_DiscardEdits,  0,  0 );
    wAddMethod( _wxTextCtrl, "GetInsertionPoint", wxTextCtrl_GetInsertionPoint,  0,  0 );
    wAddMethod( _wxTextCtrl, "GetLastPosition", wxTextCtrl_GetLastPosition,  0,  0 );
    wAddMethod( _wxTextCtrl, "GetLineLength", wxTextCtrl_GetLineLength,  1,  1 );
    wAddMethod( _wxTextCtrl, "GetLineText", wxTextCtrl_GetLineText,  1,  1 );
    wAddMethod( _wxTextCtrl, "GetNumberOfLines", wxTextCtrl_GetNumberOfLines,  0,  0 );
    wAddMethod( _wxTextCtrl, "GetSelectionFrom", wxTextCtrl_GetSelectionFrom,  0 , 0 );
    wAddMethod( _wxTextCtrl, "GetSelectionTo", wxTextCtrl_GetSelectionTo,  0 , 0 );
    wAddMethod( _wxTextCtrl, "GetValue", wxTextCtrl_GetValue,  0,  0 );
    wAddMethod( _wxTextCtrl, "IsModified", wxTextCtrl_IsModified,  0,  0 );
    wAddMethod( _wxTextCtrl, "LoadFile", wxTextCtrl_LoadFile,  1,  1 );
    wAddMethod( _wxTextCtrl, "Paste", wxTextCtrl_Paste,  0,  0 );
    wAddMethod( _wxTextCtrl, "PositionToXY", wxTextCtrl_PositionToXY,  3,  3 );
    wAddMethod( _wxTextCtrl, "Redo", wxTextCtrl_Redo,  0,  0 );
    wAddMethod( _wxTextCtrl, "Remove", wxTextCtrl_Remove,  2,  2 );
    wAddMethod( _wxTextCtrl, "Replace", wxTextCtrl_Replace,  3,  3 );
    wAddMethod( _wxTextCtrl, "SaveFile", wxTextCtrl_SaveFile,  1,  1 );
    wAddMethod( _wxTextCtrl, "SetEditable", wxTextCtrl_SetEditable,  1,  1 );
    wAddMethod( _wxTextCtrl, "SetInsertionPoint", wxTextCtrl_SetInsertionPoint,  1,  1 );
    wAddMethod( _wxTextCtrl, "SetInsertionPointEnd", wxTextCtrl_SetInsertionPointEnd,  0,  0 );
    wAddMethod( _wxTextCtrl, "SetSelection", wxTextCtrl_SetSelection,  2,  2 );
    wAddMethod( _wxTextCtrl, "SetValue", wxTextCtrl_SetValue,  1,  1 );
    wAddMethod( _wxTextCtrl, "ShowPosition", wxTextCtrl_ShowPosition,  1,  1 );
    wAddMethod( _wxTextCtrl, "Undo", wxTextCtrl_Undo,  0,  0 );
    wAddMethod( _wxTextCtrl, "WriteText", wxTextCtrl_WriteText,  1,  1 );
    wAddMethod( _wxTextCtrl, "XYToPosition", wxTextCtrl_XYToPosition,  2,  2 );
    wAddMethod( _wxTreeCtrl, "del", wxTreeCtrl_del, 0, 0 );
    wAddMethod( _wxTreeCtrl, "new", wxTreeCtrl_new,  2,  7 );
    wAddMethod( _wxTreeCtrl, "dtor", wxTreeCtrl_dtor,  0,  0 );
    wAddMethod( _wxTreeCtrl, "AddRoot", wxTreeCtrl_AddRoot,  1,  4 );
    wAddMethod( _wxTreeCtrl, "AppendItem", wxTreeCtrl_AppendItem,  2,  5 );
    wAddMethod( _wxTreeCtrl, "Collapse", wxTreeCtrl_Collapse,  1,  1 );
    wAddMethod( _wxTreeCtrl, "CollapseAndReset", wxTreeCtrl_CollapseAndReset,  1,  1 );
    wAddMethod( _wxTreeCtrl, "Create", wxTreeCtrl_Create,  2,  7 );
    wAddMethod( _wxTreeCtrl, "Delete", wxTreeCtrl_Delete,  1,  1 );
    wAddMethod( _wxTreeCtrl, "DeleteAllItems", wxTreeCtrl_DeleteAllItems,  0,  0 );
    wAddMethod( _wxTreeCtrl, "EditLabel", wxTreeCtrl_EditLabel,  1,  1 );
    wAddMethod( _wxTreeCtrl, "EnsureVisible", wxTreeCtrl_EnsureVisible,  1,  1 );
    wAddMethod( _wxTreeCtrl, "Expand", wxTreeCtrl_Expand,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetChildrenCount", wxTreeCtrl_GetChildrenCount,  1,  2 );
    wAddMethod( _wxTreeCtrl, "GetCount", wxTreeCtrl_GetCount,  0,  0 );
    wAddMethod( _wxTreeCtrl, "GetFirstChild", wxTreeCtrl_GetFirstChild,  2,  2 );
    wAddMethod( _wxTreeCtrl, "GetFirstVisibleItem", wxTreeCtrl_GetFirstVisibleItem,  0,  0 );
    wAddMethod( _wxTreeCtrl, "GetImageList", wxTreeCtrl_GetImageList,  0,  0 );
    wAddMethod( _wxTreeCtrl, "GetIndent", wxTreeCtrl_GetIndent,  0,  0 );
    wAddMethod( _wxTreeCtrl, "GetItemData", wxTreeCtrl_GetItemData,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetItemImage", wxTreeCtrl_GetItemImage,  1,  2 );
    wAddMethod( _wxTreeCtrl, "GetItemText", wxTreeCtrl_GetItemText,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetLastChild", wxTreeCtrl_GetLastChild,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetNextChild", wxTreeCtrl_GetNextChild,  2,  2 );
    wAddMethod( _wxTreeCtrl, "GetNextSibling", wxTreeCtrl_GetNextSibling,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetNextVisible", wxTreeCtrl_GetNextVisible,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetParent", wxTreeCtrl_GetParent,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetPrevSibling", wxTreeCtrl_GetPrevSibling,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetPrevVisible", wxTreeCtrl_GetPrevVisible,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetRootItem", wxTreeCtrl_GetRootItem,  0,  0 );
    wAddMethod( _wxTreeCtrl, "GetItemSelectedImage", wxTreeCtrl_GetItemSelectedImage,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetSelection", wxTreeCtrl_GetSelection,  0,  0 );
    wAddMethod( _wxTreeCtrl, "GetSelections", wxTreeCtrl_GetSelections,  1,  1 );
    wAddMethod( _wxTreeCtrl, "GetStateImageList", wxTreeCtrl_GetStateImageList,  0,  0 );
    wAddMethod( _wxTreeCtrl, "HitTest", wxTreeCtrl_HitTest,  2,  2 );
    wAddMethod( _wxTreeCtrl, "InsertItem", wxTreeCtrl_InsertItem,  3,  6 );
    wAddMethod( _wxTreeCtrl, "InsertItemBefore", wxTreeCtrl_InsertItemBefore,  3,  6 );
    wAddMethod( _wxTreeCtrl, "IsBold", wxTreeCtrl_IsBold,  1,  1 );
    wAddMethod( _wxTreeCtrl, "IsExpanded", wxTreeCtrl_IsExpanded,  1,  1 );
    wAddMethod( _wxTreeCtrl, "IsSelected", wxTreeCtrl_IsSelected,  1,  1 );
    wAddMethod( _wxTreeCtrl, "IsVisible", wxTreeCtrl_IsVisible,  1,  1 );
    wAddMethod( _wxTreeCtrl, "ItemHasChildren", wxTreeCtrl_ItemHasChildren,  1,  1 );
    wAddMethod( _wxTreeCtrl, "PrependItem", wxTreeCtrl_PrependItem,  2,  5 );
    wAddMethod( _wxTreeCtrl, "ScrollTo", wxTreeCtrl_ScrollTo,  1,  1 );
    wAddMethod( _wxTreeCtrl, "SetIndent", wxTreeCtrl_SetIndent,  1,  1 );
    wAddMethod( _wxTreeCtrl, "SetImageList", wxTreeCtrl_SetImageList,  1,  1 );
    wAddMethod( _wxTreeCtrl, "SetItemBackgroundColour", wxTreeCtrl_SetItemBackgroundColour,  2,  2 );
    wAddMethod( _wxTreeCtrl, "SetItemBackgroundColor", wxTreeCtrl_SetItemBackgroundColour,  2,  2 );
    wAddMethod( _wxTreeCtrl, "SetItemBold", wxTreeCtrl_SetItemBold,  1,  2 );
    wAddMethod( _wxTreeCtrl, "SetItemData", wxTreeCtrl_SetItemData,  2,  2 );
    wAddMethod( _wxTreeCtrl, "SetItemFont", wxTreeCtrl_SetItemFont,  2,  2 );
    wAddMethod( _wxTreeCtrl, "SetItemHasChildren", wxTreeCtrl_SetItemHasChildren,  1,  2 );
    wAddMethod( _wxTreeCtrl, "SetItemImage", wxTreeCtrl_SetItemImage,  2,  3 );
    wAddMethod( _wxTreeCtrl, "SetItemSelectedImage", wxTreeCtrl_SetItemSelectedImage,  2,  2 );
    wAddMethod( _wxTreeCtrl, "SetItemText", wxTreeCtrl_SetItemText,  2,  2 );
    wAddMethod( _wxTreeCtrl, "SetItemTextColour", wxTreeCtrl_SetItemTextColour,  2,  2 );
    wAddMethod( _wxTreeCtrl, "SetItemTextColor", wxTreeCtrl_SetItemTextColour,  2,  2 );
    wAddMethod( _wxTreeCtrl, "SetStateImageList", wxTreeCtrl_SetStateImageList,  1,  1 );
    wAddMethod( _wxTreeCtrl, "SortChildren", wxTreeCtrl_SortChildren,  1,  1 );
    wAddMethod( _wxTreeCtrl, "Toggle", wxTreeCtrl_Toggle,  1,  1 );
    wAddMethod( _wxTreeCtrl, "Unselect", wxTreeCtrl_Unselect,  0,  0 );
    wAddMethod( _wxTreeCtrl, "UnselectAll", wxTreeCtrl_UnselectAll,  0,  0 );
    wAddMethod( _wxScrollBar, "del", wxScrollBar_del, 0, 0 );
    wAddMethod( _wxScrollBar, "new", wxScrollBar_new,  2,  7 );
    wAddMethod( _wxScrollBar, "dtor", wxScrollBar_dtor,  0,  0 );
    wAddMethod( _wxScrollBar, "Create", wxScrollBar_Create,  2,  7 );
    wAddMethod( _wxScrollBar, "GetRange", wxScrollBar_GetRange,  0,  0 );
    wAddMethod( _wxScrollBar, "GetPageSize", wxScrollBar_GetPageSize,  0,  0 );
    wAddMethod( _wxScrollBar, "GetThumbPosition", wxScrollBar_GetThumbPosition,  0,  0 );
    wAddMethod( _wxScrollBar, "SetThumbPosition", wxScrollBar_SetThumbPosition,  1,  1 );
    wAddMethod( _wxScrollBar, "SetScrollbar", wxScrollBar_SetScrollbar,  4,  5 );
    wAddMethod( _wxSpinButton, "del", wxSpinButton_del, 0, 0 );
    wAddMethod( _wxSpinButton, "new", wxSpinButton_new,  1,  6 );
    wAddMethod( _wxSpinButton, "dtor", wxSpinButton_dtor,  0,  0 );
    wAddMethod( _wxSpinButton, "Create", wxSpinButton_Create,  1,  6 );
    wAddMethod( _wxSpinButton, "GetMax", wxSpinButton_GetMax,  0,  0 );
    wAddMethod( _wxSpinButton, "GetMin", wxSpinButton_GetMin,  0,  0 );
    wAddMethod( _wxSpinButton, "GetValue", wxSpinButton_GetValue,  0,  0 );
    wAddMethod( _wxSpinButton, "SetRange", wxSpinButton_SetRange,  2,  2 );
    wAddMethod( _wxSpinButton, "SetValue", wxSpinButton_SetValue,  1,  1 );
    wAddMethod( _wxSpinCtrl, "del", wxSpinCtrl_del, 0, 0 );
    wAddMethod( _wxSpinCtrl, "new", wxSpinCtrl_new,  1,  10 );
    wAddMethod( _wxSpinCtrl, "Create", wxSpinCtrl_Create,  1,  10 );
    wAddMethod( _wxSpinCtrl, "SetValue", wxSpinCtrl_SetValue,  1,  1 );
    wAddMethod( _wxSpinCtrl, "GetValue", wxSpinCtrl_GetValue,  0,  0 );
    wAddMethod( _wxSpinCtrl, "SetRange", wxSpinCtrl_SetRange,  2,  2 );
    wAddMethod( _wxSpinCtrl, "GetMin", wxSpinCtrl_GetMin,  0,  0 );
    wAddMethod( _wxSpinCtrl, "GetMax", wxSpinCtrl_GetMax,  0,  0 );
    wAddMethod( _wxStaticText, "del", wxStaticText_del, 0, 0 );
    wAddMethod( _wxStaticText, "new", wxStaticText_new,  4,  7 );
    wAddMethod( _wxStaticText, "Create", wxStaticText_Create,  4,  7 );
    wAddMethod( _wxStaticText, "GetLabel", wxStaticText_GetLabel,  0,  0 );
    wAddMethod( _wxStaticText, "SetLabel", wxStaticText_SetLabel,  1,  1 );
    wAddMethod( _wxStaticBitmap, "del", wxStaticBitmap_del, 0, 0 );
    wAddMethod( _wxStaticBitmap, "SetBitmap", wxStaticBitmap_SetBitmap,  1,  1 );
    wAddMethod( _wxRadioBox, "del", wxRadioBox_del, 0, 0 );
    wAddMethod( _wxRadioBox, "new", wxRadioBox_new,  3,  11 );
    wAddMethod( _wxRadioBox, "dtor", wxRadioBox_dtor,  0,  0 );
    wAddMethod( _wxRadioBox, "Create", wxRadioBox_Create,  3,  11 );
    wAddMethod( _wxRadioBox, "Enable", wxRadioBox_Enable,  1,  1 );
    wAddMethod( _wxRadioBox, "EnableItem", wxRadioBox_EnableItem,  2,  2 );
    wAddMethod( _wxRadioBox, "FindString", wxRadioBox_FindString,  1,  1 );
    wAddMethod( _wxRadioBox, "GetSelection", wxRadioBox_GetSelection,  0,  0 );
    wAddMethod( _wxRadioBox, "GetStringSelection", wxRadioBox_GetStringSelection,  0,  0 );
    wAddMethod( _wxRadioBox, "SetSelection", wxRadioBox_SetSelection,  1,  1 );
    wAddMethod( _wxRadioBox, "SetStringSelection", wxRadioBox_SetStringSelection,  1,  1 );
    wAddMethod( _wxRadioBox, "Show", wxRadioBox_Show,  1,  1 );
    wAddMethod( _wxRadioBox, "ShowItem", wxRadioBox_ShowItem,  2,  2 );
    wAddMethod( _wxRadioBox, "GetString", wxRadioBox_GetString,  1,  1 );
    wAddMethod( _wxRadioButton, "del", wxRadioButton_del, 0, 0 );
    wAddMethod( _wxRadioButton, "new", wxRadioButton_new,  3,  8 );
    wAddMethod( _wxRadioButton, "dtor", wxRadioButton_dtor,  0,  0 );
    wAddMethod( _wxRadioButton, "Create", wxRadioButton_Create,  3,  8 );
    wAddMethod( _wxRadioButton, "GetValue", wxRadioButton_GetValue,  0,  0 );
    wAddMethod( _wxRadioButton, "SetValue", wxRadioButton_SetValue,  1,  1 );
    wAddMethod( _wxSlider, "del", wxSlider_del, 0, 0 );
    wAddMethod( _wxSlider, "new", wxSlider_new,  5,  10 );
    wAddMethod( _wxSlider, "dtor", wxSlider_dtor,  0,  0 );
    wAddMethod( _wxSlider, "ClearSel", wxSlider_ClearSel,  0,  0 );
    wAddMethod( _wxSlider, "ClearTicks", wxSlider_ClearTicks,  0,  0 );
    wAddMethod( _wxSlider, "Create", wxSlider_Create,  5,  10 );
    wAddMethod( _wxSlider, "GetLineSize", wxSlider_GetLineSize,  0,  0 );
    wAddMethod( _wxSlider, "GetMax", wxSlider_GetMax,  0,  0 );
    wAddMethod( _wxSlider, "GetMin", wxSlider_GetMin,  0,  0 );
    wAddMethod( _wxSlider, "GetPageSize", wxSlider_GetPageSize,  0,  0 );
    wAddMethod( _wxSlider, "GetSelEnd", wxSlider_GetSelEnd,  0,  0 );
    wAddMethod( _wxSlider, "GetSelStart", wxSlider_GetSelStart,  0,  0 );
    wAddMethod( _wxSlider, "GetThumbLength", wxSlider_GetThumbLength,  0,  0 );
    wAddMethod( _wxSlider, "GetTickFreq", wxSlider_GetTickFreq,  0,  0 );
    wAddMethod( _wxSlider, "GetValue", wxSlider_GetValue,  0,  0 );
    wAddMethod( _wxSlider, "SetRange", wxSlider_SetRange,  2,  2 );
    wAddMethod( _wxSlider, "SetTickFreq", wxSlider_SetTickFreq,  2,  2 );
    wAddMethod( _wxSlider, "SetLineSize", wxSlider_SetLineSize,  1,  1 );
    wAddMethod( _wxSlider, "SetPageSize", wxSlider_SetPageSize,  1,  1 );
    wAddMethod( _wxSlider, "SetSelection", wxSlider_SetSelection,  2,  2 );
    wAddMethod( _wxSlider, "SetThumbLength", wxSlider_SetThumbLength,  1,  1 );
    wAddMethod( _wxSlider, "SetTick", wxSlider_SetTick,  1,  1 );
    wAddMethod( _wxSlider, "SetValue", wxSlider_SetValue,  1,  1 );
    wAddMethod( _wxToolBarBase, "del", wxToolBarBase_del, 0, 0 );
    wAddMethod( _wxToolBar, "del", wxToolBar_del, 0, 0 );
    wAddMethod( _wxToolBar, "new", wxToolBar_new,  2,  6 );
    wAddMethod( _wxToolBar, "dtor", wxToolBar_dtor,  0,  0 );
    wAddMethod( _wxToolBar, "AddControl", wxToolBar_AddControl,  1,  1 );
    wAddMethod( _wxToolBar, "AddSeparator", wxToolBar_AddSeparator,  0,  0 );
    wAddMethod( _wxToolBar, "DeleteTool", wxToolBar_DeleteTool,  1,  1 );
    wAddMethod( _wxToolBar, "DeleteToolByPos", wxToolBar_DeleteToolByPos,  1,  1 );
    wAddMethod( _wxToolBar, "EnableTool", wxToolBar_EnableTool,  2,  2 );
    wAddMethod( _wxToolBar, "GetToolSize", wxToolBar_GetToolSize,  0,  0 );
    wAddMethod( _wxToolBar, "GetToolBitmapSize", wxToolBar_GetToolBitmapSize,  0,  0 );
    wAddMethod( _wxToolBar, "GetToolClientData", wxToolBar_GetToolClientData,  1,  1 );
    wAddMethod( _wxToolBar, "GetToolEnabled", wxToolBar_GetToolEnabled,  1,  1 );
    wAddMethod( _wxToolBar, "GetToolLongHelp", wxToolBar_GetToolLongHelp,  1,  1 );
    wAddMethod( _wxToolBar, "GetToolPacking", wxToolBar_GetToolPacking,  0,  0 );
    wAddMethod( _wxToolBar, "GetToolSeparation", wxToolBar_GetToolSeparation,  0,  0 );
    wAddMethod( _wxToolBar, "GetToolShortHelp", wxToolBar_GetToolShortHelp,  1,  1 );
    wAddMethod( _wxToolBar, "GetToolState", wxToolBar_GetToolState,  1,  1 );
    wAddMethod( _wxToolBar, "Realize", wxToolBar_Realize,  0,  0 );
    wAddMethod( _wxToolBar, "SetToolBitmapSize", wxToolBar_SetToolBitmapSize,  1,  1 );
    wAddMethod( _wxToolBar, "SetToolLongHelp", wxToolBar_SetToolLongHelp,  2,  2 );
    wAddMethod( _wxToolBar, "SetToolPacking", wxToolBar_SetToolPacking,  1,  1 );
    wAddMethod( _wxToolBar, "SetToolShortHelp", wxToolBar_SetToolShortHelp,  2,  2 );
    wAddMethod( _wxToolBar, "SetToolSeparation", wxToolBar_SetToolSeparation,  1,  1 );
    wAddMethod( _wxToolBar, "ToggleTool", wxToolBar_ToggleTool,  2,  2 );
    wAddMethod( _wxNotebook, "del", wxNotebook_del, 0, 0 );
    wAddMethod( _wxNotebook, "new", wxNotebook_new,  2,  6 );
    wAddMethod( _wxNotebook, "dtor", wxNotebook_dtor,  0,  0 );
    wAddMethod( _wxNotebook, "AddPage", wxNotebook_AddPage,  2,  4 );
    wAddMethod( _wxNotebook, "AdvanceSelection", wxNotebook_AdvanceSelection,  0,  1 );
    wAddMethod( _wxNotebook, "Create", wxNotebook_Create,  2,  6 );
    wAddMethod( _wxNotebook, "DeleteAllPages", wxNotebook_DeleteAllPages,  0,  0 );
    wAddMethod( _wxNotebook, "DeletePage", wxNotebook_DeletePage,  1,  1 );
    wAddMethod( _wxNotebook, "GetImageList", wxNotebook_GetImageList,  0,  0 );
    wAddMethod( _wxNotebook, "GetPage", wxNotebook_GetPage,  1,  1 );
    wAddMethod( _wxNotebook, "GetPageCount", wxNotebook_GetPageCount,  0,  0 );
    wAddMethod( _wxNotebook, "GetPageImage", wxNotebook_GetPageImage,  1,  1 );
    wAddMethod( _wxNotebook, "GetPageText", wxNotebook_GetPageText,  1,  1 );
    wAddMethod( _wxNotebook, "GetRowCount", wxNotebook_GetRowCount,  0,  0 );
    wAddMethod( _wxNotebook, "GetSelection", wxNotebook_GetSelection,  0,  0 );
    wAddMethod( _wxNotebook, "InsertPage", wxNotebook_InsertPage,  3,  5 );
    wAddMethod( _wxNotebook, "RemovePage", wxNotebook_RemovePage,  1,  1 );
    wAddMethod( _wxNotebook, "SetImageList", wxNotebook_SetImageList,  1,  1 );
    wAddMethod( _wxNotebook, "SetPadding", wxNotebook_SetPadding,  1,  1 );
    wAddMethod( _wxNotebook, "SetPageSize", wxNotebook_SetPageSize,  1,  1 );
    wAddMethod( _wxNotebook, "SetPageImage", wxNotebook_SetPageImage,  2,  2 );
    wAddMethod( _wxNotebook, "SetPageText", wxNotebook_SetPageText,  2,  2 );
    wAddMethod( _wxNotebook, "SetSelection", wxNotebook_SetSelection,  1,  1 );
    wAddMethod( _wxSashWindow, "del", wxSashWindow_del, 0, 0 );
    wAddMethod( _wxSashWindow, "new", wxSashWindow_new,  1,  6 );
    wAddMethod( _wxSashWindow, "dtor", wxSashWindow_dtor,  0,  0 );
    wAddMethod( _wxSashWindow, "GetSashVisible", wxSashWindow_GetSashVisible,  1,  1 );
    wAddMethod( _wxSashWindow, "GetMaximumSizeX", wxSashWindow_GetMaximumSizeX,  0,  0 );
    wAddMethod( _wxSashWindow, "GetMaximumSizeY", wxSashWindow_GetMaximumSizeY,  0,  0 );
    wAddMethod( _wxSashWindow, "GetMinimumSizeX", wxSashWindow_GetMinimumSizeX,  0,  0 );
    wAddMethod( _wxSashWindow, "GetMinimumSizeY", wxSashWindow_GetMinimumSizeY,  0,  0 );
    wAddMethod( _wxSashWindow, "HasBorder", wxSashWindow_HasBorder,  1,  1 );
    wAddMethod( _wxSashWindow, "SetMaximumSizeX", wxSashWindow_SetMaximumSizeX,  1,  1 );
    wAddMethod( _wxSashWindow, "SetMaximumSizeY", wxSashWindow_SetMaximumSizeY,  1,  1 );
    wAddMethod( _wxSashWindow, "SetMinimumSizeX", wxSashWindow_SetMinimumSizeX,  1,  1 );
    wAddMethod( _wxSashWindow, "SetMinimumSizeY", wxSashWindow_SetMinimumSizeY,  1,  1 );
    wAddMethod( _wxSashWindow, "SetSashVisible", wxSashWindow_SetSashVisible,  2,  2 );
    wAddMethod( _wxSashWindow, "SetSashBorder", wxSashWindow_SetSashBorder,  2,  2 );
    wAddMethod( _wxSashLayoutWindow, "del", wxSashLayoutWindow_del, 0, 0 );
    wAddMethod( _wxSashLayoutWindow, "new", wxSashLayoutWindow_new,  1,  6 );
    wAddMethod( _wxSashLayoutWindow, "dtor", wxSashLayoutWindow_dtor,  0,  0 );
    wAddMethod( _wxSashLayoutWindow, "GetAlignment", wxSashLayoutWindow_GetAlignment,  0,  0 );
    wAddMethod( _wxSashLayoutWindow, "GetOrientation", wxSashLayoutWindow_GetOrientation,  0,  0 );
    wAddMethod( _wxSashLayoutWindow, "SetAlignment", wxSashLayoutWindow_SetAlignment,  1,  1 );
    wAddMethod( _wxSashLayoutWindow, "SetDefaultSize", wxSashLayoutWindow_SetDefaultSize,  1,  1 );
    wAddMethod( _wxSashLayoutWindow, "SetOrientation", wxSashLayoutWindow_SetOrientation,  1,  1 );
    wAddMethod( _wxColourDialog, "del", wxColourDialog_del, 0, 0 );
    wAddMethod( _wxColourDialog, "new", wxColourDialog_new,  1,  2 );
    wAddMethod( _wxColourDialog, "dtor", wxColourDialog_dtor,  0,  0 );
    wAddMethod( _wxColourDialog, "Create", wxColourDialog_Create,  1,  2 );
    wAddMethod( _wxColourDialog, "GetColourData", wxColourDialog_GetColourData,  0,  0 );
    wAddMethod( _wxColourDialog, "GetColorData", wxColourDialog_GetColourData,  0,  0 );
    wAddMethod( _wxColourDialog, "ShowModal", wxColourDialog_ShowModal,  0,  0 );
    wAddMethod( _wxFileDialog, "del", wxFileDialog_del, 0, 0 );
    wAddMethod( _wxFileDialog, "new", wxFileDialog_new,  1,  7 );
    wAddMethod( _wxFileDialog, "dtor", wxFileDialog_dtor,  0,  0 );
    wAddMethod( _wxFileDialog, "GetDirectory", wxFileDialog_GetDirectory,  0,  0 );
    wAddMethod( _wxFileDialog, "GetFilename", wxFileDialog_GetFilename,  0,  0 );
    wAddMethod( _wxFileDialog, "GetFilterIndex", wxFileDialog_GetFilterIndex,  0,  0 );
    wAddMethod( _wxFileDialog, "GetMessage", wxFileDialog_GetMessage,  0,  0 );
    wAddMethod( _wxFileDialog, "GetPath", wxFileDialog_GetPath,  0,  0 );
    wAddMethod( _wxFileDialog, "GetStyle", wxFileDialog_GetStyle,  0,  0 );
    wAddMethod( _wxFileDialog, "GetWildcard", wxFileDialog_GetWildcard,  0,  0 );
    wAddMethod( _wxFileDialog, "SetDirectory", wxFileDialog_SetDirectory,  1,  1 );
    wAddMethod( _wxFileDialog, "SetFilename", wxFileDialog_SetFilename,  1,  1 );
    wAddMethod( _wxFileDialog, "SetMessage", wxFileDialog_SetMessage,  1,  1 );
    wAddMethod( _wxFileDialog, "SetPath", wxFileDialog_SetPath,  1,  1 );
    wAddMethod( _wxFileDialog, "SetStyle", wxFileDialog_SetStyle,  1,  1 );
    wAddMethod( _wxFileDialog, "SetWildcard", wxFileDialog_SetWildcard,  1,  1 );
    wAddMethod( _wxFileDialog, "ShowModal", wxFileDialog_ShowModal,  0,  0 );
    wAddMethod( _wxDirDialog, "del", wxDirDialog_del, 0, 0 );
    wAddMethod( _wxDirDialog, "new", wxDirDialog_new,  1,  5 );
    wAddMethod( _wxDirDialog, "dtor", wxDirDialog_dtor,  0,  0 );
    wAddMethod( _wxDirDialog, "GetPath", wxDirDialog_GetPath,  0,  0 );
    wAddMethod( _wxDirDialog, "GetMessage", wxDirDialog_GetMessage,  0,  0 );
    wAddMethod( _wxDirDialog, "GetStyle", wxDirDialog_GetStyle,  0,  0 );
    wAddMethod( _wxDirDialog, "SetMessage", wxDirDialog_SetMessage,  1,  1 );
    wAddMethod( _wxDirDialog, "SetPath", wxDirDialog_SetPath,  1,  1 );
    wAddMethod( _wxDirDialog, "SetStyle", wxDirDialog_SetStyle,  1,  1 );
    wAddMethod( _wxDirDialog, "ShowModal", wxDirDialog_ShowModal,  0,  0 );
    wAddMethod( _wxSingleChoiceDialog, "del", wxSingleChoiceDialog_del, 0, 0 );
    wAddMethod( _wxSingleChoiceDialog, "dtor", wxSingleChoiceDialog_dtor,  0,  0 );
    wAddMethod( _wxSingleChoiceDialog, "GetSelection", wxSingleChoiceDialog_GetSelection,  0,  0 );
    wAddMethod( _wxSingleChoiceDialog, "GetSelectionClientData", wxSingleChoiceDialog_GetSelectionClientData,  0,  0 );
    wAddMethod( _wxSingleChoiceDialog, "GetStringSelection", wxSingleChoiceDialog_GetStringSelection,  0,  0 );
    wAddMethod( _wxSingleChoiceDialog, "SetSelection", wxSingleChoiceDialog_SetSelection,  1,  1 );
    wAddMethod( _wxSingleChoiceDialog, "ShowModal", wxSingleChoiceDialog_ShowModal,  0,  0 );
    wAddMethod( _wxTextEntryDialog, "del", wxTextEntryDialog_del, 0, 0 );
    wAddMethod( _wxTextEntryDialog, "new", wxTextEntryDialog_new,  2,  6 );
    wAddMethod( _wxTextEntryDialog, "dtor", wxTextEntryDialog_dtor,  0,  0 );
    wAddMethod( _wxTextEntryDialog, "GetValue", wxTextEntryDialog_GetValue,  0,  0 );
    wAddMethod( _wxTextEntryDialog, "SetValue", wxTextEntryDialog_SetValue,  1,  1 );
    wAddMethod( _wxTextEntryDialog, "ShowModal", wxTextEntryDialog_ShowModal,  0,  0 );
    wAddMethod( _wxFontDialog, "del", wxFontDialog_del, 0, 0 );
    wAddMethod( _wxFontDialog, "new", wxFontDialog_new,  1,  2 );
    wAddMethod( _wxFontDialog, "dtor", wxFontDialog_dtor,  0,  0 );
    wAddMethod( _wxFontDialog, "GetFontData", wxFontDialog_GetFontData,  0,  0 );
    wAddMethod( _wxFontDialog, "ShowModal", wxFontDialog_ShowModal,  0,  0 );
    wAddMethod( _wxPageSetupDialog, "del", wxPageSetupDialog_del, 0, 0 );
    wAddMethod( _wxPageSetupDialog, "new", wxPageSetupDialog_new,  1,  2 );
    wAddMethod( _wxPageSetupDialog, "dtor", wxPageSetupDialog_dtor,  0,  0 );
    wAddMethod( _wxPageSetupDialog, "GetPageSetupData", wxPageSetupDialog_GetPageSetupData,  0,  0 );
    wAddMethod( _wxPageSetupDialog, "ShowModal", wxPageSetupDialog_ShowModal,  0,  0 );
    wAddMethod( _wxPrintDialog, "del", wxPrintDialog_del, 0, 0 );
    wAddMethod( _wxPrintDialog, "new", wxPrintDialog_new,  1,  2 );
    wAddMethod( _wxPrintDialog, "dtor", wxPrintDialog_dtor,  0,  0 );
    wAddMethod( _wxPrintDialog, "GetPrintDialogData", wxPrintDialog_GetPrintDialogData,  0,  0 );
    wAddMethod( _wxPrintDialog, "GetPrintDC", wxPrintDialog_GetPrintDC,  0,  0 );
    wAddMethod( _wxPrintDialog, "ShowModal", wxPrintDialog_ShowModal,  0,  0 );
    wAddMethod( _wxMessageDialog, "del", wxMessageDialog_del, 0, 0 );
    wAddMethod( _wxMessageDialog, "new", wxMessageDialog_new,  2,  5 );
    wAddMethod( _wxMessageDialog, "dtor", wxMessageDialog_dtor,  0,  0 );
    wAddMethod( _wxMessageDialog, "ShowModal", wxMessageDialog_ShowModal,  0,  0 );
    wAddMethod( _wxMenu, "del", wxMenu_del, 0, 0 );
    wAddMethod( _wxMenu, "new", wxMenu_new,  0,  2 );
    wAddMethod( _wxMenu, "dtor", wxMenu_dtor,  0,  0 );
    wAddMethod( _wxMenu, "Append", wxMenu_Append,  2,  4 );
    wAddMethod( _wxMenu, "AppendMenu", wxMenu_AppendMenu,  3,  4 );
    wAddMethod( _wxMenu, "AppendItem", wxMenu_AppendItem,  1,  1 );
    wAddMethod( _wxMenu, "AppendSeparator", wxMenu_AppendSeparator,  0,  0 );
    wAddMethod( _wxMenu, "Break", wxMenu_Break,  0,  0 );
    wAddMethod( _wxMenu, "Check", wxMenu_Check,  2,  2 );
    wAddMethod( _wxMenu, "Delete", wxMenu_Delete,  1,  1 );
    wAddMethod( _wxMenu, "DeleteItem", wxMenu_DeleteItem,  1,  1 );
    wAddMethod( _wxMenu, "Destroy", wxMenu_Destroy,  1,  1 );
    wAddMethod( _wxMenu, "DestroyMenuItem", wxMenu_DestroyMenuItem,  1,  1 );
    wAddMethod( _wxMenu, "Enable", wxMenu_Enable,  2,  2 );
    wAddMethod( _wxMenu, "FindItem", wxMenu_FindItem,  1,  1 );
    wAddMethod( _wxMenu, "GetHelpString", wxMenu_GetHelpString,  1,  1 );
    wAddMethod( _wxMenu, "GetLabel", wxMenu_GetLabel,  1,  1 );
    wAddMethod( _wxMenu, "GetMenuItemCount", wxMenu_GetMenuItemCount,  0,  0 );
    wAddMethod( _wxMenu, "GetMenuItems", wxMenu_GetMenuItems,  0,  0 );
    wAddMethod( _wxMenu, "GetTitle", wxMenu_GetTitle,  0,  0 );
    wAddMethod( _wxMenu, "Insert", wxMenu_Insert,  2,  2 );
    wAddMethod( _wxMenu, "IsChecked", wxMenu_IsChecked,  1,  1 );
    wAddMethod( _wxMenu, "IsEnabled", wxMenu_IsEnabled,  1,  1 );
    wAddMethod( _wxMenu, "RemoveById", wxMenu_RemoveById,  1,  1 );
    wAddMethod( _wxMenu, "Remove", wxMenu_Remove,  1,  1 );
    wAddMethod( _wxMenu, "SetHelpString", wxMenu_SetHelpString,  2,  2 );
    wAddMethod( _wxMenu, "SetLabel", wxMenu_SetLabel,  2,  2 );
    wAddMethod( _wxMenu, "SetTitle", wxMenu_SetTitle,  1,  1 );
    wAddMethod( _wxMenu, "UpdateUI", wxMenu_UpdateUI,  0,  1 );
    wAddMethod( _wxMenuBar, "del", wxMenuBar_del, 0, 0 );
    wAddMethod( _wxMenuBar, "new", wxMenuBar_new,  0,  1 );
    wAddMethod( _wxMenuBar, "dtor", wxMenuBar_dtor,  0,  0 );
    wAddMethod( _wxMenuBar, "Append", wxMenuBar_Append,  2,  2 );
    wAddMethod( _wxMenuBar, "Check", wxMenuBar_Check,  2,  2 );
    wAddMethod( _wxMenuBar, "Enable", wxMenuBar_Enable,  2,  2 );
    wAddMethod( _wxMenuBar, "EnableTop", wxMenuBar_EnableTop,  2,  2 );
    wAddMethod( _wxMenuBar, "FindMenu", wxMenuBar_FindMenu,  1,  1 );
    wAddMethod( _wxMenuBar, "FindMenuItem", wxMenuBar_FindMenuItem,  2,  2 );
    wAddMethod( _wxMenuBar, "GetHelpString", wxMenuBar_GetHelpString,  1,  1 );
    wAddMethod( _wxMenuBar, "GetLabel", wxMenuBar_GetLabel,  1,  1 );
    wAddMethod( _wxMenuBar, "GetLabelTop", wxMenuBar_GetLabelTop,  1,  1 );
    wAddMethod( _wxMenuBar, "GetMenu", wxMenuBar_GetMenu,  1,  1 );
    wAddMethod( _wxMenuBar, "GetMenuCount", wxMenuBar_GetMenuCount,  0,  0 );
    wAddMethod( _wxMenuBar, "Insert", wxMenuBar_Insert,  3,  3 );
    wAddMethod( _wxMenuBar, "IsChecked", wxMenuBar_IsChecked,  1,  1 );
    wAddMethod( _wxMenuBar, "IsEnabled", wxMenuBar_IsEnabled,  1,  1 );
    wAddMethod( _wxMenuBar, "Refresh", wxMenuBar_Refresh,  0,  0 );
    wAddMethod( _wxMenuBar, "Remove", wxMenuBar_Remove,  1,  1 );
    wAddMethod( _wxMenuBar, "Replace", wxMenuBar_Replace,  3,  3 );
    wAddMethod( _wxMenuBar, "SetHelpString", wxMenuBar_SetHelpString,  2,  2 );
    wAddMethod( _wxMenuBar, "SetLabel", wxMenuBar_SetLabel,  2,  2 );
    wAddMethod( _wxMenuBar, "SetLabelTop", wxMenuBar_SetLabelTop,  2,  2 );
    wAddMethod( _wxMenuItem, "del", wxMenuItem_del, 0, 0 );
    wAddMethod( _wxMenuItem, "new", wxMenuItem_new,  0,  6 );
    wAddMethod( _wxMenuItem, "dtor", wxMenuItem_dtor,  0,  0 );
    wAddMethod( _wxMenuItem, "Check", wxMenuItem_Check,  1,  1 );
    wAddMethod( _wxMenuItem, "Enable", wxMenuItem_Enable,  1,  1 );
    wAddMethod( _wxMenuItem, "GetHelp", wxMenuItem_GetHelp,  0,  0 );
    wAddMethod( _wxMenuItem, "GetId", wxMenuItem_GetId,  0,  0 );
    wAddMethod( _wxMenuItem, "GetLabel", wxMenuItem_GetLabel,  0,  0 );
    wAddMethod( _wxMenuItem, "GetLabelFromText", wxMenuItem_GetLabelFromText,  1,  1 );
    wAddMethod( _wxMenuItem, "GetText", wxMenuItem_GetText,  0,  0 );
    wAddMethod( _wxMenuItem, "GetSubMenu", wxMenuItem_GetSubMenu,  0,  0 );
    wAddMethod( _wxMenuItem, "IsCheckable", wxMenuItem_IsCheckable,  0,  0 );
    wAddMethod( _wxMenuItem, "IsChecked", wxMenuItem_IsChecked,  0,  0 );
    wAddMethod( _wxMenuItem, "IsEnabled", wxMenuItem_IsEnabled,  0,  0 );
    wAddMethod( _wxMenuItem, "IsSeparator", wxMenuItem_IsSeparator,  0,  0 );
    wAddMethod( _wxMenuItem, "SetHelp", wxMenuItem_SetHelp,  1,  1 );
    wAddMethod( _wxEvent, "del", wxEvent_del, 0, 0 );
    wAddMethod( _wxEvent, "GetEventObject", wxEvent_GetEventObject,  0,  0 );
    wAddMethod( _wxEvent, "GetEventType", wxEvent_GetEventType,  0,  0 );
    wAddMethod( _wxEvent, "GetId", wxEvent_GetId,  0,  0 );
    wAddMethod( _wxEvent, "GetSkipped", wxEvent_GetSkipped,  0,  0 );
    wAddMethod( _wxEvent, "GetTimestamp", wxEvent_GetTimestamp,  0,  0 );
    wAddMethod( _wxEvent, "SetEventObject", wxEvent_SetEventObject,  1,  1 );
    wAddMethod( _wxEvent, "SetEventType", wxEvent_SetEventType,  1,  1 );
    wAddMethod( _wxEvent, "SetId", wxEvent_SetId,  1,  1 );
    wAddMethod( _wxEvent, "SetTimestamp", wxEvent_SetTimestamp,  1,  1 );
    wAddMethod( _wxEvent, "Skip", wxEvent_Skip,  0,  1 );
    wAddMethod( _wxTimerEvent, "del", wxTimerEvent_del, 0, 0 );
    wAddMethod( _wxTimerEvent, "GetInterval", wxTimerEvent_GetInterval,  0,  0 );
    wAddMethod( _wxCommandEvent, "del", wxCommandEvent_del, 0, 0 );
    wAddMethod( _wxCommandEvent, "new", wxCommandEvent_new,  0,  2 );
    wAddMethod( _wxCommandEvent, "GetClientData", wxCommandEvent_GetClientData,  0,  0 );
    wAddMethod( _wxCommandEvent, "GetExtraLong", wxCommandEvent_GetExtraLong,  0,  0 );
    wAddMethod( _wxCommandEvent, "GetInt", wxCommandEvent_GetInt,  0,  0 );
    wAddMethod( _wxCommandEvent, "GetSelection", wxCommandEvent_GetSelection,  0,  0 );
    wAddMethod( _wxCommandEvent, "GetString", wxCommandEvent_GetString,  0,  0 );
    wAddMethod( _wxCommandEvent, "IsChecked", wxCommandEvent_IsChecked,  0,  0 );
    wAddMethod( _wxCommandEvent, "IsSelection", wxCommandEvent_IsSelection,  0,  0 );
    wAddMethod( _wxCommandEvent, "SetClientData", wxCommandEvent_SetClientData,  1,  1 );
    wAddMethod( _wxCommandEvent, "SetExtraLong", wxCommandEvent_SetExtraLong,  1,  1 );
    wAddMethod( _wxCommandEvent, "SetInt", wxCommandEvent_SetInt,  1,  1 );
    wAddMethod( _wxCommandEvent, "SetString", wxCommandEvent_SetString,  1,  1 );
    wAddMethod( _wxNotifyEvent, "del", wxNotifyEvent_del, 0, 0 );
    wAddMethod( _wxNotifyEvent, "new", wxNotifyEvent_new,  0,  2 );
    wAddMethod( _wxNotifyEvent, "IsAllowed", wxNotifyEvent_IsAllowed,  0,  0 );
    wAddMethod( _wxNotifyEvent, "Veto", wxNotifyEvent_Veto,  0,  0 );
    wAddMethod( _wxActivateEvent, "del", wxActivateEvent_del, 0, 0 );
    wAddMethod( _wxActivateEvent, "new", wxActivateEvent_new,  0,  3 );
    wAddMethod( _wxActivateEvent, "GetActive", wxActivateEvent_GetActive,  0,  0 );
    wAddMethod( _wxCalendarEvent, "del", wxCalendarEvent_del, 0, 0 );
    wAddMethod( _wxCalendarEvent, "new", wxCalendarEvent_new,  2,  2 );
    wAddMethod( _wxCalendarEvent, "GetDate", wxCalendarEvent_GetDate,  0,  0 );
    wAddMethod( _wxCalendarEvent, "GetWeekDay", wxCalendarEvent_GetWeekDay,  0,  0 );
    wAddMethod( _wxCalculateLayoutEvent, "del", wxCalculateLayoutEvent_del, 0, 0 );
    wAddMethod( _wxCalculateLayoutEvent, "new", wxCalculateLayoutEvent_new,  0,  1 );
    wAddMethod( _wxCalculateLayoutEvent, "GetFlags", wxCalculateLayoutEvent_GetFlags,  0,  0 );
    wAddMethod( _wxCalculateLayoutEvent, "GetRect", wxCalculateLayoutEvent_GetRect,  0,  0 );
    wAddMethod( _wxCalculateLayoutEvent, "SetFlags", wxCalculateLayoutEvent_SetFlags,  1,  1 );
    wAddMethod( _wxCalculateLayoutEvent, "SetRect", wxCalculateLayoutEvent_SetRect,  1,  1 );
    wAddMethod( _wxCloseEvent, "del", wxCloseEvent_del, 0, 0 );
    wAddMethod( _wxCloseEvent, "new", wxCloseEvent_new,  0,  2 );
    wAddMethod( _wxCloseEvent, "CanVeto", wxCloseEvent_CanVeto,  0,  0 );
    wAddMethod( _wxCloseEvent, "GetLoggingOff", wxCloseEvent_GetLoggingOff,  0,  0 );
    wAddMethod( _wxCloseEvent, "SetCanVeto", wxCloseEvent_SetCanVeto,  1,  1 );
    wAddMethod( _wxCloseEvent, "SetLoggingOff", wxCloseEvent_SetLoggingOff,  1,  1 );
    wAddMethod( _wxCloseEvent, "Veto", wxCloseEvent_Veto,  0,  1 );
    wAddMethod( _wxDialUpEvent, "del", wxDialUpEvent_del, 0, 0 );
    wAddMethod( _wxDialUpEvent, "new", wxDialUpEvent_new,  2,  2 );
    wAddMethod( _wxDialUpEvent, "IsConnectedEvent", wxDialUpEvent_IsConnectedEvent,  0,  0 );
    wAddMethod( _wxDialUpEvent, "IsOwnEvent", wxDialUpEvent_IsOwnEvent,  0,  0 );
    wAddMethod( _wxDropFilesEvent, "del", wxDropFilesEvent_del, 0, 0 );
    wAddMethod( _wxDropFilesEvent, "GetFiles", wxDropFilesEvent_GetFiles,  0,  0 );
    wAddMethod( _wxDropFilesEvent, "GetNumberOfFiles", wxDropFilesEvent_GetNumberOfFiles,  0,  0 );
    wAddMethod( _wxDropFilesEvent, "GetPosition", wxDropFilesEvent_GetPosition,  0,  0 );
    wAddMethod( _wxEraseEvent, "del", wxEraseEvent_del, 0, 0 );
    wAddMethod( _wxEraseEvent, "new", wxEraseEvent_new,  0,  2 );
    wAddMethod( _wxEraseEvent, "GetDC", wxEraseEvent_GetDC,  0,  0 );
    wAddMethod( _wxFocusEvent, "del", wxFocusEvent_del, 0, 0 );
    wAddMethod( _wxFocusEvent, "new", wxFocusEvent_new,  0,  2 );
    wAddMethod( _wxKeyEvent, "del", wxKeyEvent_del, 0, 0 );
    wAddMethod( _wxKeyEvent, "new", wxKeyEvent_new,  1,  1 );
    wAddMethod( _wxKeyEvent, "AltDown", wxKeyEvent_AltDown,  0,  0 );
    wAddMethod( _wxKeyEvent, "ControlDown", wxKeyEvent_ControlDown,  0,  0 );
    wAddMethod( _wxKeyEvent, "GetKeyCode", wxKeyEvent_GetKeyCode,  0,  0 );
    wAddMethod( _wxKeyEvent, "GetX", wxKeyEvent_GetX,  0,  0 );
    wAddMethod( _wxKeyEvent, "GetY", wxKeyEvent_GetY,  0,  0 );
    wAddMethod( _wxKeyEvent, "MetaDown", wxKeyEvent_MetaDown,  0,  0 );
    wAddMethod( _wxKeyEvent, "GetPosition", wxKeyEvent_GetPosition,  0,  0 );
    wAddMethod( _wxKeyEvent, "GetPositionX", wxKeyEvent_GetPositionX,  0 , 0 );
    wAddMethod( _wxKeyEvent, "GetPositionY", wxKeyEvent_GetPositionY,  0 , 0 );
    wAddMethod( _wxKeyEvent, "HasModifiers", wxKeyEvent_HasModifiers,  0,  0 );
    wAddMethod( _wxKeyEvent, "ShiftDown", wxKeyEvent_ShiftDown,  0,  0 );
    wAddMethod( _wxIdleEvent, "del", wxIdleEvent_del, 0, 0 );
    wAddMethod( _wxIdleEvent, "new", wxIdleEvent_new,  0,  0 );
    wAddMethod( _wxIdleEvent, "RequestMore", wxIdleEvent_RequestMore,  0,  1 );
    wAddMethod( _wxIdleEvent, "MoreRequested", wxIdleEvent_MoreRequested,  0,  0 );
    wAddMethod( _wxInitDialogEvent, "del", wxInitDialogEvent_del, 0, 0 );
    wAddMethod( _wxInitDialogEvent, "new", wxInitDialogEvent_new,  0,  1 );
    wAddMethod( _wxJoystickEvent, "del", wxJoystickEvent_del, 0, 0 );
    wAddMethod( _wxJoystickEvent, "new", wxJoystickEvent_new,  0,  4 );
    wAddMethod( _wxJoystickEvent, "ButtonDown", wxJoystickEvent_ButtonDown,  0,  1 );
    wAddMethod( _wxJoystickEvent, "ButtonIsDown", wxJoystickEvent_ButtonIsDown,  0,  1 );
    wAddMethod( _wxJoystickEvent, "ButtonUp", wxJoystickEvent_ButtonUp,  0,  1 );
    wAddMethod( _wxJoystickEvent, "GetButtonChange", wxJoystickEvent_GetButtonChange,  0,  0 );
    wAddMethod( _wxJoystickEvent, "GetButtonState", wxJoystickEvent_GetButtonState,  0,  0 );
    wAddMethod( _wxJoystickEvent, "GetJoystick", wxJoystickEvent_GetJoystick,  0,  0 );
    wAddMethod( _wxJoystickEvent, "GetPosition", wxJoystickEvent_GetPosition,  0,  0 );
    wAddMethod( _wxJoystickEvent, "GetZPosition", wxJoystickEvent_GetZPosition,  0,  0 );
    wAddMethod( _wxJoystickEvent, "IsButton", wxJoystickEvent_IsButton,  0,  0 );
    wAddMethod( _wxJoystickEvent, "IsMove", wxJoystickEvent_IsMove,  0,  0 );
    wAddMethod( _wxJoystickEvent, "IsZMove", wxJoystickEvent_IsZMove,  0,  0 );
    wAddMethod( _wxListEvent, "del", wxListEvent_del, 0, 0 );
    wAddMethod( _wxListEvent, "new", wxListEvent_new,  0,  2 );
    wAddMethod( _wxListEvent, "GetCode", wxListEvent_GetCode,  0,  0 );
    wAddMethod( _wxListEvent, "GetIndex", wxListEvent_GetIndex,  0,  0 );
    wAddMethod( _wxListEvent, "GetColumn", wxListEvent_GetColumn,  0,  0 );
    wAddMethod( _wxListEvent, "GetPoint", wxListEvent_GetPoint,  0,  0 );
    wAddMethod( _wxListEvent, "GetLabel", wxListEvent_GetLabel,  0,  0 );
    wAddMethod( _wxListEvent, "GetText", wxListEvent_GetText,  0,  0 );
    wAddMethod( _wxListEvent, "GetImage", wxListEvent_GetImage,  0,  0 );
    wAddMethod( _wxListEvent, "GetData", wxListEvent_GetData,  0,  0 );
    wAddMethod( _wxListEvent, "GetMask", wxListEvent_GetMask,  0,  0 );
    wAddMethod( _wxListEvent, "GetItem", wxListEvent_GetItem,  0,  0 );
    wAddMethod( _wxMenuEvent, "del", wxMenuEvent_del, 0, 0 );
    wAddMethod( _wxMenuEvent, "new", wxMenuEvent_new,  0,  2 );
    wAddMethod( _wxMenuEvent, "GetMenuId", wxMenuEvent_GetMenuId,  0,  0 );
    wAddMethod( _wxMouseEvent, "del", wxMouseEvent_del, 0, 0 );
    wAddMethod( _wxMouseEvent, "AltDown", wxMouseEvent_AltDown,  0,  0 );
    wAddMethod( _wxMouseEvent, "Button", wxMouseEvent_Button,  1,  1 );
    wAddMethod( _wxMouseEvent, "ButtonDClick", wxMouseEvent_ButtonDClick,  0,  1 );
    wAddMethod( _wxMouseEvent, "ButtonDown", wxMouseEvent_ButtonDown,  0,  1 );
    wAddMethod( _wxMouseEvent, "ButtonUp", wxMouseEvent_ButtonUp,  0,  1 );
    wAddMethod( _wxMouseEvent, "ControlDown", wxMouseEvent_ControlDown,  0,  0 );
    wAddMethod( _wxMouseEvent, "Dragging", wxMouseEvent_Dragging,  0,  0 );
    wAddMethod( _wxMouseEvent, "Entering", wxMouseEvent_Entering,  0,  0 );
    wAddMethod( _wxMouseEvent, "GetPosition", wxMouseEvent_GetPosition,  0,  0 );
    wAddMethod( _wxMouseEvent, "GetPositionX", wxMouseEvent_GetPositionX,  0 , 0 );
    wAddMethod( _wxMouseEvent, "GetPositionY", wxMouseEvent_GetPositionY,  0 , 0 );
    wAddMethod( _wxMouseEvent, "GetLogicalPosition", wxMouseEvent_GetLogicalPosition,  1,  1 );
    wAddMethod( _wxMouseEvent, "GetX", wxMouseEvent_GetX,  0,  0 );
    wAddMethod( _wxMouseEvent, "GetY", wxMouseEvent_GetY,  0,  0 );
    wAddMethod( _wxMouseEvent, "IsButton", wxMouseEvent_IsButton,  0,  0 );
    wAddMethod( _wxMouseEvent, "Leaving", wxMouseEvent_Leaving,  0,  0 );
    wAddMethod( _wxMouseEvent, "LeftDClick", wxMouseEvent_LeftDClick,  0,  0 );
    wAddMethod( _wxMouseEvent, "LeftDown", wxMouseEvent_LeftDown,  0,  0 );
    wAddMethod( _wxMouseEvent, "LeftIsDown", wxMouseEvent_LeftIsDown,  0,  0 );
    wAddMethod( _wxMouseEvent, "LeftUp", wxMouseEvent_LeftUp,  0,  0 );
    wAddMethod( _wxMouseEvent, "MetaDown", wxMouseEvent_MetaDown,  0,  0 );
    wAddMethod( _wxMouseEvent, "MiddleDClick", wxMouseEvent_MiddleDClick,  0,  0 );
    wAddMethod( _wxMouseEvent, "MiddleDown", wxMouseEvent_MiddleDown,  0,  0 );
    wAddMethod( _wxMouseEvent, "MiddleIsDown", wxMouseEvent_MiddleIsDown,  0,  0 );
    wAddMethod( _wxMouseEvent, "MiddleUp", wxMouseEvent_MiddleUp,  0,  0 );
    wAddMethod( _wxMouseEvent, "Moving", wxMouseEvent_Moving,  0,  0 );
    wAddMethod( _wxMouseEvent, "RightDClick", wxMouseEvent_RightDClick,  0,  0 );
    wAddMethod( _wxMouseEvent, "RightDown", wxMouseEvent_RightDown,  0,  0 );
    wAddMethod( _wxMouseEvent, "RightIsDown", wxMouseEvent_RightIsDown,  0,  0 );
    wAddMethod( _wxMouseEvent, "RightUp", wxMouseEvent_RightUp,  0,  0 );
    wAddMethod( _wxMouseEvent, "ShiftDown", wxMouseEvent_ShiftDown,  0,  0 );
    wAddMethod( _wxMoveEvent, "del", wxMoveEvent_del, 0, 0 );
    wAddMethod( _wxMoveEvent, "new", wxMoveEvent_new,  1,  2 );
    wAddMethod( _wxMoveEvent, "GetPosition", wxMoveEvent_GetPosition,  0,  0 );
    wAddMethod( _wxNotebookEvent, "del", wxNotebookEvent_del, 0, 0 );
    wAddMethod( _wxNotebookEvent, "new", wxNotebookEvent_new,  0,  4 );
    wAddMethod( _wxNotebookEvent, "GetOldSelection", wxNotebookEvent_GetOldSelection,  0,  0 );
    wAddMethod( _wxNotebookEvent, "GetSelection", wxNotebookEvent_GetSelection,  0,  0 );
    wAddMethod( _wxNotebookEvent, "SetOldSelection", wxNotebookEvent_SetOldSelection,  1,  1 );
    wAddMethod( _wxNotebookEvent, "SetSelection", wxNotebookEvent_SetSelection,  1,  1 );
    wAddMethod( _wxPaintEvent, "del", wxPaintEvent_del, 0, 0 );
    wAddMethod( _wxPaintEvent, "new", wxPaintEvent_new,  0,  1 );
    wAddMethod( _wxProcessEvent, "del", wxProcessEvent_del, 0, 0 );
    wAddMethod( _wxProcessEvent, "new", wxProcessEvent_new,  0,  2 );
    wAddMethod( _wxProcessEvent, "GetPid", wxProcessEvent_GetPid,  0,  0 );
    wAddMethod( _wxQueryLayoutInfoEvent, "del", wxQueryLayoutInfoEvent_del, 0, 0 );
    wAddMethod( _wxQueryLayoutInfoEvent, "new", wxQueryLayoutInfoEvent_new,  0,  1 );
    wAddMethod( _wxQueryLayoutInfoEvent, "GetFlags", wxQueryLayoutInfoEvent_GetFlags,  0,  0 );
    wAddMethod( _wxQueryLayoutInfoEvent, "GetOrientation", wxQueryLayoutInfoEvent_GetOrientation,  0,  0 );
    wAddMethod( _wxQueryLayoutInfoEvent, "GetRequestedLength", wxQueryLayoutInfoEvent_GetRequestedLength,  0,  0 );
    wAddMethod( _wxQueryLayoutInfoEvent, "GetSize", wxQueryLayoutInfoEvent_GetSize,  0,  0 );
    wAddMethod( _wxQueryLayoutInfoEvent, "SetAlignment", wxQueryLayoutInfoEvent_SetAlignment,  1,  1 );
    wAddMethod( _wxQueryLayoutInfoEvent, "SetFlags", wxQueryLayoutInfoEvent_SetFlags,  1,  1 );
    wAddMethod( _wxQueryLayoutInfoEvent, "SetOrientation", wxQueryLayoutInfoEvent_SetOrientation,  1,  1 );
    wAddMethod( _wxQueryLayoutInfoEvent, "SetRequestedLength", wxQueryLayoutInfoEvent_SetRequestedLength,  1,  1 );
    wAddMethod( _wxQueryLayoutInfoEvent, "SetSize", wxQueryLayoutInfoEvent_SetSize,  1,  1 );
    wAddMethod( _wxScrollEvent, "del", wxScrollEvent_del, 0, 0 );
    wAddMethod( _wxScrollEvent, "new", wxScrollEvent_new,  0,  4 );
    wAddMethod( _wxScrollEvent, "GetOrientation", wxScrollEvent_GetOrientation,  0,  0 );
    wAddMethod( _wxScrollEvent, "GetPosition", wxScrollEvent_GetPosition,  0,  0 );
    wAddMethod( _wxScrollWinEvent, "del", wxScrollWinEvent_del, 0, 0 );
    wAddMethod( _wxScrollWinEvent, "GetOrientation", wxScrollWinEvent_GetOrientation,  0,  0 );
    wAddMethod( _wxScrollWinEvent, "GetPosition", wxScrollWinEvent_GetPosition,  0,  0 );
    wAddMethod( _wxSizeEvent, "del", wxSizeEvent_del, 0, 0 );
    wAddMethod( _wxSizeEvent, "new", wxSizeEvent_new,  1,  2 );
    wAddMethod( _wxSizeEvent, "GetSize", wxSizeEvent_GetSize,  0,  0 );
    wAddMethod( _wxSocketEvent, "del", wxSocketEvent_del, 0, 0 );
    wAddMethod( _wxSocketEvent, "new", wxSocketEvent_new,  0,  1 );
    wAddMethod( _wxSocketEvent, "GetClientData", wxSocketEvent_GetClientData,  0,  0 );
    wAddMethod( _wxSocketEvent, "GetSocket", wxSocketEvent_GetSocket,  0,  0 );
    wAddMethod( _wxSocketEvent, "GetSocketEvent", wxSocketEvent_GetSocketEvent,  0,  0 );
    wAddMethod( _wxSpinEvent, "del", wxSpinEvent_del, 0, 0 );
    wAddMethod( _wxSpinEvent, "new", wxSpinEvent_new,  0,  2 );
    wAddMethod( _wxSpinEvent, "GetPosition", wxSpinEvent_GetPosition,  0,  0 );
    wAddMethod( _wxSpinEvent, "SetPosition", wxSpinEvent_SetPosition,  1,  1 );
    wAddMethod( _wxSysColourChangedEvent, "del", wxSysColourChangedEvent_del, 0, 0 );
    wAddMethod( _wxSysColourChangedEvent, "new", wxSysColourChangedEvent_new,  0,  0 );
    wAddMethod( _wxTreeEvent, "del", wxTreeEvent_del, 0, 0 );
    wAddMethod( _wxTreeEvent, "new", wxTreeEvent_new,  0,  2 );
    wAddMethod( _wxTreeEvent, "GetItem", wxTreeEvent_GetItem,  0,  0 );
    wAddMethod( _wxTreeEvent, "GetOldItem", wxTreeEvent_GetOldItem,  0,  0 );
    wAddMethod( _wxTreeEvent, "GetPoint", wxTreeEvent_GetPoint,  0,  0 );
    wAddMethod( _wxTreeEvent, "GetCode", wxTreeEvent_GetCode,  0,  0 );
    wAddMethod( _wxTreeEvent, "GetLabel", wxTreeEvent_GetLabel,  0,  0 );
    wAddMethod( _wxUpdateUIEvent, "del", wxUpdateUIEvent_del, 0, 0 );
    wAddMethod( _wxUpdateUIEvent, "new", wxUpdateUIEvent_new,  0,  1 );
    wAddMethod( _wxUpdateUIEvent, "Check", wxUpdateUIEvent_Check,  1,  1 );
    wAddMethod( _wxUpdateUIEvent, "Enable", wxUpdateUIEvent_Enable,  1,  1 );
    wAddMethod( _wxUpdateUIEvent, "GetChecked", wxUpdateUIEvent_GetChecked,  0,  0 );
    wAddMethod( _wxUpdateUIEvent, "GetEnabled", wxUpdateUIEvent_GetEnabled,  0,  0 );
    wAddMethod( _wxUpdateUIEvent, "GetSetChecked", wxUpdateUIEvent_GetSetChecked,  0,  0 );
    wAddMethod( _wxUpdateUIEvent, "GetSetEnabled", wxUpdateUIEvent_GetSetEnabled,  0,  0 );
    wAddMethod( _wxUpdateUIEvent, "GetSetText", wxUpdateUIEvent_GetSetText,  0,  0 );
    wAddMethod( _wxUpdateUIEvent, "GetText", wxUpdateUIEvent_GetText,  0,  0 );
    wAddMethod( _wxUpdateUIEvent, "SetText", wxUpdateUIEvent_SetText,  1,  1 );
    wAddMethod( _wxWizardEvent, "del", wxWizardEvent_del, 0, 0 );
    wAddMethod( _wxWizardEvent, "new", wxWizardEvent_new,  0,  3 );
    wAddMethod( _wxWizardEvent, "GetDirection", wxWizardEvent_GetDirection,  0,  0 );
    wAddMethod( _wxSizer, "del", wxSizer_del, 0, 0 );
    wAddMethod( _wxSizer, "dtor", wxSizer_dtor,  0,  0 );
    wAddMethod( _wxSizer, "AddWindow", wxSizer_AddWindow,  1,  5 );
    wAddMethod( _wxSizer, "AddSizer", wxSizer_AddSizer,  1,  5 );
    wAddMethod( _wxSizer, "Add", wxSizer_Add,  2,  6 );
    wAddMethod( _wxSizer, "CalcMin", wxSizer_CalcMin,  0,  0 );
    wAddMethod( _wxSizer, "Fit", wxSizer_Fit,  1,  1 );
    wAddMethod( _wxSizer, "GetSize", wxSizer_GetSize,  0,  0 );
    wAddMethod( _wxSizer, "GetPosition", wxSizer_GetPosition,  0,  0 );
    wAddMethod( _wxSizer, "GetMinSize", wxSizer_GetMinSize,  0,  0 );
    wAddMethod( _wxSizer, "Layout", wxSizer_Layout,  0,  0 );
    wAddMethod( _wxSizer, "PrependWindow", wxSizer_PrependWindow,  1,  5 );
    wAddMethod( _wxSizer, "PrependSizer", wxSizer_PrependSizer,  1,  5 );
    wAddMethod( _wxSizer, "Prepend", wxSizer_Prepend,  2,  6 );
    wAddMethod( _wxSizer, "RecalcSizes", wxSizer_RecalcSizes,  0,  0 );
    wAddMethod( _wxSizer, "RemoveWindow", wxSizer_RemoveWindow,  1,  1 );
    wAddMethod( _wxSizer, "RemoveSizer", wxSizer_RemoveSizer,  1,  1 );
    wAddMethod( _wxSizer, "Remove", wxSizer_Remove,  1,  1 );
    wAddMethod( _wxSizer, "SetDimension", wxSizer_SetDimension,  4,  4 );
    wAddMethod( _wxSizer, "SetMinSize", wxSizer_SetMinSize,  2,  2 );
    wAddMethod( _wxSizer, "SetWindowMinSize", wxSizer_SetWindowMinSize,  3,  3 );
    wAddMethod( _wxSizer, "SetSizerMinSize", wxSizer_SetSizerMinSize,  3,  3 );
    wAddMethod( _wxSizer, "SetItemMinSize", wxSizer_SetItemMinSize,  3,  3 );
    wAddMethod( _wxSizer, "SetSizeHints", wxSizer_SetSizeHints,  1,  1 );
    wAddMethod( _wxGridSizer, "del", wxGridSizer_del, 0, 0 );
    wAddMethod( _wxGridSizer, "new", wxGridSizer_new,  4,  4 );
    wAddMethod( _wxFlexGridSizer, "del", wxFlexGridSizer_del, 0, 0 );
    wAddMethod( _wxFlexGridSizer, "new", wxFlexGridSizer_new,  4,  4 );
    wAddMethod( _wxBoxSizer, "del", wxBoxSizer_del, 0, 0 );
    wAddMethod( _wxBoxSizer, "new", wxBoxSizer_new,  1,  1 );
    wAddMethod( _wxBoxSizer, "RecalcSizes", wxBoxSizer_RecalcSizes,  0,  0 );
    wAddMethod( _wxBoxSizer, "CalcMin", wxBoxSizer_CalcMin,  0,  0 );
    wAddMethod( _wxBoxSizer, "GetOrientation", wxBoxSizer_GetOrientation,  0,  0 );
    wAddMethod( _wxStaticBoxSizer, "del", wxStaticBoxSizer_del, 0, 0 );
    wAddMethod( _wxStaticBoxSizer, "new", wxStaticBoxSizer_new,  2,  2 );
    wAddMethod( _wxStaticBoxSizer, "GetStaticBox", wxStaticBoxSizer_GetStaticBox,  0,  0 );
    wAddMethod( _wxNotebookSizer, "del", wxNotebookSizer_del, 0, 0 );
    wAddMethod( _wxNotebookSizer, "new", wxNotebookSizer_new,  1,  1 );
    wAddMethod( _wxNotebookSizer, "GetNotebook", wxNotebookSizer_GetNotebook,  0,  0 );
    wAddMethod( _wxIndividualLayoutConstraint, "del", wxIndividualLayoutConstraint_del, 0, 0 );
    wAddMethod( _wxIndividualLayoutConstraint, "new", wxIndividualLayoutConstraint_new,  0,  0 );
    wAddMethod( _wxIndividualLayoutConstraint, "Above", wxIndividualLayoutConstraint_Above,  1,  2 );
    wAddMethod( _wxIndividualLayoutConstraint, "Absolute", wxIndividualLayoutConstraint_Absolute,  1,  1 );
    wAddMethod( _wxIndividualLayoutConstraint, "AsIs", wxIndividualLayoutConstraint_AsIs,  0,  0 );
    wAddMethod( _wxIndividualLayoutConstraint, "Below", wxIndividualLayoutConstraint_Below,  1,  2 );
    wAddMethod( _wxIndividualLayoutConstraint, "Unconstrained", wxIndividualLayoutConstraint_Unconstrained,  0,  0 );
    wAddMethod( _wxIndividualLayoutConstraint, "LeftOf", wxIndividualLayoutConstraint_LeftOf,  1,  2 );
    wAddMethod( _wxIndividualLayoutConstraint, "PercentOf", wxIndividualLayoutConstraint_PercentOf,  3,  3 );
    wAddMethod( _wxIndividualLayoutConstraint, "RightOf", wxIndividualLayoutConstraint_RightOf,  1,  2 );
    wAddMethod( _wxIndividualLayoutConstraint, "SameAs", wxIndividualLayoutConstraint_SameAs,  2,  3 );
    wAddMethod( _wxIndividualLayoutConstraint, "Set", wxIndividualLayoutConstraint_Set,  3,  5 );
    wAddMethod( _wxLayoutConstraints, "del", wxLayoutConstraints_del, 0, 0 );
    wAddMethod( _wxLayoutConstraints, "new", wxLayoutConstraints_new,  0,  0 );
    wAddMethod( _wxFont, "del", wxFont_del, 0, 0 );
    wAddMethod( _wxFont, "new", wxFont_new,  4,  7 );
    wAddMethod( _wxFont, "dtor", wxFont_dtor,  0,  0 );
    wAddMethod( _wxFont, "GetDefaultEncoding", wxFont_GetDefaultEncoding,  0,  0 );
    wAddMethod( _wxFont, "GetFaceName", wxFont_GetFaceName,  0,  0 );
    wAddMethod( _wxFont, "GetFamily", wxFont_GetFamily,  0,  0 );
    wAddMethod( _wxFont, "GetPointSize", wxFont_GetPointSize,  0,  0 );
    wAddMethod( _wxFont, "GetStyle", wxFont_GetStyle,  0,  0 );
    wAddMethod( _wxFont, "GetUnderlined", wxFont_GetUnderlined,  0,  0 );
    wAddMethod( _wxFont, "GetWeight", wxFont_GetWeight,  0,  0 );
    wAddMethod( _wxFont, "SetDefaultEncoding", wxFont_SetDefaultEncoding,  1,  1 );
    wAddMethod( _wxFont, "SetFaceName", wxFont_SetFaceName,  1,  1 );
    wAddMethod( _wxFont, "SetFamily", wxFont_SetFamily,  1,  1 );
    wAddMethod( _wxFont, "SetPointSize", wxFont_SetPointSize,  1,  1 );
    wAddMethod( _wxFont, "SetStyle", wxFont_SetStyle,  1,  1 );
    wAddMethod( _wxFont, "SetUnderlined", wxFont_SetUnderlined,  1,  1 );
    wAddMethod( _wxFont, "SetWeight", wxFont_SetWeight,  1,  1 );
    wAddMethod( _wxTimer, "del", wxTimer_del, 0, 0 );
    wAddMethod( _wxTimer, "new", wxTimer_new,  1,  2 );
    wAddMethod( _wxTimer, "dtor", wxTimer_dtor,  0,  0 );
    wAddMethod( _wxTimer, "IsOneShot", wxTimer_IsOneShot,  0,  0 );
    wAddMethod( _wxTimer, "IsRunning", wxTimer_IsRunning,  0,  0 );
    wAddMethod( _wxTimer, "Notify", wxTimer_Notify,  0,  0 );
    wAddMethod( _wxTimer, "SetOwner", wxTimer_SetOwner,  1,  2 );
    wAddMethod( _wxTimer, "Start", wxTimer_Start,  0,  2 );
    wAddMethod( _wxTimer, "Stop", wxTimer_Stop,  0,  0 );
}
